{
    "repository": "05bit/peewee-async",
    "stars": 681,
    "language": "python",
    "size": 398,
    "clone_url": "https://github.com/05bit/peewee-async.git",
    "timestamp": "2023-07-01T10:06:40.386969Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tests.test_deleting",
                "name": "test_delete__count[postgres]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_deleting",
                "name": "test_delete__count[postgres-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_deleting",
                "name": "test_delete__count[postgres-pool]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_deleting",
                "name": "test_delete__count[postgres-pool-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_deleting",
                "name": "test_delete__count[mysql]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_deleting",
                "name": "test_delete__count[mysql-pool]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_deleting",
                "name": "test_delete__by_condition[postgres]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_deleting",
                "name": "test_delete__by_condition[postgres-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_deleting",
                "name": "test_delete__by_condition[postgres-pool]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_deleting",
                "name": "test_delete__by_condition[postgres-pool-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_deleting",
                "name": "test_delete__by_condition[mysql]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_deleting",
                "name": "test_delete__by_condition[mysql-pool]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_deleting",
                "name": "test_delete__return_model[postgres]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_deleting",
                "name": "test_delete__return_model[postgres-ext]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_deleting",
                "name": "test_delete__return_model[postgres-pool]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_deleting",
                "name": "test_delete__return_model[postgres-pool-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert_many[postgres]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert_many[postgres-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert_many[postgres-pool]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert_many[postgres-pool-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert_many[mysql]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert_many[mysql-pool]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert__return_id[postgres]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert__return_id[postgres-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert__return_id[postgres-pool]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert__return_id[postgres-pool-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert__return_id[mysql]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert__return_id[mysql-pool]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert_on_conflict_ignore__last_id_is_none[postgres]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert_on_conflict_ignore__last_id_is_none[postgres-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert_on_conflict_ignore__last_id_is_none[postgres-pool]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert_on_conflict_ignore__last_id_is_none[postgres-pool-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert_on_conflict_ignore__return_model[postgres]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert_on_conflict_ignore__return_model[postgres-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert_on_conflict_ignore__return_model[postgres-pool]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert_on_conflict_ignore__return_model[postgres-pool-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert_on_conflict_ignore__inserted_once[postgres]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert_on_conflict_ignore__inserted_once[postgres-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert_on_conflict_ignore__inserted_once[postgres-pool]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert_on_conflict_ignore__inserted_once[postgres-pool-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert__uuid_pk[postgres]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert__uuid_pk[postgres-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert__uuid_pk[postgres-pool]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert__uuid_pk[postgres-pool-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert__return_model[postgres]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert__return_model[postgres-ext]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert__return_model[postgres-pool]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert__return_model[postgres-pool-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert_many__return_model[postgres]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert_many__return_model[postgres-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert_many__return_model[postgres-pool]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inserting",
                "name": "test_insert_many__return_model[postgres-pool-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.DatabaseTestCase",
                "name": "test_deferred_init",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.DatabaseTestCase",
                "name": "test_proxy_database",
                "time": 0.0,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTestCase",
                "name": "test_allow_sync_is_reverted_for_exc",
                "time": 0.0,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTestCase",
                "name": "test_composite_key",
                "time": 0.0,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTestCase",
                "name": "test_connect_close",
                "time": 0.0,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTestCase",
                "name": "test_count_query",
                "time": 0.0,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTestCase",
                "name": "test_count_query_with_limit",
                "time": 0.0,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTestCase",
                "name": "test_create_obj",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTestCase",
                "name": "test_create_or_get",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTestCase",
                "name": "test_create_uuid_obj",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTestCase",
                "name": "test_delete_obj",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTestCase",
                "name": "test_get_obj_by_id",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTestCase",
                "name": "test_get_obj_by_uuid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTestCase",
                "name": "test_get_or_create",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTestCase",
                "name": "test_indexing_result",
                "time": 0.0,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTestCase",
                "name": "test_many_requests",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTestCase",
                "name": "test_multiple_iterate_over_result",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTestCase",
                "name": "test_raw_query",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTestCase",
                "name": "test_scalar_query",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTestCase",
                "name": "test_select_many_objects",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTestCase",
                "name": "test_update_obj",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTransactionsTestCase",
                "name": "test_atomic_fail_with_disconnect",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTransactionsTestCase",
                "name": "test_atomic_failed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTransactionsTestCase",
                "name": "test_atomic_success",
                "time": 0.0,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_obsolete.ManagerTransactionsTestCase",
                "name": "test_several_transactions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_prefetch",
                "name": "test_prefetch[1-postgres]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_prefetch",
                "name": "test_prefetch[1-postgres-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_prefetch",
                "name": "test_prefetch[1-postgres-pool]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_prefetch",
                "name": "test_prefetch[1-postgres-pool-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_prefetch",
                "name": "test_prefetch[1-mysql]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_prefetch",
                "name": "test_prefetch[1-mysql-pool]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_prefetch",
                "name": "test_prefetch[2-postgres]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_prefetch",
                "name": "test_prefetch[2-postgres-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_prefetch",
                "name": "test_prefetch[2-postgres-pool]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_prefetch",
                "name": "test_prefetch[2-postgres-pool-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_prefetch",
                "name": "test_prefetch[2-mysql]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_prefetch",
                "name": "test_prefetch[2-mysql-pool]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_updating",
                "name": "test_update__count[postgres]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_updating",
                "name": "test_update__count[postgres-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_updating",
                "name": "test_update__count[postgres-pool]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_updating",
                "name": "test_update__count[postgres-pool-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_updating",
                "name": "test_update__count[mysql]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_updating",
                "name": "test_update__count[mysql-pool]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_updating",
                "name": "test_update__field_updated[postgres]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_updating",
                "name": "test_update__field_updated[postgres-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_updating",
                "name": "test_update__field_updated[postgres-pool]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_updating",
                "name": "test_update__field_updated[postgres-pool-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_updating",
                "name": "test_update__field_updated[mysql]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_updating",
                "name": "test_update__field_updated[mysql-pool]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_updating",
                "name": "test_update__returning_model[postgres]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_updating",
                "name": "test_update__returning_model[postgres-ext]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_updating",
                "name": "test_update__returning_model[postgres-pool]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_updating",
                "name": "test_update__returning_model[postgres-pool-ext]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build] \ud83d\ude80  Start image=crawlergpt:latest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/05bit-peewee-async] user=0 workdir=\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v1\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build] \ud83e\uddea  Matrix: map[python-version:3.7]\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build] \u2b50 Run Main actions/checkout@v1\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \u2705  Success - Main actions/checkout@v1\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build] \u2b50 Run Main Set up Python 3.7\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/5604932f-3874-4f66-8174-613cdd247198/act/actions-setup-python@v1/ dst=/var/run/act/actions/actions-setup-python@v1/\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v1/] user=0 workdir=\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v1/dist/index.js] user= workdir=\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udcac  ::debug::isExplicit: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udcac  ::debug::explicit? false\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udcac  ::debug::explicit? true\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udcac  ::debug::explicit? true\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udcac  ::debug::explicit? true\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udcac  ::debug::explicit? true\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udcac  ::debug::explicit? true\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udcac  ::debug::explicit? true\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udcac  ::debug::matched: 3.7.11\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Successfully setup CPython (3.7.11)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v1/.github/python.json\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \u2705  Success - Main Set up Python 3.7\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \u2699  ::set-output:: python-version=3.7.11\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build] \u2b50 Run Main Install dependencies\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (21.2.4)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting pip\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Installing collected packages: pip\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Attempting uninstall: pip\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     Found existing installation: pip 21.2.4\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     Uninstalling pip-21.2.4:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |       Successfully uninstalled pip-21.2.4\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Successfully installed pip-23.1.2\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Obtaining file:///tmp/558156d8-17ed-11ee-8a50-bb14de238602/05bit-peewee-async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Installing build dependencies: started\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Installing build dependencies: finished with status 'done'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Checking if build backend supports build_editable: started\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Checking if build backend supports build_editable: finished with status 'done'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Getting requirements to build editable: started\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Getting requirements to build editable: finished with status 'done'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Preparing editable metadata (pyproject.toml): started\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Preparing editable metadata (pyproject.toml): finished with status 'done'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting peewee<4.0,>=3.15.4 (from peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading peewee-3.16.2.tar.gz (2.9 MB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.9/2.9 MB 34.2 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Installing build dependencies: started\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Installing build dependencies: finished with status 'done'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Getting requirements to build wheel: started\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Getting requirements to build wheel: finished with status 'done'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Preparing metadata (pyproject.toml): started\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting pylint (from peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading pylint-2.17.4-py3-none-any.whl (536 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 536.6/536.6 kB 29.5 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting wheel (from peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Using cached wheel-0.40.0-py3-none-any.whl (64 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting twine (from peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading twine-4.0.2-py3-none-any.whl (36 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting aiomysql (from peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading aiomysql-0.2.0-py3-none-any.whl (44 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 44.2/44.2 kB 1.0 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting aiopg (from peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading aiopg-1.4.0-py3-none-any.whl (34 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting pytest (from peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading pytest-7.4.0-py3-none-any.whl (323 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 323.6/323.6 kB 16.0 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting pytest-asyncio (from peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading pytest_asyncio-0.21.0-py3-none-any.whl (13 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting PyMySQL>=1.0 (from aiomysql->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading PyMySQL-1.1.0-py3-none-any.whl (44 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 44.8/44.8 kB 3.5 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting psycopg2-binary>=2.9.5 (from aiopg->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading psycopg2_binary-2.9.6-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.0/3.0 MB 28.6 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting async-timeout<5.0,>=3.0 (from aiopg->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading async_timeout-4.0.2-py3-none-any.whl (5.8 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting platformdirs>=2.2.0 (from pylint->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting astroid<=2.17.0-dev0,>=2.15.4 (from pylint->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading astroid-2.15.5-py3-none-any.whl (278 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 278.1/278.1 kB 27.6 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting isort<6,>=4.2.5 (from pylint->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading isort-5.11.5-py3-none-any.whl (104 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 104.1/104.1 kB 15.4 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting mccabe<0.8,>=0.6 (from pylint->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading mccabe-0.7.0-py2.py3-none-any.whl (7.3 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting tomlkit>=0.10.1 (from pylint->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading tomlkit-0.11.8-py3-none-any.whl (35 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting typing-extensions>=3.10.0 (from pylint->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading typing_extensions-4.7.0-py3-none-any.whl (33 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting dill>=0.2 (from pylint->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading dill-0.3.6-py3-none-any.whl (110 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 110.5/110.5 kB 16.7 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting tomli>=1.1.0 (from pylint->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting iniconfig (from pytest->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting packaging (from pytest->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 703.8 kB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting pluggy<2.0,>=0.12 (from pytest->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting exceptiongroup>=1.0.0rc8 (from pytest->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting importlib-metadata>=0.12 (from pytest->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting pkginfo>=1.8.1 (from twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading pkginfo-1.9.6-py3-none-any.whl (30 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting readme-renderer>=35.0 (from twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading readme_renderer-37.3-py3-none-any.whl (14 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting requests>=2.20 (from twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.6/62.6 kB 1.2 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting requests-toolbelt!=0.9.0,>=0.8.0 (from twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading requests_toolbelt-1.0.0-py2.py3-none-any.whl (54 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 54.5/54.5 kB 912.6 kB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting urllib3>=1.26.0 (from twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 123.6/123.6 kB 18.6 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting keyring>=15.1 (from twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading keyring-24.1.1-py3-none-any.whl (37 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting rfc3986>=1.4.0 (from twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading rfc3986-2.0.0-py2.py3-none-any.whl (31 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting rich>=12.0.0 (from twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading rich-13.4.2-py3-none-any.whl (239 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 239.4/239.4 kB 24.7 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting lazy-object-proxy>=1.4.0 (from astroid<=2.17.0-dev0,>=2.15.4->pylint->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading lazy_object_proxy-1.9.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (58 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 58.5/58.5 kB 2.7 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting typed-ast<2.0,>=1.4.0 (from astroid<=2.17.0-dev0,>=2.15.4->pylint->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading typed_ast-1.5.4-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (843 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 843.7/843.7 kB 8.3 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting wrapt<2,>=1.11 (from astroid<=2.17.0-dev0,>=2.15.4->pylint->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading wrapt-1.15.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (75 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 75.7/75.7 kB 6.4 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting zipp>=0.5 (from importlib-metadata>=0.12->pytest->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting jaraco.classes (from keyring>=15.1->twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading jaraco.classes-3.2.3-py3-none-any.whl (6.0 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting importlib-resources (from keyring>=15.1->twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading importlib_resources-5.12.0-py3-none-any.whl (36 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting SecretStorage>=3.2 (from keyring>=15.1->twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading SecretStorage-3.3.3-py3-none-any.whl (15 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting jeepney>=0.4.2 (from keyring>=15.1->twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading jeepney-0.8.0-py3-none-any.whl (48 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.4/48.4 kB 2.5 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting bleach>=2.1.0 (from readme-renderer>=35.0->twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading bleach-6.0.0-py3-none-any.whl (162 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 162.5/162.5 kB 8.8 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting docutils>=0.13.1 (from readme-renderer>=35.0->twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading docutils-0.20.1-py3-none-any.whl (572 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 572.7/572.7 kB 13.1 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting Pygments>=2.5.1 (from readme-renderer>=35.0->twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading Pygments-2.15.1-py3-none-any.whl (1.1 MB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.1/1.1 MB 47.7 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting charset-normalizer<4,>=2 (from requests>=2.20->twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 171.0/171.0 kB 7.2 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting idna<4,>=2.5 (from requests>=2.20->twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 3.6 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting certifi>=2017.4.17 (from requests>=2.20->twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 5.5 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting markdown-it-py>=2.2.0 (from rich>=12.0.0->twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading markdown_it_py-2.2.0-py3-none-any.whl (84 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 84.5/84.5 kB 2.1 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting six>=1.9.0 (from bleach>=2.1.0->readme-renderer>=35.0->twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting webencodings (from bleach>=2.1.0->readme-renderer>=35.0->twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting mdurl~=0.1 (from markdown-it-py>=2.2.0->rich>=12.0.0->twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading mdurl-0.1.2-py3-none-any.whl (10.0 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting cryptography>=2.0 (from SecretStorage>=3.2->keyring>=15.1->twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading cryptography-41.0.1-cp37-abi3-manylinux_2_28_x86_64.whl (4.3 MB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4.3/4.3 MB 32.3 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting more-itertools (from jaraco.classes->keyring>=15.1->twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading more_itertools-9.1.0-py3-none-any.whl (54 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 54.2/54.2 kB 1.7 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting cffi>=1.12 (from cryptography>=2.0->SecretStorage>=3.2->keyring>=15.1->twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading cffi-1.15.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (427 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 427.9/427.9 kB 6.8 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Collecting pycparser (from cffi>=1.12->cryptography>=2.0->SecretStorage>=3.2->keyring>=15.1->twine->peewee-async==0.8.1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 118.7/118.7 kB 3.3 MB/s eta 0:00:00\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Building wheels for collected packages: peewee, peewee-async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Building wheel for peewee (pyproject.toml): started\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Building wheel for peewee (pyproject.toml): finished with status 'done'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Created wheel for peewee: filename=peewee-3.16.2-cp37-cp37m-linux_x86_64.whl size=804011 sha256=1685d10b893fbbcc6464e02d0c0f36bd4ac955d7624a184d909df368d363ca72\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/bd/88/20/65c31d9dfbe707bbb89382da00b940caac28b693c3869fb5bb\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Building editable for peewee-async (pyproject.toml): started\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Building editable for peewee-async (pyproject.toml): finished with status 'done'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Created wheel for peewee-async: filename=peewee_async-0.8.1-0.editable-py3-none-any.whl size=4892 sha256=b1d63b044d8e4c59fdb8408279cf94c1a4c8c2a2ae266211ae15af134f455c87\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   Stored in directory: /tmp/pip-ephem-wheel-cache-1wwnqybv/wheels/f9/d5/53/5034641428e1d4e7546c6bb3093317baf26e071406cfbfc960\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Successfully built peewee peewee-async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Installing collected packages: webencodings, peewee, zipp, wrapt, wheel, urllib3, typing-extensions, typed-ast, tomlkit, tomli, six, rfc3986, PyMySQL, Pygments, pycparser, psycopg2-binary, pkginfo, peewee-async, packaging, more-itertools, mdurl, mccabe, lazy-object-proxy, jeepney, isort, iniconfig, idna, exceptiongroup, docutils, dill, charset-normalizer, certifi, requests, platformdirs, markdown-it-py, jaraco.classes, importlib-resources, importlib-metadata, cffi, bleach, async-timeout, astroid, aiomysql, rich, requests-toolbelt, readme-renderer, pylint, pluggy, cryptography, aiopg, SecretStorage, pytest, pytest-asyncio, keyring, twine\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Successfully installed PyMySQL-1.1.0 Pygments-2.15.1 SecretStorage-3.3.3 aiomysql-0.2.0 aiopg-1.4.0 astroid-2.15.5 async-timeout-4.0.2 bleach-6.0.0 certifi-2023.5.7 cffi-1.15.1 charset-normalizer-3.1.0 cryptography-41.0.1 dill-0.3.6 docutils-0.20.1 exceptiongroup-1.1.1 idna-3.4 importlib-metadata-6.7.0 importlib-resources-5.12.0 iniconfig-2.0.0 isort-5.11.5 jaraco.classes-3.2.3 jeepney-0.8.0 keyring-24.1.1 lazy-object-proxy-1.9.0 markdown-it-py-2.2.0 mccabe-0.7.0 mdurl-0.1.2 more-itertools-9.1.0 packaging-23.1 peewee-3.16.2 peewee-async-0.8.1 pkginfo-1.9.6 platformdirs-3.8.0 pluggy-1.2.0 psycopg2-binary-2.9.6 pycparser-2.21 pylint-2.17.4 pytest-7.4.0 pytest-asyncio-0.21.0 readme-renderer-37.3 requests-2.31.0 requests-toolbelt-1.0.0 rfc3986-2.0.0 rich-13.4.2 six-1.16.0 tomli-2.0.1 tomlkit-0.11.8 twine-4.0.2 typed-ast-1.5.4 typing-extensions-4.7.0 urllib3-2.0.3 webencodings-0.5.1 wheel-0.40.0 wrapt-1.15.0 zipp-3.15.0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | [notice] To update, run: pip install --upgrade pip\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \u2705  Success - Main Install dependencies\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build] \u2b50 Run Main Run tests\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ============================= test session starts ==============================\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | platform linux -- Python 3.7.11, pytest-7.4.0, pluggy-1.2.0 -- /opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | cachedir: .pytest_cache\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/05bit-peewee-async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | configfile: setup.cfg\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | plugins: asyncio-0.21.0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | asyncio: mode=auto\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | collecting ... collected 105 items\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_deleting.py::test_delete__count[postgres] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_deleting.py::test_delete__count[postgres-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_deleting.py::test_delete__count[postgres-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_deleting.py::test_delete__count[postgres-pool-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_deleting.py::test_delete__count[mysql] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_deleting.py::test_delete__count[mysql-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_deleting.py::test_delete__by_condition[postgres] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_deleting.py::test_delete__by_condition[postgres-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_deleting.py::test_delete__by_condition[postgres-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_deleting.py::test_delete__by_condition[postgres-pool-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_deleting.py::test_delete__by_condition[mysql] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_deleting.py::test_delete__by_condition[mysql-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_deleting.py::test_delete__return_model[postgres] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_deleting.py::test_delete__return_model[postgres-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_deleting.py::test_delete__return_model[postgres-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_deleting.py::test_delete__return_model[postgres-pool-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert_many[postgres] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert_many[postgres-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert_many[postgres-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert_many[postgres-pool-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert_many[mysql] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert_many[mysql-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert__return_id[postgres] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert__return_id[postgres-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert__return_id[postgres-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert__return_id[postgres-pool-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert__return_id[mysql] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert__return_id[mysql-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert_on_conflict_ignore__last_id_is_none[postgres] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert_on_conflict_ignore__last_id_is_none[postgres-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert_on_conflict_ignore__last_id_is_none[postgres-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert_on_conflict_ignore__last_id_is_none[postgres-pool-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert_on_conflict_ignore__return_model[postgres] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert_on_conflict_ignore__return_model[postgres-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert_on_conflict_ignore__return_model[postgres-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert_on_conflict_ignore__return_model[postgres-pool-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert_on_conflict_ignore__inserted_once[postgres] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert_on_conflict_ignore__inserted_once[postgres-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert_on_conflict_ignore__inserted_once[postgres-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert_on_conflict_ignore__inserted_once[postgres-pool-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert__uuid_pk[postgres] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert__uuid_pk[postgres-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert__uuid_pk[postgres-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert__uuid_pk[postgres-pool-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert__return_model[postgres] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert__return_model[postgres-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert__return_model[postgres-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert__return_model[postgres-pool-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert_many__return_model[postgres] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert_many__return_model[postgres-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert_many__return_model[postgres-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_inserting.py::test_insert_many__return_model[postgres-pool-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::DatabaseTestCase::test_deferred_init ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::DatabaseTestCase::test_proxy_database ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTestCase::test_allow_sync_is_reverted_for_exc ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTestCase::test_composite_key ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTestCase::test_connect_close ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTestCase::test_count_query ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTestCase::test_count_query_with_limit ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTestCase::test_create_obj ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTestCase::test_create_or_get ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTestCase::test_create_uuid_obj ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTestCase::test_delete_obj ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTestCase::test_get_obj_by_id ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTestCase::test_get_obj_by_uuid ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTestCase::test_get_or_create ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTestCase::test_indexing_result ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTestCase::test_many_requests ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTestCase::test_multiple_iterate_over_result ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTestCase::test_raw_query ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTestCase::test_scalar_query ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTestCase::test_select_many_objects ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTestCase::test_update_obj ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTransactionsTestCase::test_atomic_fail_with_disconnect ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTransactionsTestCase::test_atomic_failed ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTransactionsTestCase::test_atomic_success ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py::ManagerTransactionsTestCase::test_several_transactions ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_prefetch.py::test_prefetch[1-postgres] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_prefetch.py::test_prefetch[1-postgres-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_prefetch.py::test_prefetch[1-postgres-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_prefetch.py::test_prefetch[1-postgres-pool-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_prefetch.py::test_prefetch[1-mysql] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_prefetch.py::test_prefetch[1-mysql-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_prefetch.py::test_prefetch[2-postgres] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_prefetch.py::test_prefetch[2-postgres-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_prefetch.py::test_prefetch[2-postgres-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_prefetch.py::test_prefetch[2-postgres-pool-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_prefetch.py::test_prefetch[2-mysql] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_prefetch.py::test_prefetch[2-mysql-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_updating.py::test_update__count[postgres] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_updating.py::test_update__count[postgres-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_updating.py::test_update__count[postgres-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_updating.py::test_update__count[postgres-pool-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_updating.py::test_update__count[mysql] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_updating.py::test_update__count[mysql-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_updating.py::test_update__field_updated[postgres] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_updating.py::test_update__field_updated[postgres-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_updating.py::test_update__field_updated[postgres-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_updating.py::test_update__field_updated[postgres-pool-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_updating.py::test_update__field_updated[mysql] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_updating.py::test_update__field_updated[mysql-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_updating.py::test_update__returning_model[postgres] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_updating.py::test_update__returning_model[postgres-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_updating.py::test_update__returning_model[postgres-pool] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_updating.py::test_update__returning_model[postgres-pool-ext] ERROR\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ==================================== ERRORS ====================================\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ________________ ERROR at setup of test_delete__count[postgres] ________________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0cd6b6d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0cd6b6d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_delete__count[postgres]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0ccad9e0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0ccada70>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ______________ ERROR at setup of test_delete__count[postgres-ext] ______________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c91c8d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c91c8d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_delete__count[postgres-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0cd11440>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0cd114d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _____________ ERROR at setup of test_delete__count[postgres-pool] ______________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0b9c3250>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0b9c3250>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_delete__count[postgres-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c91d320>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c91d3b0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ___________ ERROR at setup of test_delete__count[postgres-pool-ext] ____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0bff8890>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0bff8890>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_delete__count[postgres-pool-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0cd11320>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c21fdd0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _________________ ERROR at setup of test_delete__count[mysql] __________________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c3ea910>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >                               (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:645: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:728: in create_connection\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise err\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | address = ('127.0.0.1', 3306), timeout = 10, source_address = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                           source_address=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"Connect to *address* and return the socket object.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         port)``) and return the socket object.  Passing the optional\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         *timeout* parameter will set the timeout on the socket instance\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         before attempting to connect.  If no *timeout* is supplied, the\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for the socket to bind as a source address before making the connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         A host of '' or port 0 tells the OS to use the default.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         host, port = address\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         err = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             af, socktype, proto, canonname, sa = res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock = socket(af, socktype, proto)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if source_address:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.bind(source_address)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               sock.connect(sa)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:716: ConnectionRefusedError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.MySQLDatabase object at 0x7f2e0c3eab50>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c3ea910>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               pymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.MySQLDatabase object at 0x7f2e0c3eab50>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_type != %s ORDER BY table_name'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('VIEW',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c3ea910>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_delete__count[mysql]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c1ac5f0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c1ac7a0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4186: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return [table for table, in self.execute_sql(query, ('VIEW',))]\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c3ea910>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _______________ ERROR at setup of test_delete__count[mysql-pool] _______________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0cab4d50>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >                               (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:645: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:728: in create_connection\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise err\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | address = ('127.0.0.1', 3306), timeout = 10, source_address = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                           source_address=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"Connect to *address* and return the socket object.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         port)``) and return the socket object.  Passing the optional\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         *timeout* parameter will set the timeout on the socket instance\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         before attempting to connect.  If no *timeout* is supplied, the\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for the socket to bind as a source address before making the connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         A host of '' or port 0 tells the OS to use the default.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         host, port = address\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         err = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             af, socktype, proto, canonname, sa = res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock = socket(af, socktype, proto)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if source_address:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.bind(source_address)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               sock.connect(sa)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:716: ConnectionRefusedError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledMySQLDatabase object at 0x7f2e0cab4b10>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0cab4d50>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               pymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledMySQLDatabase object at 0x7f2e0cab4b10>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_type != %s ORDER BY table_name'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('VIEW',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0cab4d50>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_delete__count[mysql-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0cbdbd40>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0cbdbef0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4186: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return [table for table, in self.execute_sql(query, ('VIEW',))]\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0cab4d50>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ____________ ERROR at setup of test_delete__by_condition[postgres] _____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0caf0950>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0caf0950>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_delete__by_condition[postgres]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0bf265f0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0bf268c0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | __________ ERROR at setup of test_delete__by_condition[postgres-ext] ___________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c9b5a90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c9b5a90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_delete__by_condition[postgres-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0caa13b0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0caa15f0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | __________ ERROR at setup of test_delete__by_condition[postgres-pool] __________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0c488ad0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0c488ad0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_delete__by_condition[postgres-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c648170>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c6484d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ________ ERROR at setup of test_delete__by_condition[postgres-pool-ext] ________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0c0c8450>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0c0c8450>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_delete__by_condition[postgres-pool-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0caf3320>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0caf3a70>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ______________ ERROR at setup of test_delete__by_condition[mysql] ______________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c965890>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >                               (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:645: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:728: in create_connection\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise err\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | address = ('127.0.0.1', 3306), timeout = 10, source_address = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                           source_address=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"Connect to *address* and return the socket object.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         port)``) and return the socket object.  Passing the optional\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         *timeout* parameter will set the timeout on the socket instance\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         before attempting to connect.  If no *timeout* is supplied, the\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for the socket to bind as a source address before making the connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         A host of '' or port 0 tells the OS to use the default.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         host, port = address\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         err = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             af, socktype, proto, canonname, sa = res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock = socket(af, socktype, proto)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if source_address:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.bind(source_address)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               sock.connect(sa)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:716: ConnectionRefusedError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.MySQLDatabase object at 0x7f2e0c965190>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c965890>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               pymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.MySQLDatabase object at 0x7f2e0c965190>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_type != %s ORDER BY table_name'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('VIEW',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c965890>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_delete__by_condition[mysql]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0caa1290>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0caa1b00>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4186: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return [table for table, in self.execute_sql(query, ('VIEW',))]\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c965890>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ___________ ERROR at setup of test_delete__by_condition[mysql-pool] ____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0b989bd0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >                               (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:645: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:728: in create_connection\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise err\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | address = ('127.0.0.1', 3306), timeout = 10, source_address = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                           source_address=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"Connect to *address* and return the socket object.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         port)``) and return the socket object.  Passing the optional\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         *timeout* parameter will set the timeout on the socket instance\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         before attempting to connect.  If no *timeout* is supplied, the\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for the socket to bind as a source address before making the connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         A host of '' or port 0 tells the OS to use the default.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         host, port = address\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         err = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             af, socktype, proto, canonname, sa = res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock = socket(af, socktype, proto)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if source_address:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.bind(source_address)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               sock.connect(sa)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:716: ConnectionRefusedError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledMySQLDatabase object at 0x7f2e0b9899d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0b989bd0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               pymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledMySQLDatabase object at 0x7f2e0b9899d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_type != %s ORDER BY table_name'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('VIEW',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0b989bd0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_delete__by_condition[mysql-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c94bcb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c648830>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4186: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return [table for table, in self.execute_sql(query, ('VIEW',))]\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0b989bd0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ____________ ERROR at setup of test_delete__return_model[postgres] _____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0c046750>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0c046750>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_delete__return_model[postgres]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c4ac9e0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c4ace60>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | __________ ERROR at setup of test_delete__return_model[postgres-ext] ___________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0baee0d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0baee0d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_delete__return_model[postgres-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0b7b2320>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c4ac290>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | __________ ERROR at setup of test_delete__return_model[postgres-pool] __________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0c721510>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0c721510>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_delete__return_model[postgres-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c67e950>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c67e560>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ________ ERROR at setup of test_delete__return_model[postgres-pool-ext] ________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0c9b3610>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0c9b3610>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_delete__return_model[postgres-pool-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0caf3440>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c67eb90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _________________ ERROR at setup of test_insert_many[postgres] _________________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0c0c5a10>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0c0c5a10>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert_many[postgres]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0b95db90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0b95dd40>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _______________ ERROR at setup of test_insert_many[postgres-ext] _______________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c656a90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c656a90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert_many[postgres-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c246560>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c246320>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ______________ ERROR at setup of test_insert_many[postgres-pool] _______________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0cae2ad0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0cae2ad0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert_many[postgres-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0b95db90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0b95dcb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ____________ ERROR at setup of test_insert_many[postgres-pool-ext] _____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0cbb6450>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0cbb6450>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert_many[postgres-pool-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c99af80>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c99add0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | __________________ ERROR at setup of test_insert_many[mysql] ___________________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0b9cfa10>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >                               (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:645: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:728: in create_connection\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise err\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | address = ('127.0.0.1', 3306), timeout = 10, source_address = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                           source_address=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"Connect to *address* and return the socket object.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         port)``) and return the socket object.  Passing the optional\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         *timeout* parameter will set the timeout on the socket instance\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         before attempting to connect.  If no *timeout* is supplied, the\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for the socket to bind as a source address before making the connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         A host of '' or port 0 tells the OS to use the default.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         host, port = address\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         err = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             af, socktype, proto, canonname, sa = res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock = socket(af, socktype, proto)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if source_address:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.bind(source_address)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               sock.connect(sa)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:716: ConnectionRefusedError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.MySQLDatabase object at 0x7f2e0b9cf250>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0b9cfa10>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               pymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.MySQLDatabase object at 0x7f2e0b9cf250>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_type != %s ORDER BY table_name'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('VIEW',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0b9cfa10>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert_many[mysql]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c6818c0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c681830>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4186: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return [table for table, in self.execute_sql(query, ('VIEW',))]\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0b9cfa10>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ________________ ERROR at setup of test_insert_many[mysql-pool] ________________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c23bf10>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >                               (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:645: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:728: in create_connection\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise err\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | address = ('127.0.0.1', 3306), timeout = 10, source_address = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                           source_address=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"Connect to *address* and return the socket object.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         port)``) and return the socket object.  Passing the optional\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         *timeout* parameter will set the timeout on the socket instance\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         before attempting to connect.  If no *timeout* is supplied, the\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for the socket to bind as a source address before making the connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         A host of '' or port 0 tells the OS to use the default.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         host, port = address\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         err = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             af, socktype, proto, canonname, sa = res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock = socket(af, socktype, proto)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if source_address:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.bind(source_address)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               sock.connect(sa)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:716: ConnectionRefusedError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledMySQLDatabase object at 0x7f2e0c23bd50>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c23bf10>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               pymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledMySQLDatabase object at 0x7f2e0c23bd50>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_type != %s ORDER BY table_name'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('VIEW',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c23bf10>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert_many[mysql-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c246b00>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c6b7f80>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4186: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return [table for table, in self.execute_sql(query, ('VIEW',))]\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c23bf10>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ______________ ERROR at setup of test_insert__return_id[postgres] ______________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0c050e50>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0c050e50>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert__return_id[postgres]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c6b70e0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c6b7a70>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ____________ ERROR at setup of test_insert__return_id[postgres-ext] ____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0b737090>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0b737090>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert__return_id[postgres-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c0c2710>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0b6ea440>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ___________ ERROR at setup of test_insert__return_id[postgres-pool] ____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0cd42190>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0cd42190>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert__return_id[postgres-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c6b7a70>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c6b70e0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _________ ERROR at setup of test_insert__return_id[postgres-pool-ext] __________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0c2ed650>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0c2ed650>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert__return_id[postgres-pool-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c18c710>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c18c440>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _______________ ERROR at setup of test_insert__return_id[mysql] ________________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0bb3c5d0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >                               (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:645: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:728: in create_connection\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise err\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | address = ('127.0.0.1', 3306), timeout = 10, source_address = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                           source_address=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"Connect to *address* and return the socket object.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         port)``) and return the socket object.  Passing the optional\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         *timeout* parameter will set the timeout on the socket instance\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         before attempting to connect.  If no *timeout* is supplied, the\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for the socket to bind as a source address before making the connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         A host of '' or port 0 tells the OS to use the default.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         host, port = address\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         err = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             af, socktype, proto, canonname, sa = res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock = socket(af, socktype, proto)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if source_address:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.bind(source_address)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               sock.connect(sa)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:716: ConnectionRefusedError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.MySQLDatabase object at 0x7f2e0bb3cc10>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0bb3c5d0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               pymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.MySQLDatabase object at 0x7f2e0bb3cc10>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_type != %s ORDER BY table_name'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('VIEW',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0bb3c5d0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert__return_id[mysql]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0bda1a70>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0bda18c0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4186: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return [table for table, in self.execute_sql(query, ('VIEW',))]\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0bb3c5d0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _____________ ERROR at setup of test_insert__return_id[mysql-pool] _____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c52b190>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >                               (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:645: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:728: in create_connection\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise err\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | address = ('127.0.0.1', 3306), timeout = 10, source_address = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                           source_address=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"Connect to *address* and return the socket object.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         port)``) and return the socket object.  Passing the optional\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         *timeout* parameter will set the timeout on the socket instance\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         before attempting to connect.  If no *timeout* is supplied, the\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for the socket to bind as a source address before making the connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         A host of '' or port 0 tells the OS to use the default.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         host, port = address\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         err = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             af, socktype, proto, canonname, sa = res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock = socket(af, socktype, proto)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if source_address:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.bind(source_address)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               sock.connect(sa)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:716: ConnectionRefusedError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledMySQLDatabase object at 0x7f2e0c52b610>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c52b190>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               pymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledMySQLDatabase object at 0x7f2e0c52b610>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_type != %s ORDER BY table_name'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('VIEW',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c52b190>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert__return_id[mysql-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c27ecb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c27ef80>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4186: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return [table for table, in self.execute_sql(query, ('VIEW',))]\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c52b190>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ ERROR at setup of test_insert_on_conflict_ignore__last_id_is_none[postgres] __\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0c408a90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0c408a90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert_on_conflict_ignore__last_id_is_none[postgres]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c18cc20>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c18c560>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ ERROR at setup of test_insert_on_conflict_ignore__last_id_is_none[postgres-ext] _\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c9b3a50>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c9b3a50>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert_on_conflict_ignore__last_id_is_none[postgres-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c27ed40>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c27ee60>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ ERROR at setup of test_insert_on_conflict_ignore__last_id_is_none[postgres-pool] _\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0bffc190>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0bffc190>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert_on_conflict_ignore__last_id_is_none[postgres-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0bb2c170>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0bb2c320>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ ERROR at setup of test_insert_on_conflict_ignore__last_id_is_none[postgres-pool-ext] _\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0c05f750>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0c05f750>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert_on_conflict_ignore__last_id_is_none[postgres-pool-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c1bdb90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c1bda70>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ___ ERROR at setup of test_insert_on_conflict_ignore__return_model[postgres] ___\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0c3deed0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0c3deed0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert_on_conflict_ignore__return_model[postgres]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0cd2b710>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0b606050>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ ERROR at setup of test_insert_on_conflict_ignore__return_model[postgres-ext] _\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0bfa2f90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0bfa2f90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert_on_conflict_ignore__return_model[postgres-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0b991b90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0b9919e0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ ERROR at setup of test_insert_on_conflict_ignore__return_model[postgres-pool] _\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0b98fad0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0b98fad0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert_on_conflict_ignore__return_model[postgres-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0b606950>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0b6063b0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ ERROR at setup of test_insert_on_conflict_ignore__return_model[postgres-pool-ext] _\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0cd1fad0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0cd1fad0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert_on_conflict_ignore__return_model[postgres-pool-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0be7d050>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0be7dc20>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | __ ERROR at setup of test_insert_on_conflict_ignore__inserted_once[postgres] ___\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0cbe1150>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0cbe1150>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert_on_conflict_ignore__inserted_once[postgres]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c1bdc20>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0be7d320>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ ERROR at setup of test_insert_on_conflict_ignore__inserted_once[postgres-ext] _\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c097d90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c097d90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert_on_conflict_ignore__inserted_once[postgres-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0b9919e0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0b991b90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ ERROR at setup of test_insert_on_conflict_ignore__inserted_once[postgres-pool] _\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0c1c8dd0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0c1c8dd0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert_on_conflict_ignore__inserted_once[postgres-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0b712b90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0b7125f0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ ERROR at setup of test_insert_on_conflict_ignore__inserted_once[postgres-pool-ext] _\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0cd57650>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0cd57650>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert_on_conflict_ignore__inserted_once[postgres-pool-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c598c20>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c598e60>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _______________ ERROR at setup of test_insert__uuid_pk[postgres] _______________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0c399310>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0c399310>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert__uuid_pk[postgres]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0b991b90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c48e7a0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _____________ ERROR at setup of test_insert__uuid_pk[postgres-ext] _____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c6178d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c6178d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert__uuid_pk[postgres-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0b9a0b90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0b9a0e60>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ____________ ERROR at setup of test_insert__uuid_pk[postgres-pool] _____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0c6b3b50>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0c6b3b50>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert__uuid_pk[postgres-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0b9a0cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0b9a0f80>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | __________ ERROR at setup of test_insert__uuid_pk[postgres-pool-ext] ___________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0c00be90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0c00be90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert__uuid_pk[postgres-pool-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c6a9c20>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c6a9cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ____________ ERROR at setup of test_insert__return_model[postgres] _____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0c5faf10>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0c5faf10>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert__return_model[postgres]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0b7125f0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0b602440>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | __________ ERROR at setup of test_insert__return_model[postgres-ext] ___________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c231350>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c231350>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert__return_model[postgres-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0b9bc560>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0b9bc7a0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | __________ ERROR at setup of test_insert__return_model[postgres-pool] __________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0c1aa5d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0c1aa5d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert__return_model[postgres-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0b4c4cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0b6027a0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ________ ERROR at setup of test_insert__return_model[postgres-pool-ext] ________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0c1b1910>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0c1b1910>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert__return_model[postgres-pool-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0cb99d40>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0cb99dd0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | __________ ERROR at setup of test_insert_many__return_model[postgres] __________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0b746d90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0b746d90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert_many__return_model[postgres]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c6898c0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c6894d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ________ ERROR at setup of test_insert_many__return_model[postgres-ext] ________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0b8168d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0b8168d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert_many__return_model[postgres-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c3d8e60>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c3d8ef0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _______ ERROR at setup of test_insert_many__return_model[postgres-pool] ________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0b7fd210>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0b7fd210>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert_many__return_model[postgres-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c1d0ef0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c1d0050>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _____ ERROR at setup of test_insert_many__return_model[postgres-pool-ext] ______\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0b7dc6d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0b7dc6d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_insert_many__return_model[postgres-pool-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c751680>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c7519e0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ____________ ERROR at setup of DatabaseTestCase.test_deferred_init _____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ------------------------------ Captured log setup ------------------------------\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR    asyncio:base_events.py:1619 Future exception was never retrieved\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | future: <Future finished exception=OperationalError('Connection refused\\n\\tIs the server running on that host and accepting TCP/IP connections?\\n')>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | Traceback (most recent call last):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   File \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/05bit-peewee-async/peewee_async.py\", line 731, in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   File \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/05bit-peewee-async/peewee_async.py\", line 896, in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   File \"/opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py\", line 300, in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   File \"/opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py\", line 343, in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   File \"/opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py\", line 1225, in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   File \"/opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py\", line 881, in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   File \"/opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py\", line 442, in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   File \"/opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py\", line 788, in _ready\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ____________ ERROR at setup of DatabaseTestCase.test_proxy_database ____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ____ ERROR at setup of ManagerTestCase.test_allow_sync_is_reverted_for_exc _____\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _____________ ERROR at setup of ManagerTestCase.test_composite_key _____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _____________ ERROR at setup of ManagerTestCase.test_connect_close _____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ______________ ERROR at setup of ManagerTestCase.test_count_query ______________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ________ ERROR at setup of ManagerTestCase.test_count_query_with_limit _________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ______________ ERROR at setup of ManagerTestCase.test_create_obj _______________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _____________ ERROR at setup of ManagerTestCase.test_create_or_get _____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ____________ ERROR at setup of ManagerTestCase.test_create_uuid_obj ____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ______________ ERROR at setup of ManagerTestCase.test_delete_obj _______________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _____________ ERROR at setup of ManagerTestCase.test_get_obj_by_id _____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ____________ ERROR at setup of ManagerTestCase.test_get_obj_by_uuid ____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _____________ ERROR at setup of ManagerTestCase.test_get_or_create _____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ____________ ERROR at setup of ManagerTestCase.test_indexing_result ____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _____________ ERROR at setup of ManagerTestCase.test_many_requests _____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _____ ERROR at setup of ManagerTestCase.test_multiple_iterate_over_result ______\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _______________ ERROR at setup of ManagerTestCase.test_raw_query _______________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _____________ ERROR at setup of ManagerTestCase.test_scalar_query ______________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | __________ ERROR at setup of ManagerTestCase.test_select_many_objects __________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ______________ ERROR at setup of ManagerTestCase.test_update_obj _______________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ ERROR at setup of ManagerTransactionsTestCase.test_atomic_fail_with_disconnect _\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _______ ERROR at setup of ManagerTransactionsTestCase.test_atomic_failed _______\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ______ ERROR at setup of ManagerTransactionsTestCase.test_atomic_success _______\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ___ ERROR at setup of ManagerTransactionsTestCase.test_several_transactions ____\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def setUpModule():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiopg:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiopg is not installed, ignoring PostgreSQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('postgres'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if not aiomysql:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             print(\"aiomysql is not installed, ignoring MySQL tests\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             for key in list(DB_CLASSES.keys()):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if key.startswith('mysql'):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     DB_CLASSES.pop(key)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         loop = asyncio.new_event_loop()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         all_databases = load_databases(only=None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for key, database in all_databases.items():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             connect = database.connect_async(loop=loop)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           loop.run_until_complete(connect)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/test_obsolete.py:47: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:731: in connect_async\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await conn.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:896: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:300: in from_pool_fill\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._fill_free_pool(False)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/pool.py:343: in _fill_free_pool\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self._conn_kwargs,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:1225: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await self._poll(self._waiter, self._timeout)  # type: ignore\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:881: in _poll\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     await asyncio.wait_for(self._waiter, timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/tasks.py:442: in wait_for\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return fut.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | weak_self = <weakref at 0x7f2e0bfe2fb0; to 'Connection' at 0x7f2e0cc257d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @staticmethod\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _ready(weak_self: \"weakref.ref[Any]\") -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self = cast(Connection, weak_self())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if self is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         waiter = self._waiter\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           state = self._conn.poll()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E           \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/aiopg/connection.py:788: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _________________ ERROR at setup of test_prefetch[1-postgres] __________________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0f9f6090>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0f9f6090>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_prefetch[1-postgres]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0f9e3c20>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0f9e3170>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _______________ ERROR at setup of test_prefetch[1-postgres-ext] ________________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c145f50>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c145f50>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_prefetch[1-postgres-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c3590e0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0fa0c7a0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _______________ ERROR at setup of test_prefetch[1-postgres-pool] _______________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0b6d2a50>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0b6d2a50>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_prefetch[1-postgres-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0f9e3b90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0f9e3170>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _____________ ERROR at setup of test_prefetch[1-postgres-pool-ext] _____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0c278c90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0c278c90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_prefetch[1-postgres-pool-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c3590e0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0b6f2dd0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ___________________ ERROR at setup of test_prefetch[1-mysql] ___________________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c9bf110>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >                               (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:645: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:728: in create_connection\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise err\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | address = ('127.0.0.1', 3306), timeout = 10, source_address = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                           source_address=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"Connect to *address* and return the socket object.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         port)``) and return the socket object.  Passing the optional\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         *timeout* parameter will set the timeout on the socket instance\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         before attempting to connect.  If no *timeout* is supplied, the\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for the socket to bind as a source address before making the connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         A host of '' or port 0 tells the OS to use the default.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         host, port = address\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         err = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             af, socktype, proto, canonname, sa = res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock = socket(af, socktype, proto)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if source_address:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.bind(source_address)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               sock.connect(sa)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:716: ConnectionRefusedError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.MySQLDatabase object at 0x7f2e0c97af90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c9bf110>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               pymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.MySQLDatabase object at 0x7f2e0c97af90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_type != %s ORDER BY table_name'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('VIEW',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c9bf110>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_prefetch[1-mysql]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0fa0c7a0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0fa0cdd0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4186: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return [table for table, in self.execute_sql(query, ('VIEW',))]\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c9bf110>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ________________ ERROR at setup of test_prefetch[1-mysql-pool] _________________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0cbf99d0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >                               (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:645: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:728: in create_connection\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise err\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | address = ('127.0.0.1', 3306), timeout = 10, source_address = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                           source_address=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"Connect to *address* and return the socket object.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         port)``) and return the socket object.  Passing the optional\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         *timeout* parameter will set the timeout on the socket instance\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         before attempting to connect.  If no *timeout* is supplied, the\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for the socket to bind as a source address before making the connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         A host of '' or port 0 tells the OS to use the default.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         host, port = address\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         err = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             af, socktype, proto, canonname, sa = res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock = socket(af, socktype, proto)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if source_address:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.bind(source_address)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               sock.connect(sa)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:716: ConnectionRefusedError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledMySQLDatabase object at 0x7f2e0cbf92d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0cbf99d0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               pymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledMySQLDatabase object at 0x7f2e0cbf92d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_type != %s ORDER BY table_name'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('VIEW',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0cbf99d0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_prefetch[1-mysql-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c749830>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0bf34d40>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4186: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return [table for table, in self.execute_sql(query, ('VIEW',))]\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0cbf99d0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _________________ ERROR at setup of test_prefetch[2-postgres] __________________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0bde0b90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0bde0b90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_prefetch[2-postgres]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0b6f2d40>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0b3000e0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _______________ ERROR at setup of test_prefetch[2-postgres-ext] ________________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c9ffc10>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c9ffc10>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_prefetch[2-postgres-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0bf34d40>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0b621cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _______________ ERROR at setup of test_prefetch[2-postgres-pool] _______________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0bf977d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0bf977d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_prefetch[2-postgres-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0f9d9a70>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c2730e0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _____________ ERROR at setup of test_prefetch[2-postgres-pool-ext] _____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0cb80ad0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0cb80ad0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_prefetch[2-postgres-pool-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0b6215f0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0b621710>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ___________________ ERROR at setup of test_prefetch[2-mysql] ___________________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c9fb810>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >                               (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:645: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:728: in create_connection\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise err\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | address = ('127.0.0.1', 3306), timeout = 10, source_address = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                           source_address=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"Connect to *address* and return the socket object.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         port)``) and return the socket object.  Passing the optional\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         *timeout* parameter will set the timeout on the socket instance\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         before attempting to connect.  If no *timeout* is supplied, the\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for the socket to bind as a source address before making the connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         A host of '' or port 0 tells the OS to use the default.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         host, port = address\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         err = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             af, socktype, proto, canonname, sa = res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock = socket(af, socktype, proto)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if source_address:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.bind(source_address)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               sock.connect(sa)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:716: ConnectionRefusedError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.MySQLDatabase object at 0x7f2e0c9fb610>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c9fb810>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               pymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.MySQLDatabase object at 0x7f2e0c9fb610>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_type != %s ORDER BY table_name'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('VIEW',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c9fb810>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_prefetch[2-mysql]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c460c20>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c4608c0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4186: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return [table for table, in self.execute_sql(query, ('VIEW',))]\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c9fb810>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ________________ ERROR at setup of test_prefetch[2-mysql-pool] _________________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0bd626d0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >                               (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:645: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:728: in create_connection\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise err\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | address = ('127.0.0.1', 3306), timeout = 10, source_address = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                           source_address=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"Connect to *address* and return the socket object.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         port)``) and return the socket object.  Passing the optional\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         *timeout* parameter will set the timeout on the socket instance\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         before attempting to connect.  If no *timeout* is supplied, the\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for the socket to bind as a source address before making the connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         A host of '' or port 0 tells the OS to use the default.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         host, port = address\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         err = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             af, socktype, proto, canonname, sa = res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock = socket(af, socktype, proto)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if source_address:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.bind(source_address)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               sock.connect(sa)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:716: ConnectionRefusedError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledMySQLDatabase object at 0x7f2e0bd62490>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0bd626d0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               pymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledMySQLDatabase object at 0x7f2e0bd62490>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_type != %s ORDER BY table_name'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('VIEW',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0bd626d0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_prefetch[2-mysql-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0f9ebef0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0f9eb200>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4186: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return [table for table, in self.execute_sql(query, ('VIEW',))]\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0bd626d0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ________________ ERROR at setup of test_update__count[postgres] ________________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0bb3c350>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0bb3c350>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_update__count[postgres]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c273290>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0b6215f0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ______________ ERROR at setup of test_update__count[postgres-ext] ______________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c15d3d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c15d3d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_update__count[postgres-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c9d8170>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c98e950>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _____________ ERROR at setup of test_update__count[postgres-pool] ______________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0bdf4b50>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0bdf4b50>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_update__count[postgres-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c273ef0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c273f80>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ___________ ERROR at setup of test_update__count[postgres-pool-ext] ____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0ca06fd0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0ca06fd0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_update__count[postgres-pool-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0b6d9440>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0b6d9680>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _________________ ERROR at setup of test_update__count[mysql] __________________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c561ed0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >                               (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:645: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:728: in create_connection\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise err\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | address = ('127.0.0.1', 3306), timeout = 10, source_address = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                           source_address=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"Connect to *address* and return the socket object.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         port)``) and return the socket object.  Passing the optional\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         *timeout* parameter will set the timeout on the socket instance\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         before attempting to connect.  If no *timeout* is supplied, the\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for the socket to bind as a source address before making the connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         A host of '' or port 0 tells the OS to use the default.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         host, port = address\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         err = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             af, socktype, proto, canonname, sa = res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock = socket(af, socktype, proto)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if source_address:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.bind(source_address)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               sock.connect(sa)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:716: ConnectionRefusedError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.MySQLDatabase object at 0x7f2e0c561850>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c561ed0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               pymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.MySQLDatabase object at 0x7f2e0c561850>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_type != %s ORDER BY table_name'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('VIEW',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c561ed0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_update__count[mysql]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c0bb710>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c467830>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4186: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return [table for table, in self.execute_sql(query, ('VIEW',))]\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c561ed0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _______________ ERROR at setup of test_update__count[mysql-pool] _______________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c226b90>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >                               (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:645: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:728: in create_connection\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise err\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | address = ('127.0.0.1', 3306), timeout = 10, source_address = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                           source_address=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"Connect to *address* and return the socket object.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         port)``) and return the socket object.  Passing the optional\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         *timeout* parameter will set the timeout on the socket instance\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         before attempting to connect.  If no *timeout* is supplied, the\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for the socket to bind as a source address before making the connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         A host of '' or port 0 tells the OS to use the default.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         host, port = address\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         err = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             af, socktype, proto, canonname, sa = res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock = socket(af, socktype, proto)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if source_address:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.bind(source_address)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               sock.connect(sa)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:716: ConnectionRefusedError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledMySQLDatabase object at 0x7f2e0bacf6d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c226b90>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               pymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledMySQLDatabase object at 0x7f2e0bacf6d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_type != %s ORDER BY table_name'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('VIEW',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c226b90>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_update__count[mysql-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c661e60>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c661b00>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4186: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return [table for table, in self.execute_sql(query, ('VIEW',))]\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c226b90>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ____________ ERROR at setup of test_update__field_updated[postgres] ____________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0c422c90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0c422c90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_update__field_updated[postgres]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c567680>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c567830>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | __________ ERROR at setup of test_update__field_updated[postgres-ext] __________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c753350>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c753350>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_update__field_updated[postgres-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c661e60>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c661b90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _________ ERROR at setup of test_update__field_updated[postgres-pool] __________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0c561410>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0c561410>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_update__field_updated[postgres-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c4f1f80>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c4f1d40>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _______ ERROR at setup of test_update__field_updated[postgres-pool-ext] ________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0b2da690>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0b2da690>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_update__field_updated[postgres-pool-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0b753ef0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0b753170>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _____________ ERROR at setup of test_update__field_updated[mysql] ______________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c2059d0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >                               (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:645: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:728: in create_connection\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise err\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | address = ('127.0.0.1', 3306), timeout = 10, source_address = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                           source_address=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"Connect to *address* and return the socket object.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         port)``) and return the socket object.  Passing the optional\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         *timeout* parameter will set the timeout on the socket instance\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         before attempting to connect.  If no *timeout* is supplied, the\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for the socket to bind as a source address before making the connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         A host of '' or port 0 tells the OS to use the default.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         host, port = address\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         err = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             af, socktype, proto, canonname, sa = res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock = socket(af, socktype, proto)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if source_address:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.bind(source_address)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               sock.connect(sa)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:716: ConnectionRefusedError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.MySQLDatabase object at 0x7f2e0c2054d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c2059d0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               pymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.MySQLDatabase object at 0x7f2e0c2054d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_type != %s ORDER BY table_name'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('VIEW',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c2059d0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_update__field_updated[mysql]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c567710>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c567830>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4186: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return [table for table, in self.execute_sql(query, ('VIEW',))]\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c2059d0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ___________ ERROR at setup of test_update__field_updated[mysql-pool] ___________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c375fd0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >                               (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:645: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:728: in create_connection\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise err\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | address = ('127.0.0.1', 3306), timeout = 10, source_address = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                           source_address=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"Connect to *address* and return the socket object.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         port)``) and return the socket object.  Passing the optional\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         *timeout* parameter will set the timeout on the socket instance\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         before attempting to connect.  If no *timeout* is supplied, the\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for the socket to bind as a source address before making the connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         A host of '' or port 0 tells the OS to use the default.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         host, port = address\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         err = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             af, socktype, proto, canonname, sa = res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock = socket(af, socktype, proto)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if source_address:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.bind(source_address)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               sock.connect(sa)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:716: ConnectionRefusedError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledMySQLDatabase object at 0x7f2e0baf5a90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c375fd0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               pymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledMySQLDatabase object at 0x7f2e0baf5a90>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_type != %s ORDER BY table_name'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('VIEW',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c375fd0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_update__field_updated[mysql-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c27ba70>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0c567440>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4186: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return [table for table, in self.execute_sql(query, ('VIEW',))]\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:4145: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     **self.connect_params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:358: in __init__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <pymysql.connections.Connection object at 0x7f2e0c375fd0>, sock = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, sock=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         self._closed = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if self.unix_socket:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.settimeout(self.connect_timeout)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.connect(self.unix_socket)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"Localhost via UNIX socket\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self._secure = True\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using unix_socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     kwargs = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if self.bind_address is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         kwargs[\"source_address\"] = (self.bind_address, 0)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     while True:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             sock = socket.create_connection(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 (self.host, self.port), self.connect_timeout, **kwargs\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             break\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         except OSError as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             if e.errno == errno.EINTR:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                 continue\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                             raise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     self.host_info = \"socket %s:%d\" % (self.host, self.port)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                         print(\"connected using socket\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 sock.settimeout(None)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._sock = sock\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = sock.makefile(\"rb\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._next_seq_id = 0\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._get_server_information()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._request_authentication()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Send \"SET NAMES\" query on init for:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - Ensure charaset (and collation) is set to the server.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - collation_id in handshake packet may be ignored.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - If collation is not specified, we don't know what is server's\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   default collation for the charset. For example, default collation\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   of utf8mb4 is:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 5.7, MariaDB 10.x: utf8mb4_general_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #   - MySQL 8.0: utf8mb4_0900_ai_ci\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             #\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # Reference:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/PyMySQL/PyMySQL/issues/1092\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://github.com/wagtail/wagtail/issues/9477\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             # - https://zenn.dev/methane/articles/2023-mysql-collation (Japanese)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self.set_character_set(self.charset, self.collation)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.sql_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(\"SET sql_mode=%s\", (self.sql_mode,))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.init_command is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.execute(self.init_command)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 c.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.autocommit_mode is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 self.autocommit(self.autocommit_mode)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         except BaseException as e:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._rfile = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if sock is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     sock.close()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except:  # noqa\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if isinstance(e, (OSError, IOError)):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc = err.OperationalError(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     CR.CR_CONN_HOST_ERROR,\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     f\"Can't connect to MySQL server on {self.host!r} ({e})\",\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 # Keep original exception and traceback to investigate error.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.original_exception = e\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 exc.traceback = traceback.format_exc()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if DEBUG:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     print(exc.traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               raise exc\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E               peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pymysql/connections.py:711: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ___________ ERROR at setup of test_update__returning_model[postgres] ___________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0cb54610>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PostgresqlDatabase object at 0x7f2e0cb54610>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_update__returning_model[postgres]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0bdc4710>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0bdc4c20>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _________ ERROR at setup of test_update__returning_model[postgres-ext] _________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c7421d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PostgresqlExtDatabase object at 0x7f2e0c7421d0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_update__returning_model[postgres-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0c0a9a70>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0b7535f0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ________ ERROR at setup of test_update__returning_model[postgres-pool] _________\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0b60e150>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_async.PooledPostgresqlDatabase object at 0x7f2e0b60e150>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_update__returning_model[postgres-pool]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0bf8e290>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0bf8ee60>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3235: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ______ ERROR at setup of test_update__returning_model[postgres-pool-ext] _______\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0bf13990>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | reuse_if_open = False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(self, reuse_if_open=False):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with self._lock:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if self.deferred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise InterfaceError('Error, database must be initialized '\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                                      'before opening a connection.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             if not self._state.closed:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 if reuse_if_open:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     return False\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 raise OperationalError('Connection already opened.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             self._state.reset()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >               self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       psycopg2.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | self = <peewee_asyncext.PooledPostgresqlExtDatabase object at 0x7f2e0bf13990>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | sql = 'SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | params = ('public',), commit = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def execute_sql(self, sql, params=None, commit=None):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if commit is not None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             __deprecated__('\"commit\" has been deprecated and is a no-op.')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         logger.debug((sql, params))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         with __exception_wrapper__:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >           cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | During handling of the above exception, another exception occurred:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | request = <SubRequest 'manager' for <Function test_update__returning_model[postgres-pool-ext]>>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {}, func = <function manager at 0x7f2e0f2e2cb0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | setup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f2e0b609dd0>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | finalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f2e0b609e60>\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     @functools.wraps(fixture)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def _asyncgen_fixture_wrapper(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     ):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         func = _perhaps_rebind_fixture_func(\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             fixture, request.instance, fixturedef.unittest\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         )\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         async def setup():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             return res\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         def finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             \"\"\"Yield again, to finalize.\"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             async def async_finalizer() -> None:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 try:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 except StopAsyncIteration:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     pass\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                 else:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg = \"Async generator fixture didn't stop.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     msg += \"Yield only once.\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |                     raise ValueError(msg)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             event_loop.run_until_complete(async_finalizer())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       result = event_loop.run_until_complete(setup())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:298: \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return future.result()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pytest_asyncio/plugin.py:280: in setup\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     res = await gen_obj.__anext__()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/conftest.py:43: in manager\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     model.create_table(True)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6901: in create_table\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     and cls.table_exists():\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:6891: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return cls._schema.database.table_exists(M.table.__name__, M.schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3413: in table_exists\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return table_name in self.get_tables(schema=schema)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3967: in get_tables\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.execute_sql(query, (schema or 'public',))\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | peewee_async.py:861: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     return super().execute_sql(*args, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3246: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor.execute(sql, params or ())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3245: in execute_sql\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     cursor = self.cursor()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:479: in cursor\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self.connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3190: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._initialize_connection(self._state.conn)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3014: in __exit__\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     reraise(new_type, new_type(exc_value, *exc_args), traceback)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:192: in reraise\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     raise value.with_traceback(tb)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3187: in connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     self._state.set_connection(self._connect())\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/playhouse/postgres_ext.py:469: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = super(PostgresqlExtDatabase, self)._connect()\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/peewee.py:3926: in _connect\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     conn = psycopg2.connect(**params)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | dsn = 'host=127.0.0.1 port=5432 password=postgres user=postgres dbname=postgres'\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | connection_factory = None, cursor_factory = None\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwargs = {'dbname': 'postgres', 'host': '127.0.0.1', 'password': 'postgres', 'port': 5432, ...}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Create a new database connection.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         The connection parameters can be specified as a string:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         or using a set of keyword arguments:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Or as a mix of both. The basic connection parameters are:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *dbname*: the database name\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *database*: the database name (only as keyword argument)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *user*: user name used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *password*: password used to authenticate\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *connection_factory* parameter a different class or connections\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         argument.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         used by cursor().\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         Any other keyword parameter will be passed to the underlying client\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         library: the list of supported parameters depends on the library version.\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         \"\"\"\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         kwasync = {}\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async'] = kwargs.pop('async')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         if 'async_' in kwargs:\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | =============================== warnings summary ===============================\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/models.py:15\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/05bit-peewee-async/tests/models.py:15: PytestCollectionWarning: cannot collect test class 'TestModelAlpha' because it has a __init__ constructor (from: tests/test_obsolete.py)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     class TestModelAlpha(peewee.Model):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/models.py:22\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/05bit-peewee-async/tests/models.py:22: PytestCollectionWarning: cannot collect test class 'TestModelBeta' because it has a __init__ constructor (from: tests/test_obsolete.py)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     class TestModelBeta(peewee.Model):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/models.py:30\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/05bit-peewee-async/tests/models.py:30: PytestCollectionWarning: cannot collect test class 'TestModelGamma' because it has a __init__ constructor (from: tests/test_obsolete.py)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     class TestModelGamma(peewee.Model):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/models.py:15\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/05bit-peewee-async/tests/models.py:15: PytestCollectionWarning: cannot collect test class 'TestModelAlpha' because it has a __init__ constructor (from: tests/test_prefetch.py)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     class TestModelAlpha(peewee.Model):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/models.py:22\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/05bit-peewee-async/tests/models.py:22: PytestCollectionWarning: cannot collect test class 'TestModelBeta' because it has a __init__ constructor (from: tests/test_prefetch.py)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     class TestModelBeta(peewee.Model):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | tests/models.py:30\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/05bit-peewee-async/tests/models.py:30: PytestCollectionWarning: cannot collect test class 'TestModelGamma' because it has a __init__ constructor (from: tests/test_prefetch.py)\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   |     class TestModelGamma(peewee.Model):\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/05bit-peewee-async/report.xml -\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | =========================== short test summary info ============================\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_deleting.py::test_delete__count[postgres] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_deleting.py::test_delete__count[postgres-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_deleting.py::test_delete__count[postgres-pool] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_deleting.py::test_delete__count[postgres-pool-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_deleting.py::test_delete__count[mysql] - peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_deleting.py::test_delete__count[mysql-pool] - peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_deleting.py::test_delete__by_condition[postgres] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_deleting.py::test_delete__by_condition[postgres-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_deleting.py::test_delete__by_condition[postgres-pool] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_deleting.py::test_delete__by_condition[postgres-pool-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_deleting.py::test_delete__by_condition[mysql] - peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_deleting.py::test_delete__by_condition[mysql-pool] - peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_deleting.py::test_delete__return_model[postgres] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_deleting.py::test_delete__return_model[postgres-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_deleting.py::test_delete__return_model[postgres-pool] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_deleting.py::test_delete__return_model[postgres-pool-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert_many[postgres] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert_many[postgres-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert_many[postgres-pool] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert_many[postgres-pool-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert_many[mysql] - peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert_many[mysql-pool] - peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert__return_id[postgres] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert__return_id[postgres-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert__return_id[postgres-pool] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert__return_id[postgres-pool-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert__return_id[mysql] - peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert__return_id[mysql-pool] - peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert_on_conflict_ignore__last_id_is_none[postgres] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert_on_conflict_ignore__last_id_is_none[postgres-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert_on_conflict_ignore__last_id_is_none[postgres-pool] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert_on_conflict_ignore__last_id_is_none[postgres-pool-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert_on_conflict_ignore__return_model[postgres] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert_on_conflict_ignore__return_model[postgres-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert_on_conflict_ignore__return_model[postgres-pool] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert_on_conflict_ignore__return_model[postgres-pool-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert_on_conflict_ignore__inserted_once[postgres] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert_on_conflict_ignore__inserted_once[postgres-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert_on_conflict_ignore__inserted_once[postgres-pool] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert_on_conflict_ignore__inserted_once[postgres-pool-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert__uuid_pk[postgres] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert__uuid_pk[postgres-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert__uuid_pk[postgres-pool] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert__uuid_pk[postgres-pool-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert__return_model[postgres] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert__return_model[postgres-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert__return_model[postgres-pool] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert__return_model[postgres-pool-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert_many__return_model[postgres] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert_many__return_model[postgres-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert_many__return_model[postgres-pool] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_inserting.py::test_insert_many__return_model[postgres-pool-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::DatabaseTestCase::test_deferred_init - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::DatabaseTestCase::test_proxy_database - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTestCase::test_allow_sync_is_reverted_for_exc - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTestCase::test_composite_key - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTestCase::test_connect_close - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTestCase::test_count_query - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTestCase::test_count_query_with_limit - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTestCase::test_create_obj - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTestCase::test_create_or_get - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTestCase::test_create_uuid_obj - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTestCase::test_delete_obj - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTestCase::test_get_obj_by_id - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTestCase::test_get_obj_by_uuid - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTestCase::test_get_or_create - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTestCase::test_indexing_result - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTestCase::test_many_requests - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTestCase::test_multiple_iterate_over_result - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTestCase::test_raw_query - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTestCase::test_scalar_query - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTestCase::test_select_many_objects - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTestCase::test_update_obj - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTransactionsTestCase::test_atomic_fail_with_disconnect - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTransactionsTestCase::test_atomic_failed - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTransactionsTestCase::test_atomic_success - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_obsolete.py::ManagerTransactionsTestCase::test_several_transactions - psycopg2.OperationalError: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_prefetch.py::test_prefetch[1-postgres] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_prefetch.py::test_prefetch[1-postgres-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_prefetch.py::test_prefetch[1-postgres-pool] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_prefetch.py::test_prefetch[1-postgres-pool-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_prefetch.py::test_prefetch[1-mysql] - peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_prefetch.py::test_prefetch[1-mysql-pool] - peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_prefetch.py::test_prefetch[2-postgres] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_prefetch.py::test_prefetch[2-postgres-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_prefetch.py::test_prefetch[2-postgres-pool] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_prefetch.py::test_prefetch[2-postgres-pool-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_prefetch.py::test_prefetch[2-mysql] - peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_prefetch.py::test_prefetch[2-mysql-pool] - peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_updating.py::test_update__count[postgres] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_updating.py::test_update__count[postgres-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_updating.py::test_update__count[postgres-pool] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_updating.py::test_update__count[postgres-pool-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_updating.py::test_update__count[mysql] - peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_updating.py::test_update__count[mysql-pool] - peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_updating.py::test_update__field_updated[postgres] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_updating.py::test_update__field_updated[postgres-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_updating.py::test_update__field_updated[postgres-pool] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_updating.py::test_update__field_updated[postgres-pool-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_updating.py::test_update__field_updated[mysql] - peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_updating.py::test_update__field_updated[mysql-pool] - peewee.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_updating.py::test_update__returning_model[postgres] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_updating.py::test_update__returning_model[postgres-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_updating.py::test_update__returning_model[postgres-pool] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ERROR tests/test_updating.py::test_update__returning_model[postgres-pool-ext] - peewee.OperationalError: connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   | ================= 6 warnings, 105 errors in 225.00s (0:03:45) ==================\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build]   \u274c  Failure - Main Run tests\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build] exitcode '1': failure\n[7cdbacd9-01f2-40ff-87a4-ee455b462a9b/build] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'build' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/05bit-peewee-async/.github/workflows/ci-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "7cdbacd9-01f2-40ff-87a4-ee455b462a9b",
        "build_tool": "pytest",
        "elapsed_time": 428.16044521331787
    }
}