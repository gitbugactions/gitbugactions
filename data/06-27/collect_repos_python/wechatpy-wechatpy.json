{
    "repository": "wechatpy/wechatpy",
    "stars": 3509,
    "language": "python",
    "size": 2321,
    "clone_url": "https://github.com/wechatpy/wechatpy.git",
    "timestamp": "2023-06-28T10:37:28.234548Z",
    "clone_success": true,
    "number_of_actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "pytest",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_change_openid",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_check_network",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_client_expires_at_consistency",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_code_to_session",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_create_group",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_create_menu",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_create_qrcode",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_customservice_add_account",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_customservice_close_session",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_customservice_create_session",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_customservice_delete_account",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_customservice_get_accounts",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_customservice_get_online_accounts",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_customservice_get_records",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_customservice_get_session",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_customservice_get_session_list",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_customservice_get_wait_case",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_customservice_update_account",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_customservice_upload_headimg",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_datacube_get_article_summary",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_datacube_get_article_total",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_datacube_get_interface_summary",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_datacube_get_interface_summary_hour",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_datacube_get_upstream_msg",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_datacube_get_upstream_msg_dist",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_datacube_get_upstream_msg_dist_month",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_datacube_get_upstream_msg_dist_week",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_datacube_get_upstream_msg_hour",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_datacube_get_upstream_msg_month",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_datacube_get_upstream_msg_week",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_datacube_get_user_cumulate",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_datacube_get_user_read",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_datacube_get_user_read_hour",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_datacube_get_user_share",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_datacube_get_user_share_hour",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_datacube_get_user_summary",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_delete_menu",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_device_get_qrcode_url",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_fetch_access_token",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_fetch_access_token_is_method",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_get_followers",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_get_mass_message",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_get_menu",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_get_phone_number",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_get_qrcode_url_with_dict_ticket",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_get_qrcode_url_with_str_ticket",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_get_tag_users",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_get_user_info",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_get_user_info_batch",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_get_user_info_batch_openid_list",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_get_wechat_ips",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_group_delete",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_group_get",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_group_getid",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_group_move_user",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_group_update",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_iter_followers",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_iter_tag_users",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_jsapi_card_ext",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_jsapi_get_jsapi_add_card_params",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_jsapi_get_jsapi_card_ticket",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_jsapi_get_jsapi_signature",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_jsapi_get_ticket_response",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_material_get_count",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_menu_get_menu_info",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_message_get_autoreply_info",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_reraise_requests_exception",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_scan_check_ticket",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_scan_clear_product",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_scan_create_product",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_scan_get_merchant_info",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_scan_get_product",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_scan_list_product",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_scan_publish_product",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_scan_set_test_whitelist",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_scan_unpublish_product",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_scan_update_product",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_send_articles_message",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_send_card_message",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_send_image_message",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_send_mass_article_message",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_send_mass_card_message",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_send_mass_image_message",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_send_mass_text_message",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_send_mass_video_message",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_send_mass_voice_message",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_send_mini_program_page",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_send_music_message",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_send_text_message",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_send_video_message",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_send_voice_message",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_shakearound_add_material",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_shakearound_add_page",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_shakearound_apply_device_id",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_shakearound_bind_device_location",
                "time": 0.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_shakearound_bind_device_pages",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_shakearound_delete_page",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_shakearound_get_apply_status",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_shakearound_get_device_statistics",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_shakearound_get_page_statistics",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_shakearound_get_shake_info",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_shakearound_search_device",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_shakearound_search_page",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_shakearound_update_device",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_shakearound_update_page",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_short_url",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_subclass_client_ok",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_two_client_not_equal",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_update_menu",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_update_user_remark",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_upload_mass_image",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_upload_media",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_user_get_group_id",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_wifi_add_device",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_wifi_delete_device",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_wifi_get_homepage",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_wifi_get_qrcode_url",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_wifi_get_shop",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_wifi_list_devices",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_wifi_list_shops",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_wifi_list_statistics",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.WeChatClientTestCase",
                "name": "test_wifi_set_homepage",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_component_api.WeChatComponentTestCase",
                "name": "test_create_preauthcode",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_component_api.WeChatComponentTestCase",
                "name": "test_fetch_access_token",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_component_api.WeChatComponentTestCase",
                "name": "test_fetch_access_token_is_method",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_component_api.WeChatComponentTestCase",
                "name": "test_get_authorizer_info",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_component_api.WeChatComponentTestCase",
                "name": "test_get_authorizer_option",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_component_api.WeChatComponentTestCase",
                "name": "test_query_auth",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_component_api.WeChatComponentTestCase",
                "name": "test_refresh_authorizer_token",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_component_api.WeChatComponentTestCase",
                "name": "test_set_authorizer_option",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_component_api.ComponentOAuthTestCase",
                "name": "test_fetch_access_token",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_component_api.ComponentOAuthTestCase",
                "name": "test_get_authorize_url",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_component_api.ComponentOAuthTestCase",
                "name": "test_get_user_info",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_component_api.ComponentOAuthTestCase",
                "name": "test_refresh_access_token",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_component_api.ComponentOAuthTestCase",
                "name": "test_reraise_requests_exception",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_constants.WeChatErrorCodeTestCase",
                "name": "test_enum",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_constants.WeChatErrorCodeTestCase",
                "name": "test_error_code",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_create_reply.CreateReplyTestCase",
                "name": "test_create_empty_reply",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_create_reply.CreateReplyTestCase",
                "name": "test_create_reply_with_articles",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_create_reply.CreateReplyTestCase",
                "name": "test_create_reply_with_message",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_create_reply.CreateReplyTestCase",
                "name": "test_create_reply_with_more_than_ten_articles",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_create_reply.CreateReplyTestCase",
                "name": "test_create_reply_with_reply",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_create_reply.CreateReplyTestCase",
                "name": "test_create_reply_with_text_not_render",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_create_reply.CreateReplyTestCase",
                "name": "test_create_reply_with_text_render",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_crypto.CryptoTestCase",
                "name": "test_check_signature_should_fail",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_crypto.CryptoTestCase",
                "name": "test_check_signature_should_ok",
                "time": 0.124,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_crypto.CryptoTestCase",
                "name": "test_decrypt_binary_message",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_crypto.CryptoTestCase",
                "name": "test_decrypt_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_crypto.CryptoTestCase",
                "name": "test_encrypt_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_crypto.CryptoTestCase",
                "name": "test_refund_notify_decrypt_message",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_crypto.CryptoTestCase",
                "name": "test_wxa_decrypt_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_deserialize_reply.DeserializeReplyTestCase",
                "name": "test_article_reply_deserialize",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_deserialize_reply.DeserializeReplyTestCase",
                "name": "test_empty_reply_deserialize",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_deserialize_reply.DeserializeReplyTestCase",
                "name": "test_image_reply_deserialize",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_deserialize_reply.DeserializeReplyTestCase",
                "name": "test_music_reply_deserialize",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_deserialize_reply.DeserializeReplyTestCase",
                "name": "test_text_reply_deserialize",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_deserialize_reply.DeserializeReplyTestCase",
                "name": "test_video_reply_deserialize",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_deserialize_reply.DeserializeReplyTestCase",
                "name": "test_voice_reply_deserialize",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_annual_renew_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_click_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_kf_close_session_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_kf_create_session_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_kf_switch_session_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_location_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_location_select_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_mass_send_job_finish_event",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_merchant_order_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_naming_verify_fail_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_naming_verify_success_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_pic_photo_or_album_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_pic_sysphoto_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_pic_wechat_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_qualification_verify_fail_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_qualification_verify_success_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_scan_code_push_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_scan_code_waitmsg_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_scan_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_shakearound_user_shake_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_subscribe_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_subscribe_scan_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_template_send_job_finish_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_template_subscribe_msg_change_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_template_subscribe_msg_popup_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_template_subscribe_msg_sent_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_unsubscribe_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_verify_expired_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_view_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_events.EventsTestCase",
                "name": "test_wifi_connected_event",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_external_contact.WeChatClientTestCase",
                "name": "test_ec_addcorptag",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_external_contact.WeChatClientTestCase",
                "name": "test_ec_batch_get_by_user",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_external_contact.WeChatClientTestCase",
                "name": "test_ec_del_corp_tag",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_external_contact.WeChatClientTestCase",
                "name": "test_ec_edit_corp_tag",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_external_contact.WeChatClientTestCase",
                "name": "test_ec_gen_all_by_user",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_external_contact.WeChatClientTestCase",
                "name": "test_ec_mark_tag",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fields.FieldsTestCase",
                "name": "test_article_field_to_xml",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fields.FieldsTestCase",
                "name": "test_base64decode_field_to_xml",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fields.FieldsTestCase",
                "name": "test_base64encode_field_to_xml",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fields.FieldsTestCase",
                "name": "test_datetime_field_to_xml",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fields.FieldsTestCase",
                "name": "test_float_field_to_xml",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fields.FieldsTestCase",
                "name": "test_image_field_to_xml",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fields.FieldsTestCase",
                "name": "test_integer_field_to_xml",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fields.FieldsTestCase",
                "name": "test_music_field_to_xml",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fields.FieldsTestCase",
                "name": "test_string_field_to_xml",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fields.FieldsTestCase",
                "name": "test_video_field_to_xml",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fields.FieldsTestCase",
                "name": "test_voice_field_to_xml",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_messages.MessagesTestCase",
                "name": "test_base_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_messages.MessagesTestCase",
                "name": "test_image_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_messages.MessagesTestCase",
                "name": "test_link_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_messages.MessagesTestCase",
                "name": "test_location_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_messages.MessagesTestCase",
                "name": "test_miniprogrampage_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_messages.MessagesTestCase",
                "name": "test_text_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_messages.MessagesTestCase",
                "name": "test_video_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_messages.MessagesTestCase",
                "name": "test_voice_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_oauth.WeChatOAuthTestCase",
                "name": "test_check_access_token",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_oauth.WeChatOAuthTestCase",
                "name": "test_fetch_access_token",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_oauth.WeChatOAuthTestCase",
                "name": "test_get_authorize_url",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_oauth.WeChatOAuthTestCase",
                "name": "test_get_qrconnect_url",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_oauth.WeChatOAuthTestCase",
                "name": "test_get_user_info",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_oauth.WeChatOAuthTestCase",
                "name": "test_refresh_access_token",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_oauth.WeChatOAuthTestCase",
                "name": "test_reraise_requests_exception",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParseMessageTestCase",
                "name": "test_parse_click_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParseMessageTestCase",
                "name": "test_parse_device_bind_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParseMessageTestCase",
                "name": "test_parse_device_text_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParseMessageTestCase",
                "name": "test_parse_image_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParseMessageTestCase",
                "name": "test_parse_link_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParseMessageTestCase",
                "name": "test_parse_location_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParseMessageTestCase",
                "name": "test_parse_location_message",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParseMessageTestCase",
                "name": "test_parse_scan_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParseMessageTestCase",
                "name": "test_parse_submit_invoice_title_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParseMessageTestCase",
                "name": "test_parse_subscribe_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParseMessageTestCase",
                "name": "test_parse_subscribe_event_with_last_trade_no",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParseMessageTestCase",
                "name": "test_parse_subscribe_scan_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParseMessageTestCase",
                "name": "test_parse_subscribe_scan_product_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParseMessageTestCase",
                "name": "test_parse_text_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParseMessageTestCase",
                "name": "test_parse_unknown_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParseMessageTestCase",
                "name": "test_parse_update_invoice_status_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParseMessageTestCase",
                "name": "test_parse_user_authorize_invoice_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParseMessageTestCase",
                "name": "test_parse_video_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParseMessageTestCase",
                "name": "test_parse_view_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParseMessageTestCase",
                "name": "test_parse_voice_message",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pay.WeChatPayTestCase",
                "name": "test_calculate_signature",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pay.WeChatPayTestCase",
                "name": "test_calculate_signature_hmac",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pay.WeChatPayTestCase",
                "name": "test_dict_to_xml",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_payment.WeChatPayTestCase",
                "name": "test_apply_cancel_signing",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_payment.WeChatPayTestCase",
                "name": "test_apply_deduct",
                "time": 0.18,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_payment.WeChatPayTestCase",
                "name": "test_apply_signing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_payment.WeChatPayTestCase",
                "name": "test_query_order",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_payment.WeChatPayTestCase",
                "name": "test_query_signing",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_replies.ReplyTestCase",
                "name": "test_empty_reply",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_replies.ReplyTestCase",
                "name": "test_image_reply_properties",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_replies.ReplyTestCase",
                "name": "test_multi_article_reply",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_replies.ReplyTestCase",
                "name": "test_music_reply_properties",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_replies.ReplyTestCase",
                "name": "test_reply_init_ok",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_replies.ReplyTestCase",
                "name": "test_reply_render",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_replies.ReplyTestCase",
                "name": "test_video_reply_properties",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_replies.ReplyTestCase",
                "name": "test_voice_reply_properties",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_send_messages.SendMessageTestCase",
                "name": "test_get_subscribe_authorize_url",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_session.WeChatSessionTestCase",
                "name": "test_memcached_storage_access_token",
                "time": 0.065,
                "results": [
                    {
                        "result": "Failure",
                        "message": "ConnectionRefusedError: [Errno 111] Connection refused",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_session.WeChatSessionTestCase",
                "name": "test_memcached_storage_init",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_session.WeChatSessionTestCase",
                "name": "test_memory_session_storage_access_token",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_session.WeChatSessionTestCase",
                "name": "test_memory_session_storage_init",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_session.WeChatSessionTestCase",
                "name": "test_redis_session_storage_access_token",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_session.WeChatSessionTestCase",
                "name": "test_redis_session_storage_init",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils.UtilityTestCase",
                "name": "test_check_signature_should_fail",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils.UtilityTestCase",
                "name": "test_check_signature_should_ok",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils.UtilityTestCase",
                "name": "test_check_wxa_signature",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils.UtilityTestCase",
                "name": "test_object_dict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils.UtilityTestCase",
                "name": "test_rsa_encrypt_decrypt",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils.UtilityTestCase",
                "name": "test_wechat_card_signer",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_active_email",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_add_meetingroom",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_batch_get_public_email",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_batch_get_result",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_batch_replace_party",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_batch_replace_user",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_batch_sync_user",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_book_meetingroom",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_cancel_meetingroom_book",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_create_email_group",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_create_public_email",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_delete_email_group",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_delete_meetingroom",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_delete_public_email",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_department_create",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_department_delete",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_department_get_users",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_department_get_users_detail",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_department_list",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_department_map_users",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_department_update",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_edit_meetingroom",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_export",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_external_contact_add_contact_way",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_external_contact_add_group_welcome_template",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_external_contact_add_msg_template",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_external_contact_del_contact_way",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_external_contact_del_group_welcome_template",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_external_contact_get",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_external_contact_get_contact_way",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_external_contact_get_follow_user_list",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_external_contact_get_group_chat_info",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_external_contact_get_group_chat_list",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_external_contact_get_group_msg_result",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_external_contact_get_group_welcome_template",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_external_contact_get_unassigned_list",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_external_contact_get_user_behavior_data",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_external_contact_list",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_external_contact_send_welcome_msg",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_external_contact_transfer",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_external_contact_update_contact_way",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_external_contact_update_group_welcome_template",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_fetch_access_token",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_get_booking_info_by_meeting_id",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_get_email_group",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_get_journal_record_detail",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_get_journal_record_list",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_get_journal_stat_list",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_get_meetingroom_list",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_get_new_email_count",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_get_public_email",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_get_user_option",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_get_wechat_ips",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_init_client_with_access_token",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_invoice_get_info",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_invoice_get_info_batch",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_invoice_get_info_batch_with_empty_item_list",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_invoice_update_status",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_invoice_update_status_batch",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_invoice_update_status_batch_with_empty_invoice_list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_invoice_update_status_batch_with_invalid_status",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_invoice_update_status_with_empty_status",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_invoice_update_status_with_invalid_status",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_jsapi_get_jsapi_signature",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_jsapi_get_ticket",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_meetingroom_booking_info",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_oa_get_checkin_data",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_oa_get_checkin_data_with_invalid_datatype",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_oa_get_checkin_data_with_invalid_timestamp",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_oa_get_checkin_option",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_oa_get_dial_record",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_oa_get_open_approval_data",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_os_get_dial_record_with_invalid_timestamp",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_reraise_requests_exception",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_search_email_group",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_search_public_email",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_service_get_login_info",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_service_get_provider_token",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_tag_add_users",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_tag_add_users_with_depts",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_tag_add_users_with_empty_user_and_dept",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_tag_add_users_with_too_more_users_or_depts",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_tag_create",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_tag_create_with_invalid_tag_id",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_tag_create_with_invalid_tag_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_tag_delete",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_tag_delete_users",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_tag_delete_users_with_delete_depts",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_tag_delete_users_with_empty_users_and_depts",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_tag_delete_users_with_too_more_user_or_dept",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_tag_get_users",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_tag_list",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_tag_update",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_update_email_group",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_update_public_email",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_update_user_option",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_upload_media",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_user_convert_to_openid",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_user_convert_to_user_id",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_user_get_active_stat",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_client.WeChatClientTestCase",
                "name": "test_user_join_qrcode",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_create_reply.CreateReplyTestCase",
                "name": "test_create_reply_should_return_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_create_reply.CreateReplyTestCase",
                "name": "test_create_reply_with_articles",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_create_reply.CreateReplyTestCase",
                "name": "test_create_reply_with_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_create_reply.CreateReplyTestCase",
                "name": "test_create_reply_with_more_than_ten_articles",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_create_reply.CreateReplyTestCase",
                "name": "test_create_reply_with_reply",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_create_reply.CreateReplyTestCase",
                "name": "test_create_reply_with_text_not_render",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_create_reply.CreateReplyTestCase",
                "name": "test_create_reply_with_text_render",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_parser.ParseMessageTestCase",
                "name": "test_export",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_parser.ParseMessageTestCase",
                "name": "test_meeting",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_parser.ParseMessageTestCase",
                "name": "test_parse_add_schedule",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_parser.ParseMessageTestCase",
                "name": "test_parse_click_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_parser.ParseMessageTestCase",
                "name": "test_parse_delete_calendar",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_parser.ParseMessageTestCase",
                "name": "test_parse_delete_schedule",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_parser.ParseMessageTestCase",
                "name": "test_parse_image_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_parser.ParseMessageTestCase",
                "name": "test_parse_link_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_parser.ParseMessageTestCase",
                "name": "test_parse_location_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_parser.ParseMessageTestCase",
                "name": "test_parse_location_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_parser.ParseMessageTestCase",
                "name": "test_parse_modify_calendar",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_parser.ParseMessageTestCase",
                "name": "test_parse_modify_schedule",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_parser.ParseMessageTestCase",
                "name": "test_parse_subscribe_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_parser.ParseMessageTestCase",
                "name": "test_parse_text_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_parser.ParseMessageTestCase",
                "name": "test_parse_unknown_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_parser.ParseMessageTestCase",
                "name": "test_parse_video_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_parser.ParseMessageTestCase",
                "name": "test_parse_view_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_parser.ParseMessageTestCase",
                "name": "test_parse_voice_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_work_parser.ParseMessageTestCase",
                "name": "test_subscribe_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check] \ud83d\ude80  Start image=crawlergpt:latest\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ] \ud83d\ude80  Start image=crawlergpt:latest\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/wechatpy-wechatpy] user=0 workdir=\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/wechatpy-wechatpy] user=0 workdir=\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \u2601  git clone 'https://github.com/codespell-project/actions-codespell' # ref=master\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check] \u2b50 Run Main actions/checkout@v2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \u2705  Success - Main actions/checkout@v2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v1\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check] \u2b50 Run Main Setup Python\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udc33  docker cp src=/tmp/act-cache/48440723-d3d8-4d84-8cbd-c47e12f6937b/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udcac  ::debug::isExplicit: \n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udcac  ::debug::explicit? false\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udcac  ::debug::explicit? true\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udcac  ::debug::explicit? true\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udcac  ::debug::explicit? true\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udcac  ::debug::explicit? true\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udcac  ::debug::explicit? true\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udcac  ::debug::explicit? true\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udcac  ::debug::evaluating 6 versions\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udcac  ::debug::matched: 3.8.11\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Successfully setup CPython (3.8.11)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \u2705  Success - Main Setup Python\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \u2699  ::set-output:: python-version=3.8.11\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check] \u2b50 Run Main Install Dependencies\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting poetry\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading poetry-1.5.1-py3-none-any.whl (225 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting tomli<3.0.0,>=2.0.1\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting trove-classifiers>=2022.5.19\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading trove_classifiers-2023.5.24-py3-none-any.whl (13 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting tomlkit<1.0.0,>=0.11.4\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading tomlkit-0.11.8-py3-none-any.whl (35 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting lockfile<0.13.0,>=0.12.2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading lockfile-0.12.2-py2.py3-none-any.whl (13 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting pkginfo<2.0.0,>=1.9.4\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading pkginfo-1.9.6-py3-none-any.whl (30 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting cleo<3.0.0,>=2.0.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading cleo-2.0.1-py3-none-any.whl (77 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting html5lib<2.0,>=1.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading html5lib-1.1-py2.py3-none-any.whl (112 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting requests-toolbelt<2,>=0.9.1\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading requests_toolbelt-1.0.0-py2.py3-none-any.whl (54 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting build<0.11.0,>=0.10.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading build-0.10.0-py3-none-any.whl (17 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting filelock<4.0.0,>=3.8.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading filelock-3.12.2-py3-none-any.whl (10 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting packaging>=20.4\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting requests<3.0,>=2.18\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting pyproject-hooks<2.0.0,>=1.0.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading pyproject_hooks-1.0.0-py3-none-any.whl (9.3 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting platformdirs<4.0.0,>=3.0.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting dulwich<0.22.0,>=0.21.2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading dulwich-0.21.5-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (512 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting urllib3<2.0.0,>=1.26.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting installer<0.8.0,>=0.7.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading installer-0.7.0-py3-none-any.whl (453 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting poetry-plugin-export<2.0.0,>=1.4.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading poetry_plugin_export-1.4.0-py3-none-any.whl (10 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting virtualenv<21.0.0,>=20.22.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting crashtest<0.5.0,>=0.4.1\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading crashtest-0.4.1-py3-none-any.whl (7.6 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting jsonschema<5.0.0,>=4.10.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading jsonschema-4.17.3-py3-none-any.whl (90 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting pexpect<5.0.0,>=4.7.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading pexpect-4.8.0-py2.py3-none-any.whl (59 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting importlib-metadata>=4.4\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting shellingham<2.0,>=1.5\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading shellingham-1.5.0.post1-py2.py3-none-any.whl (9.4 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting keyring<24.0.0,>=23.9.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading keyring-23.13.1-py3-none-any.whl (37 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting poetry-core==1.6.1\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading poetry_core-1.6.1-py3-none-any.whl (450 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting cachecontrol[filecache]<0.13.0,>=0.12.9\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading CacheControl-0.12.14-py2.py3-none-any.whl (21 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting msgpack>=0.5.2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading msgpack-1.0.5-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (322 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting rapidfuzz<3.0.0,>=2.2.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading rapidfuzz-2.15.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting webencodings\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting six>=1.9\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting zipp>=0.5\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading pyrsistent-0.19.3-py3-none-any.whl (57 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting importlib-resources>=1.4.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading importlib_resources-5.12.0-py3-none-any.whl (36 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting attrs>=17.4.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting pkgutil-resolve-name>=1.3.10\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading pkgutil_resolve_name-1.3.10-py3-none-any.whl (4.7 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting SecretStorage>=3.2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading SecretStorage-3.3.3-py3-none-any.whl (15 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting jaraco.classes\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading jaraco.classes-3.2.3-py3-none-any.whl (6.0 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting jeepney>=0.4.2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading jeepney-0.8.0-py3-none-any.whl (48 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting ptyprocess>=0.5\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting idna<4,>=2.5\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting certifi>=2017.4.17\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting charset-normalizer<4,>=2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading charset_normalizer-3.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (195 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting cryptography>=2.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading cryptography-41.0.1-cp37-abi3-manylinux_2_28_x86_64.whl (4.3 MB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting cffi>=1.12\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading cffi-1.15.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (442 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting pycparser\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting distlib<1,>=0.3.6\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting more-itertools\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading more_itertools-9.1.0-py3-none-any.whl (54 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Installing collected packages: pycparser, urllib3, idna, charset-normalizer, cffi, certifi, zipp, tomli, requests, msgpack, more-itertools, jeepney, cryptography, webencodings, six, SecretStorage, rapidfuzz, pyrsistent, pyproject-hooks, ptyprocess, poetry-core, platformdirs, pkgutil-resolve-name, packaging, lockfile, jaraco.classes, importlib-resources, importlib-metadata, filelock, distlib, crashtest, cachecontrol, attrs, virtualenv, trove-classifiers, tomlkit, shellingham, requests-toolbelt, poetry-plugin-export, pkginfo, pexpect, keyring, jsonschema, installer, html5lib, dulwich, cleo, build, poetry\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Successfully installed SecretStorage-3.3.3 attrs-23.1.0 build-0.10.0 cachecontrol-0.12.14 certifi-2023.5.7 cffi-1.15.1 charset-normalizer-3.1.0 cleo-2.0.1 crashtest-0.4.1 cryptography-41.0.1 distlib-0.3.6 dulwich-0.21.5 filelock-3.12.2 html5lib-1.1 idna-3.4 importlib-metadata-6.7.0 importlib-resources-5.12.0 installer-0.7.0 jaraco.classes-3.2.3 jeepney-0.8.0 jsonschema-4.17.3 keyring-23.13.1 lockfile-0.12.2 more-itertools-9.1.0 msgpack-1.0.5 packaging-23.1 pexpect-4.8.0 pkginfo-1.9.6 pkgutil-resolve-name-1.3.10 platformdirs-3.8.0 poetry-1.5.1 poetry-core-1.6.1 poetry-plugin-export-1.4.0 ptyprocess-0.7.0 pycparser-2.21 pyproject-hooks-1.0.0 pyrsistent-0.19.3 rapidfuzz-2.15.1 requests-2.31.0 requests-toolbelt-1.0.0 shellingham-1.5.0.post1 six-1.16.0 tomli-2.0.1 tomlkit-0.11.8 trove-classifiers-2023.5.24 urllib3-1.26.16 virtualenv-20.23.1 webencodings-0.5.1 zipp-3.15.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.8.11/x64/bin/python -m pip install --upgrade pip' command.\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Creating virtualenv wechatpy-5cj2Pc-i-py3.8 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:3.6]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ] \u2b50 Run Main actions/checkout@v2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \u2705  Success - Main actions/checkout@v2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ] \u2b50 Run Main codespell-project/actions-codespell@master\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udc33  docker build -t act-codespell-project-actions-codespell-master-dockeraction:latest /tmp/act-cache/48440723-d3d8-4d84-8cbd-c47e12f6937b/act/codespell-project-actions-codespell@master/\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Installing dependencies from lock file\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | \n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Package operations: 28 installs, 0 updates, 0 removals\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | \n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing pycparser (2.21)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing cffi (1.15.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing pyparsing (2.4.7)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing attrs (21.2.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing certifi (2022.12.7)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing charset-normalizer (2.0.7)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing cryptography (35.0.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing iniconfig (1.1.1)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing idna (3.3)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing packaging (21.2)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing pluggy (1.0.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing py (1.11.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing six (1.16.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing toml (0.10.2)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing tomli (1.2.2)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing urllib3 (1.26.7)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing coverage (6.1.2)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing pyopenssl (21.0.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing pytest (6.2.5)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing requests (2.26.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing httmock (1.4.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing optionaldict (0.1.2)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing pymemcache (3.5.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing python-dateutil (2.8.2)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing redis (3.5.3)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing requests-pkcs12 (1.13)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing pytest-cov (3.0.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   \u2022 Installing xmltodict (0.12.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | \n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Installing the current project: wechatpy (2.0.0.alpha26)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting mypy\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading mypy-1.4.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.9 MB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 11.9/11.9 MB 16.5 MB/s eta 0:00:00\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting typing-extensions>=4.1.0 (from mypy)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading typing_extensions-4.6.3-py3-none-any.whl (31 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting mypy-extensions>=1.0.0 (from mypy)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Requirement already satisfied: tomli>=1.1.0 in /home/runneradmin/.cache/pypoetry/virtualenvs/wechatpy-5cj2Pc-i-py3.8/lib/python3.8/site-packages (from mypy) (1.2.2)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Installing collected packages: typing-extensions, mypy-extensions, mypy\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Successfully installed mypy-1.4.1 mypy-extensions-1.0.0 typing-extensions-4.6.3\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \u2705  Success - Main Install Dependencies\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check] \u2b50 Run Main mypy\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting types-python-dateutil\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading types_python_dateutil-2.8.19.13-py3-none-any.whl (9.2 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting types-pytz\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading types_pytz-2023.3.0.0-py3-none-any.whl (4.7 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting types-requests\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading types_requests-2.31.0.1-py3-none-any.whl (14 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Collecting types-urllib3 (from types-requests)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   |   Downloading types_urllib3-1.26.25.13-py3-none-any.whl (15 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Installing collected packages: types-urllib3, types-pytz, types-python-dateutil, types-requests\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Successfully installed types-python-dateutil-2.8.19.13 types-pytz-2023.3.0.0 types-requests-2.31.0.1 types-urllib3-1.26.25.13\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:392:21: error: Incompatible default for argument \"city\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:392:21: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:392:21: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:393:25: error: Incompatible default for argument \"building\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:393:25: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:393:25: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:394:22: error: Incompatible default for argument \"floor\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:394:22: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:394:22: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:395:27: error: Incompatible default for argument \"equipment\" (default has type \"None\", argument has type \"List[Any]\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:395:27: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:395:27: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:396:25: error: Incompatible default for argument \"latitude\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:396:25: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:396:25: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:397:26: error: Incompatible default for argument \"longitude\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:397:26: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:397:26: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:430:21: error: Incompatible default for argument \"city\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:430:21: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:430:21: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:431:25: error: Incompatible default for argument \"building\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:431:25: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:431:25: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:432:22: error: Incompatible default for argument \"floor\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:432:22: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:432:22: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:433:27: error: Incompatible default for argument \"equipment\" (default has type \"None\", argument has type \"List[Any]\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:433:27: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:433:27: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:450:21: error: Incompatible default for argument \"city\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:450:21: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:450:21: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:451:25: error: Incompatible default for argument \"building\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:451:25: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:451:25: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:452:22: error: Incompatible default for argument \"floor\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:452:22: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:452:22: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:453:27: error: Incompatible default for argument \"equipment\" (default has type \"None\", argument has type \"List[Any]\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:453:27: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:453:27: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:454:25: error: Incompatible default for argument \"latitude\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:454:25: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:454:25: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:455:26: error: Incompatible default for argument \"longitude\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:455:26: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:455:26: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:497:31: error: Incompatible default for argument \"meetingroom_id\" (default has type \"None\", argument has type \"int\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:497:31: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:497:31: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:498:27: error: Incompatible default for argument \"start_time\" (default has type \"None\", argument has type \"int\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:498:27: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:498:27: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:499:25: error: Incompatible default for argument \"end_time\" (default has type \"None\", argument has type \"int\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:499:25: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:499:25: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:500:21: error: Incompatible default for argument \"city\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:500:21: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:500:21: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:501:25: error: Incompatible default for argument \"building\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:501:25: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:501:25: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:502:22: error: Incompatible default for argument \"floor\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:502:22: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:502:22: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:534:24: error: Incompatible default for argument \"subject\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:534:24: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:534:24: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:535:27: error: Incompatible default for argument \"attendees\" (default has type \"None\", argument has type \"List[Any]\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:535:27: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/oa.py:535:27: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:22:28: error: Incompatible default for argument \"description\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:22:28: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:22:28: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:23:24: error: Incompatible default for argument \"agentid\" (default has type \"None\", argument has type \"int\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:23:24: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:23:24: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:25:39: error: Incompatible default for argument \"activity_cover_mediaid\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:25:39: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:25:39: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:26:39: error: Incompatible default for argument \"activity_share_mediaid\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:26:39: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:26:39: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:27:33: error: Incompatible default for argument \"activity_detail\" (default has type \"None\", argument has type \"Dict[Any, Any]\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:27:33: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:27:33: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:74:22: error: Incompatible default for argument \"theme\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:74:22: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:74:22: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:75:29: error: Incompatible default for argument \"living_start\" (default has type \"None\", argument has type \"int\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:75:29: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:75:29: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:76:32: error: Incompatible default for argument \"living_duration\" (default has type \"None\", argument has type \"int\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:76:32: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:76:32: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:77:21: error: Incompatible default for argument \"type\" (default has type \"None\", argument has type \"int\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:77:21: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:77:21: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:78:28: error: Incompatible default for argument \"description\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:78:28: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:78:28: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:163:64: error: Incompatible default for argument \"cursor\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:163:64: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/living.py:163:64: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/external_contact_group_chat.py:17:35: error: Incompatible default for argument \"owner_userid_list\" (default has type \"None\", argument has type \"List[Any]\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/external_contact_group_chat.py:17:35: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/external_contact_group_chat.py:17:35: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/external_contact_group_chat.py:18:23: error: Incompatible default for argument \"cursor\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/external_contact_group_chat.py:18:23: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/external_contact_group_chat.py:18:23: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/external_contact_group_chat.py:45:74: error: Incompatible default for argument \"owner_userid_list\" (default has type \"None\", argument has type \"List[Any]\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/external_contact_group_chat.py:45:74: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/external_contact_group_chat.py:45:74: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/external_contact_group_chat.py:52:66: error: Argument 3 to \"list\" of \"WeChatExternalContactGroupChat\" has incompatible type \"None\"; expected \"str\"  [arg-type]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/external_contact_group_chat.py:75:29: error: Incompatible default for argument \"day_end_time\" (default has type \"None\", argument has type \"int\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/external_contact_group_chat.py:75:29: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/external_contact_group_chat.py:75:29: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/external_contact_group_chat.py:76:35: error: Incompatible default for argument \"owner_userid_list\" (default has type \"None\", argument has type \"List[Any]\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/external_contact_group_chat.py:76:35: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/external_contact_group_chat.py:76:35: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/external_contact.py:222:27: error: Incompatible default for argument \"user\" (default has type \"None\", argument has type \"List[str]\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/external_contact.py:222:27: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/external_contact.py:222:27: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/external_contact.py:223:28: error: Incompatible default for argument \"party\" (default has type \"None\", argument has type \"List[int]\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/external_contact.py:223:28: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/work/client/api/external_contact.py:223:28: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/client/api/wxa.py:712:24: error: Incompatible default for argument \"img_url\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/client/api/wxa.py:712:24: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/client/api/wxa.py:712:24: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/client/api/wxa.py:713:25: error: Incompatible default for argument \"filename\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/client/api/wxa.py:713:25: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/client/api/wxa.py:713:25: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/client/api/wxa.py:714:29: error: Incompatible default for argument \"file_bytes\" (default has type \"None\", argument has type \"bytes\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/client/api/wxa.py:714:29: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/client/api/wxa.py:714:29: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/client/api/wxa.py:715:26: error: Incompatible default for argument \"mime_type\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/client/api/wxa.py:715:26: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/client/api/wxa.py:715:26: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/client/api/wxa.py:735:30: error: Incompatible default for argument \"img_url\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/client/api/wxa.py:735:30: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/client/api/wxa.py:735:30: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/client/api/wxa.py:735:52: error: Incompatible default for argument \"filename\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/client/api/wxa.py:735:78: error: Incompatible default for argument \"file_bytes\" (default has type \"None\", argument has type \"bytes\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | wechatpy/client/api/wxa.py:735:101: error: Incompatible default for argument \"mime_type\" (default has type \"None\", argument has type \"str\")  [assignment]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Installing missing stub packages:\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | /home/runneradmin/.cache/pypoetry/virtualenvs/wechatpy-5cj2Pc-i-py3.8/bin/python -m pip install types-python-dateutil types-pytz types-requests\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | \n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | \n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   | Found 51 errors in 5 files (checked 109 source files)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check]   \u274c  Failure - Main mypy\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check] exitcode '1': failure\n[fcdadbe3-2ef3-4650-a169-30150593b60c/mypy-check] \ud83c\udfc1  Job failed\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udc33  docker pull image=act-codespell-project-actions-codespell-master-dockeraction:latest platform= username= forcePull=false\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udc33  docker create image=act-codespell-project-actions-codespell-master-dockeraction:latest platform= entrypoint=[] cmd=[]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udc33  docker run image=act-codespell-project-actions-codespell-master-dockeraction:latest platform= entrypoint=[] cmd=[]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \u2753 add-matcher /tmp/_github_workflow/codespell-matcher.json\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Running codespell on '' with the following options...\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Check filenames? ''\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Check hidden? ''\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Exclude file ''\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Skipping './.git'\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Builtin dictionaries ''\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Ignore words file ''\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | cp: can't create '/github/workflow/codespell-matcher.json': No such file or directory\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Ignore words list 'ba'\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Ignore URI words list ''\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Resulting CLI options  --skip ./.git --ignore-words-list ba\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | 0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Codespell found no problems\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \u2753  ::remove-matcher owner=codespell-matcher-default::\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \u2753  ::remove-matcher owner=codespell-matcher-specified::\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \u2705  Success - Main codespell-project/actions-codespell@master\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ] \u2b50 Run Main Setup Python\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udc33  docker cp src=/tmp/act-cache/48440723-d3d8-4d84-8cbd-c47e12f6937b/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udcac  ::debug::Semantic version spec of 3.6 is 3.6\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udcac  ::debug::isExplicit: \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udcac  ::debug::explicit? false\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udcac  ::debug::explicit? true\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udcac  ::debug::explicit? true\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udcac  ::debug::explicit? true\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udcac  ::debug::explicit? true\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udcac  ::debug::explicit? true\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udcac  ::debug::explicit? true\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udcac  ::debug::matched: 3.6.14\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.6.14/x64\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.6.14 x64\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Successfully setup CPython (3.6.14)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \u2705  Success - Main Setup Python\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.6.14/x64\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.6.14/x64/lib\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \u2699  ::set-output:: python-version=3.6.14\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64/bin\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ] \u2b50 Run Main Display Python version\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udc33  docker exec cmd=[python /var/run/act/workflow/3.py] user= workdir=\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | 3.6.14 (default, Jul  5 2021, 20:52:02) \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | [GCC 9.3.0]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \u2705  Success - Main Display Python version\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ] \u2b50 Run Main Install Dependencies\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting poetry\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading poetry-1.1.15-py2.py3-none-any.whl (175 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting clikit<0.7.0,>=0.6.2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading clikit-0.6.2-py2.py3-none-any.whl (91 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting poetry-core<1.1.0,>=1.0.7\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading poetry_core-1.0.8-py2.py3-none-any.whl (425 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting html5lib<2.0,>=1.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading html5lib-1.1-py2.py3-none-any.whl (112 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting cachecontrol[filecache]<0.13.0,>=0.12.9\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading CacheControl-0.12.14-py2.py3-none-any.whl (21 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting cleo<0.9.0,>=0.8.1\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading cleo-0.8.1-py2.py3-none-any.whl (21 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting packaging<21.0,>=20.4\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading packaging-20.9-py2.py3-none-any.whl (40 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting importlib-metadata<2.0.0,>=1.6.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading importlib_metadata-1.7.0-py2.py3-none-any.whl (31 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting virtualenv<21.0.0,>=20.0.26\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading virtualenv-20.17.1-py3-none-any.whl (8.8 MB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting tomlkit<1.0.0,>=0.7.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading tomlkit-0.11.6-py3-none-any.whl (35 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting pkginfo<2.0,>=1.4\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading pkginfo-1.9.6-py3-none-any.whl (30 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting requests-toolbelt<0.10.0,>=0.9.1\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading requests_toolbelt-0.9.1-py2.py3-none-any.whl (54 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting requests<3.0,>=2.18\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading requests-2.27.1-py2.py3-none-any.whl (63 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting keyring>=21.2.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading keyring-23.4.1-py3-none-any.whl (33 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting shellingham<2.0,>=1.1\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading shellingham-1.4.0-py2.py3-none-any.whl (9.4 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting cachy<0.4.0,>=0.3.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading cachy-0.3.0-py2.py3-none-any.whl (20 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting crashtest<0.4.0,>=0.3.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading crashtest-0.3.1-py3-none-any.whl (7.0 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting pexpect<5.0.0,>=4.7.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading pexpect-4.8.0-py2.py3-none-any.whl (59 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting msgpack>=0.5.2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading msgpack-1.0.5-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (300 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting lockfile>=0.9\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading lockfile-0.12.2-py2.py3-none-any.whl (13 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting pastel<0.3.0,>=0.2.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading pastel-0.2.1-py2.py3-none-any.whl (6.0 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting pylev<2.0,>=1.3\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading pylev-1.4.0-py2.py3-none-any.whl (6.1 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting webencodings\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting six>=1.9\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting zipp>=0.5\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading zipp-3.6.0-py3-none-any.whl (5.3 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting jeepney>=0.4.2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading jeepney-0.7.1-py3-none-any.whl (54 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting SecretStorage>=3.2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading SecretStorage-3.3.3-py3-none-any.whl (15 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting keyring>=21.2.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading keyring-23.4.0-py3-none-any.whl (33 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading keyring-23.3.0-py3-none-any.whl (33 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading keyring-23.2.1-py3-none-any.whl (33 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading keyring-23.2.0-py3-none-any.whl (33 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading keyring-23.1.0-py3-none-any.whl (32 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading keyring-23.0.1-py3-none-any.whl (33 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading keyring-23.0.0-py3-none-any.whl (32 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading keyring-22.4.0-py3-none-any.whl (58 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading keyring-22.3.0-py3-none-any.whl (58 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting pyparsing>=2.0.2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading pyparsing-3.1.0-py3-none-any.whl (102 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting ptyprocess>=0.5\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting idna<4,>=2.5\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting urllib3<1.27,>=1.21.1\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting charset-normalizer~=2.0.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading charset_normalizer-2.0.12-py3-none-any.whl (39 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting certifi>=2017.4.17\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting cryptography>=2.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading cryptography-40.0.2-cp36-abi3-manylinux_2_28_x86_64.whl (3.7 MB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting cffi>=1.12\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading cffi-1.15.1-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.whl (402 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting pycparser\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting virtualenv<21.0.0,>=20.0.26\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading virtualenv-20.17.0-py3-none-any.whl (8.8 MB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading virtualenv-20.16.7-py3-none-any.whl (8.8 MB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading virtualenv-20.16.6-py3-none-any.whl (8.8 MB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading virtualenv-20.16.5-py3-none-any.whl (8.8 MB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading virtualenv-20.16.4-py3-none-any.whl (8.8 MB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading virtualenv-20.16.3-py2.py3-none-any.whl (8.8 MB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading virtualenv-20.16.2-py2.py3-none-any.whl (8.8 MB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting importlib-resources>=1.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading importlib_resources-5.4.0-py3-none-any.whl (28 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting distlib<1,>=0.3.1\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting filelock<4,>=3.2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading filelock-3.4.1-py3-none-any.whl (9.9 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Collecting platformdirs<3,>=2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   Downloading platformdirs-2.4.0-py3-none-any.whl (14 kB)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Installing collected packages: pycparser, urllib3, idna, charset-normalizer, cffi, certifi, zipp, requests, pylev, pastel, msgpack, jeepney, cryptography, crashtest, webencodings, six, SecretStorage, pyparsing, ptyprocess, platformdirs, lockfile, importlib-resources, importlib-metadata, filelock, distlib, clikit, cachecontrol, virtualenv, tomlkit, shellingham, requests-toolbelt, poetry-core, pkginfo, pexpect, packaging, keyring, html5lib, cleo, cachy, poetry\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Successfully installed SecretStorage-3.3.3 cachecontrol-0.12.14 cachy-0.3.0 certifi-2023.5.7 cffi-1.15.1 charset-normalizer-2.0.12 cleo-0.8.1 clikit-0.6.2 crashtest-0.3.1 cryptography-40.0.2 distlib-0.3.6 filelock-3.4.1 html5lib-1.1 idna-3.4 importlib-metadata-1.7.0 importlib-resources-5.4.0 jeepney-0.7.1 keyring-22.3.0 lockfile-0.12.2 msgpack-1.0.5 packaging-20.9 pastel-0.2.1 pexpect-4.8.0 pkginfo-1.9.6 platformdirs-2.4.0 poetry-1.1.15 poetry-core-1.0.8 ptyprocess-0.7.0 pycparser-2.21 pylev-1.4.0 pyparsing-3.1.0 requests-2.27.1 requests-toolbelt-0.9.1 shellingham-1.4.0 six-1.16.0 tomlkit-0.11.6 urllib3-1.26.16 virtualenv-20.16.2 webencodings-0.5.1 zipp-3.6.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | WARNING: You are using pip version 21.2.4; however, version 21.3.1 is available.\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.6.14/x64/bin/python -m pip install --upgrade pip' command.\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Creating virtualenv wechatpy-5cj2Pc-i-py3.6 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Installing dependencies from lock file\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Package operations: 32 installs, 0 updates, 0 removals\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing pycparser (2.21)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing typing-extensions (3.10.0.2)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing zipp (3.6.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing cffi (1.15.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing importlib-metadata (4.8.2)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing pyparsing (2.4.7)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing attrs (21.2.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing certifi (2022.12.7)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing charset-normalizer (2.0.7)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing cryptography (35.0.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing idna (3.3)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing iniconfig (1.1.1)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing packaging (21.2)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing pluggy (1.0.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing py (1.11.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing six (1.16.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing toml (0.10.2)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing tomli (1.2.2)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing urllib3 (1.26.7)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing coverage (6.1.2)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing pyopenssl (21.0.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing pytest (6.2.5)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing requests (2.26.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing dataclasses (0.7)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing httmock (1.4.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing optionaldict (0.1.2)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing pymemcache (3.5.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing pytest-cov (3.0.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing python-dateutil (2.8.2)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing redis (3.5.3)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing requests-pkcs12 (1.13)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |   \u2022 Installing xmltodict (0.12.0)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Installing the current project: wechatpy (2.0.0.alpha26)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Package             Version\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | ------------------- --------\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | CacheControl        0.12.14\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | cachy               0.3.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | certifi             2023.5.7\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | cffi                1.15.1\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | charset-normalizer  2.0.12\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | cleo                0.8.1\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | clikit              0.6.2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | crashtest           0.3.1\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | cryptography        40.0.2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | distlib             0.3.6\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | filelock            3.4.1\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | html5lib            1.1\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | idna                3.4\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | importlib-metadata  1.7.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | importlib-resources 5.4.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | jeepney             0.7.1\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | keyring             22.3.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | lockfile            0.12.2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | msgpack             1.0.5\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | packaging           20.9\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | pastel              0.2.1\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | pexpect             4.8.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | pip                 21.2.4\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | pkginfo             1.9.6\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | platformdirs        2.4.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | poetry              1.1.15\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | poetry-core         1.0.8\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | ptyprocess          0.7.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | pycparser           2.21\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | pylev               1.4.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | pyparsing           3.1.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | requests            2.27.1\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | requests-toolbelt   0.9.1\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | SecretStorage       3.3.3\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | setuptools          40.6.2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | shellingham         1.4.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | six                 1.16.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tomlkit             0.11.6\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | urllib3             1.26.16\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | virtualenv          20.16.2\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | webencodings        0.5.1\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | zipp                3.6.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | WARNING: You are using pip version 21.2.4; however, version 21.3.1 is available.\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.6.14/x64/bin/python -m pip install --upgrade pip' command.\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \u2705  Success - Main Install Dependencies\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ] \u2b50 Run Main pytest\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | ============================= test session starts ==============================\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | platform linux -- Python 3.6.14, pytest-6.2.5, py-1.11.0, pluggy-1.0.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/wechatpy-wechatpy, configfile: pytest.ini, testpaths: tests\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | plugins: cov-3.0.0\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | collected 396 items\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tests/test_client.py ................................................... [ 12%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | .......................................................................  [ 30%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tests/test_component_api.py .............                                [ 34%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tests/test_constants.py ..                                               [ 34%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tests/test_create_reply.py .......                                       [ 36%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tests/test_crypto.py .......                                             [ 38%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tests/test_deserialize_reply.py .......                                  [ 39%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tests/test_events.py ..............................                      [ 47%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tests/test_external_contact.py ......                                    [ 48%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tests/test_fields.py ...........                                         [ 51%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tests/test_messages.py ........                                          [ 53%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tests/test_oauth.py .......                                              [ 55%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tests/test_parser.py ....................                                [ 60%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tests/test_pay.py ...                                                    [ 61%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tests/test_payment.py .....                                              [ 62%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tests/test_replies.py ........                                           [ 64%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tests/test_send_messages.py .                                            [ 64%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tests/test_session.py F.....                                             [ 66%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tests/test_utils.py ......                                               [ 67%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tests/test_work_client.py .............................................. [ 79%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | .......................................................                  [ 93%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tests/test_work_create_reply.py .......                                  [ 95%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tests/test_work_parser.py ...................                            [100%]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | =================================== FAILURES ===================================\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | __________ WeChatSessionTestCase.test_memcached_storage_access_token ___________\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | self = <test_session.WeChatSessionTestCase testMethod=test_memcached_storage_access_token>\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |     def test_memcached_storage_access_token(self):\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |         if platform.system() == \"Windows\":\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |             return\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |     \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |         from pymemcache.client import Client\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |         from wechatpy.session.memcachedstorage import MemcachedStorage\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |     \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |         servers = (\"127.0.0.1\", 11211)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |         memcached = Client(servers)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |         session = MemcachedStorage(memcached)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |         client = WeChatClient(self.app_id, self.secret, session=session)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |         with HTTMock(wechat_api_mock):\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | >           token = client.fetch_access_token()\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | tests/test_session.py:101: \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/__init__.py:73: in fetch_access_token\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |     \"secret\": self.secret,\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/base.py:171: in _fetch_access_token\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |     self.session.set(self.access_token_key, result[\"access_token\"], expires_in)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/session/memcachedstorage.py:30: in set\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |     self.mc.set(key, value, ttl)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | /home/runneradmin/.cache/pypoetry/virtualenvs/wechatpy-5cj2Pc-i-py3.6/lib/python3.6/site-packages/pymemcache/client/base.py:463: in set\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |     flags=flags)[key]\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | /home/runneradmin/.cache/pypoetry/virtualenvs/wechatpy-5cj2Pc-i-py3.6/lib/python3.6/site-packages/pymemcache/client/base.py:1091: in _store_cmd\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |     self._connect()\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | self = <pymemcache.client.base.Client object at 0x7fc720f786d8>\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |     def _connect(self):\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |         self.close()\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |     \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |         s = self.socket_module\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |     \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |         if not isinstance(self.server, tuple):\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |             sockaddr = self.server\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |             sock = s.socket(s.AF_UNIX, s.SOCK_STREAM)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |     \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |         else:\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |             sock = None\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |             error = None\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |             host, port = self.server\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |             info = s.getaddrinfo(host, port, s.AF_UNSPEC, s.SOCK_STREAM,\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                                  s.IPPROTO_TCP)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |             for family, socktype, proto, _, sockaddr in info:\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                 try:\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                     sock = s.socket(family, socktype, proto)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                     if self.no_delay:\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                         sock.setsockopt(s.IPPROTO_TCP, s.TCP_NODELAY, 1)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                     if self.tls_context:\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                         context = self.tls_context\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                         sock = context.wrap_socket(sock, server_hostname=host)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                 except Exception as e:\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                     error = e\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                     if sock is not None:\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                         sock.close()\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                         sock = None\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                 else:\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                     break\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |     \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |             if error is not None:\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                 raise error\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |     \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |         try:\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |             sock.settimeout(self.connect_timeout)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |             if self.socket_keepalive is not None:\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                 sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                 sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_KEEPIDLE,\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                                 self.socket_keepalive.idle)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                 sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_KEEPINTVL,\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                                 self.socket_keepalive.intvl)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                 sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_KEEPCNT,\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   |                                 self.socket_keepalive.cnt)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | >           sock.connect(sockaddr)\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | /home/runneradmin/.cache/pypoetry/virtualenvs/wechatpy-5cj2Pc-i-py3.6/lib/python3.6/site-packages/pymemcache/client/base.py:420: ConnectionRefusedError\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/wechatpy-wechatpy/report.xml -\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | ---------- coverage: platform linux, python 3.6.14-final-0 -----------\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Name                                                      Stmts   Miss  Cover\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | -----------------------------------------------------------------------------\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/__init__.py                                         11      0   100%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/__init__.py                                  68     23    66%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/__init__.py                              27      0   100%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/base.py                                  19      0   100%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/card.py                                 145    104    28%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/cloud.py                                 56     26    54%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/customservice.py                         51      2    96%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/datacube.py                              62      1    98%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/device.py                                48     17    65%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/draft.py                                 17      9    47%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/freepublish.py                           12      5    58%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/group.py                                 24      2    92%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/invoice.py                               54     29    46%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/jsapi.py                                 48     11    77%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/marketing.py                             38     27    29%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/material.py                              39     22    44%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/media.py                                 19      7    63%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/menu.py                                  24      7    71%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/merchant/__init__.py                     88     38    57%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/merchant/category.py                     12      6    50%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/merchant/common.py                        6      2    67%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/merchant/express.py                      15      7    53%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/merchant/group.py                        17      8    53%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/merchant/order.py                        15      7    53%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/merchant/shelf.py                        14      6    57%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/merchant/stock.py                         7      2    71%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/message.py                              119     25    79%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/misc.py                                  10      0   100%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/poi.py                                   15      7    53%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/qrcode.py                                15      3    80%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/scan.py                                  31      0   100%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/semantic.py                              16     12    25%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/shakearound.py                           90      2    98%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/tag.py                                   52     24    54%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/template.py                              29     12    59%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/user.py                                  33      1    97%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/wifi.py                                  37      3    92%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/api/wxa.py                                  121     63    48%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/client/base.py                                     120     21    82%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/component.py                                       227     65    71%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/constants.py                                       204      0   100%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/crypto/__init__.py                                  94     10    89%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/crypto/base.py                                      65      7    89%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/crypto/pkcs7.py                                     15      2    87%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/events.py                                          373      6    98%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/exceptions.py                                       38     10    74%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/fields.py                                          165      8    95%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/messages.py                                        120      3    98%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/oauth.py                                            75     10    87%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/parser.py                                           30      1    97%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/pay/__init__.py                                    151     54    64%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/pay/api/__init__.py                                 11      0   100%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/pay/api/appauth.py                                  17      9    47%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/pay/api/base.py                                     19      5    74%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/pay/api/coupon.py                                   16      9    44%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/pay/api/jsapi.py                                    18      9    50%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/pay/api/micropay.py                                 14      7    50%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/pay/api/order.py                                    40     25    38%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/pay/api/profitsharing.py                            30     18    40%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/pay/api/redpack.py                                  20     12    40%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/pay/api/refund.py                                    8      4    50%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/pay/api/tools.py                                    21     14    33%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/pay/api/transfer.py                                 30     19    37%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/pay/api/withhold.py                                 41      3    93%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/pay/utils.py                                        66      7    89%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/replies.py                                         203      9    96%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/schemes.py                                          24      1    96%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/session/__init__.py                                 10      3    70%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/session/memcachedstorage.py                         26      8    69%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/session/memorystorage.py                            12      2    83%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/session/redisstorage.py                             26      3    88%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/utils.py                                            65      4    94%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/__init__.py                                     4      0   100%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/__init__.py                             36      0   100%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/__init__.py                         24      0   100%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/agent.py                            19     13    32%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/appchat.py                          36     27    25%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/batch.py                            15      2    87%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/calendar.py                         13      6    54%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/department.py                       34      7    79%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/email.py                           101     31    69%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/export.py                           18      0   100%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/external_contact.py                 91      3    97%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/external_contact_group_chat.py      29     21    28%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/invoice.py                          36      0   100%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/jsapi.py                            37     23    38%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/kf.py                               53     38    28%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/kf_message.py                       31     18    42%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/living.py                           31     18    42%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/media.py                            15      6    60%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/menu.py                             11      5    55%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/message.py                          46     32    30%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/misc.py                              5      0   100%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/oa.py                              142     54    62%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/oauth.py                            13      7    46%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/schedule.py                         18      9    50%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/service.py                           8      1    88%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/tag.py                              58      1    98%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/client/api/user.py                             61     36    41%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/crypto.py                                      17      0   100%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/events.py                                     213     42    80%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/exceptions.py                                   4      1    75%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/messages.py                                    30      0   100%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/parser.py                                      15      1    93%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/replies.py                                     49      5    90%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/services/__init__.py                           59     59     0%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/services/api/__init__.py                        2      2     0%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/services/api/auth.py                           13     13     0%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | wechatpy/work/services/api/miniprogram.py                     4      4     0%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | -----------------------------------------------------------------------------\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | TOTAL                                                      5289   1373    74%\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | Coverage XML written to file coverage.xml\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | \n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | =========================== short test summary info ============================\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | FAILED tests/test_session.py::WeChatSessionTestCase::test_memcached_storage_access_token\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   | ======================== 1 failed, 395 passed in 6.64s =========================\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ]   \u274c  Failure - Main pytest\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ] exitcode '1': failure\n[fcdadbe3-2ef3-4650-a169-30150593b60c/Test      ] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'mypy-check' failed\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/wechatpy-wechatpy/.github/workflows/CI-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 386.17006850242615
    }
}