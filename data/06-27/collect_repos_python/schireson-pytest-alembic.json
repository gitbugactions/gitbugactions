{
    "repository": "schireson/pytest-alembic",
    "stars": 113,
    "language": "python",
    "size": 486,
    "clone_url": "https://github.com/schireson/pytest-alembic.git",
    "timestamp": "2023-07-01T14:32:16.740374Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [],
        "stdout": "[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test] \ud83d\ude80  Start image=crawlergpt:latest\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic] user=0 workdir=\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2601  git clone 'https://github.com/abatilo/actions-poetry' # ref=v2.0.0\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test] \u2b50 Run Pre Install poetry\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2705  Success - Pre Install poetry\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v3\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test] \ud83e\uddea  Matrix: map[pytest-asyncio-version:0.16 pytest-version:6.2 python-version:3.7 sqlalchemy-version:1.3]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test] \u2b50 Run Main actions/checkout@v3\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2705  Success - Main actions/checkout@v3\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test] \u2b50 Run Main actions/setup-python@v4\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/b01fd94a-2c1f-4d0b-9557-20b62f3b4ac2/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2753  ::group::Installed versions\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::isExplicit: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::explicit? false\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::explicit? true\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::explicit? true\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::explicit? true\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::explicit? true\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::explicit? true\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::explicit? true\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::evaluating 6 versions\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::matched: 3.7.11\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Successfully set up CPython (3.7.11)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2753  ::endgroup::\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2705  Success - Main actions/setup-python@v4\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2699  ::set-output:: python-version=3.7.11\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test] \u2b50 Run Main Install poetry\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/b01fd94a-2c1f-4d0b-9557-20b62f3b4ac2/act/abatilo-actions-poetry@v2.0.0/ dst=/var/run/act/actions/abatilo-actions-poetry@v2.0.0/\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/abatilo-actions-poetry@v2.0.0/] user=0 workdir=\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test] \u2b50 Run Main pip install poetry==1.2.2\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting poetry==1.2.2\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading poetry-1.2.2-py3-none-any.whl (212 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting crashtest<0.4.0,>=0.3.0\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading crashtest-0.3.1-py3-none-any.whl (7.0 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting shellingham<2.0,>=1.5\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading shellingham-1.5.0.post1-py2.py3-none-any.whl (9.4 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting html5lib<2.0,>=1.0\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading html5lib-1.1-py2.py3-none-any.whl (112 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting pexpect<5.0.0,>=4.7.0\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading pexpect-4.8.0-py2.py3-none-any.whl (59 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting tomlkit!=0.11.2,!=0.11.3,<1.0.0,>=0.11.1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading tomlkit-0.11.8-py3-none-any.whl (35 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting platformdirs<3.0.0,>=2.5.2\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading platformdirs-2.6.2-py3-none-any.whl (14 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting cleo<2.0.0,>=1.0.0a5\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading cleo-1.0.0a5-py3-none-any.whl (78 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting dulwich<0.21.0,>=0.20.46\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading dulwich-0.20.50-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (498 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting poetry-core==1.3.2\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading poetry_core-1.3.2-py3-none-any.whl (531 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting cachecontrol[filecache]<0.13.0,>=0.12.9\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading CacheControl-0.12.14-py2.py3-none-any.whl (21 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting requests<3.0,>=2.18\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting virtualenv!=20.4.5,!=20.4.6,>=20.4.3\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting importlib-metadata<5.0,>=4.4\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading importlib_metadata-4.13.0-py3-none-any.whl (23 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting pkginfo<2.0,>=1.5\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading pkginfo-1.9.6-py3-none-any.whl (30 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting keyring>=21.2.0\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading keyring-24.1.1-py3-none-any.whl (37 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting requests-toolbelt<0.10.0,>=0.9.1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading requests_toolbelt-0.9.1-py2.py3-none-any.whl (54 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting jsonschema<5.0.0,>=4.10.0\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading jsonschema-4.17.3-py3-none-any.whl (90 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting poetry-plugin-export<2.0.0,>=1.1.2\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading poetry_plugin_export-1.4.0-py3-none-any.whl (10 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting backports.cached-property<2.0.0,>=1.0.2\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading backports.cached_property-1.0.2-py3-none-any.whl (6.1 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting cachy<0.4.0,>=0.3.0\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading cachy-0.3.0-py2.py3-none-any.whl (20 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting urllib3<2.0.0,>=1.26.0\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting packaging>=20.4\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting msgpack>=0.5.2\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading msgpack-1.0.5-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (299 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting lockfile>=0.9\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading lockfile-0.12.2-py2.py3-none-any.whl (13 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting pylev<2.0.0,>=1.3.0\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading pylev-1.4.0-py2.py3-none-any.whl (6.1 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting six>=1.9\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting webencodings\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting typing-extensions>=3.6.4\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading typing_extensions-4.7.0-py3-none-any.whl (33 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting zipp>=0.5\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting pkgutil-resolve-name>=1.3.10\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading pkgutil_resolve_name-1.3.10-py3-none-any.whl (4.7 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting attrs>=17.4.0\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting importlib-resources>=1.4.0\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading importlib_resources-5.12.0-py3-none-any.whl (36 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading pyrsistent-0.19.3-py3-none-any.whl (57 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting SecretStorage>=3.2\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading SecretStorage-3.3.3-py3-none-any.whl (15 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting jeepney>=0.4.2\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading jeepney-0.8.0-py3-none-any.whl (48 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting jaraco.classes\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading jaraco.classes-3.2.3-py3-none-any.whl (6.0 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting ptyprocess>=0.5\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting poetry-plugin-export<2.0.0,>=1.1.2\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading poetry_plugin_export-1.3.1-py3-none-any.whl (10 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading poetry_plugin_export-1.3.0-py3-none-any.whl (10 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading poetry_plugin_export-1.2.0-py3-none-any.whl (10 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting idna<4,>=2.5\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting charset-normalizer<4,>=2\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting certifi>=2017.4.17\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting cryptography>=2.0\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading cryptography-41.0.1-cp37-abi3-manylinux_2_28_x86_64.whl (4.3 MB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting cffi>=1.12\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading cffi-1.15.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (427 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting pycparser\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting virtualenv!=20.4.5,!=20.4.6,>=20.4.3\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading virtualenv-20.23.0-py3-none-any.whl (3.3 MB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading virtualenv-20.22.0-py3-none-any.whl (3.2 MB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading virtualenv-20.21.1-py3-none-any.whl (8.7 MB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting filelock<4,>=3.4.1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading filelock-3.12.2-py3-none-any.whl (10 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting distlib<1,>=0.3.6\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Collecting more-itertools\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   Downloading more_itertools-9.1.0-py3-none-any.whl (54 kB)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Installing collected packages: pycparser, zipp, urllib3, typing-extensions, idna, charset-normalizer, cffi, certifi, requests, msgpack, more-itertools, jeepney, importlib-metadata, cryptography, webencodings, six, SecretStorage, pyrsistent, pylev, ptyprocess, poetry-core, platformdirs, pkgutil-resolve-name, lockfile, jaraco.classes, importlib-resources, filelock, distlib, crashtest, cachecontrol, attrs, virtualenv, tomlkit, shellingham, requests-toolbelt, poetry-plugin-export, pkginfo, pexpect, packaging, keyring, jsonschema, html5lib, dulwich, cleo, cachy, backports.cached-property, poetry\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Successfully installed SecretStorage-3.3.3 attrs-23.1.0 backports.cached-property-1.0.2 cachecontrol-0.12.14 cachy-0.3.0 certifi-2023.5.7 cffi-1.15.1 charset-normalizer-3.1.0 cleo-1.0.0a5 crashtest-0.3.1 cryptography-41.0.1 distlib-0.3.6 dulwich-0.20.50 filelock-3.12.2 html5lib-1.1 idna-3.4 importlib-metadata-4.13.0 importlib-resources-5.12.0 jaraco.classes-3.2.3 jeepney-0.8.0 jsonschema-4.17.3 keyring-24.1.1 lockfile-0.12.2 more-itertools-9.1.0 msgpack-1.0.5 packaging-23.1 pexpect-4.8.0 pkginfo-1.9.6 pkgutil-resolve-name-1.3.10 platformdirs-2.6.2 poetry-1.2.2 poetry-core-1.3.2 poetry-plugin-export-1.2.0 ptyprocess-0.7.0 pycparser-2.21 pylev-1.4.0 pyrsistent-0.19.3 requests-2.31.0 requests-toolbelt-0.9.1 shellingham-1.5.0.post1 six-1.16.0 tomlkit-0.11.8 typing-extensions-4.7.0 urllib3-1.26.16 virtualenv-20.21.1 webencodings-0.5.1 zipp-3.15.0\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2705  Success - Main pip install poetry==1.2.2\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2705  Success - Main Install poetry\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test] \u2b50 Run Main Set up cache\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/b01fd94a-2c1f-4d0b-9557-20b62f3b4ac2/act/actions-cache@v3/ dst=/var/run/act/actions/actions-cache@v3/\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v3/] user=0 workdir=\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/restore/index.js] user= workdir=\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::Resolved Keys:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::[\"venv-Linux-3.7-6.2-0.16-1.3-7b3a65268a18553e6179cdec5f9e46dd69fdb150775ce2e11f7c210805a54d90\"]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::1.5.0\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:36859/_apis/artifactcache/cache?keys=venv-Linux-3.7-6.2-0.16-1.3-7b3a65268a18553e6179cdec5f9e46dd69fdb150775ce2e11f7c210805a54d90&version=f14b8689c5500668a103362b445691a9eb68504d0dc66fe0dc6474ce4eb12dc7\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Cache not found for input keys: venv-Linux-3.7-6.2-0.16-1.3-7b3a65268a18553e6179cdec5f9e46dd69fdb150775ce2e11f7c210805a54d90\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2705  Success - Main Set up cache\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test] \u2b50 Run Main Install dependencies\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Creating virtualenv pytest-alembic-aRzOFBrQ-py3.7 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | poetry install\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Installing dependencies from lock file\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Package operations: 41 installs, 0 updates, 0 removals\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing typing-extensions (4.1.1)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing zipp (3.6.0)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing importlib-metadata (4.8.3)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing certifi (2023.5.7)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing charset-normalizer (3.1.0)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing click (8.0.4)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing idna (3.4)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing pyparsing (3.0.7)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing urllib3 (2.0.2)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing attrs (22.2.0)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing greenlet (2.0.2)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing iniconfig (1.1.1)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing markupsafe (2.0.1)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing packaging (21.3)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing pluggy (1.0.0)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing py (1.11.0)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing pydantic (1.10.2)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing requests (2.31.0)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing tomli (1.2.3)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing tqdm (4.65.0)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing typer (0.9.0)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing filelock (3.12.0)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing importlib-resources (5.4.0)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing mako (1.1.6)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing mypy-extensions (1.0.0)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing pathspec (0.9.0)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing platformdirs (2.4.0)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing pytest (7.0.1)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing python-on-whales (0.60.1)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing sqlalchemy (1.4.48)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing typed-ast (1.5.4)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing alembic (1.7.7)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing asyncpg (0.26.0)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing black (22.3.0)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing coverage (7.2.5)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing mypy (0.971)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing psycopg2-binary (2.9.6)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing pytest-mock-resources (2.6.12)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing ruff (0.0.269)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing types-dataclasses (0.1.7)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \u2022 Installing pytest-asyncio (0.16.0)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Installing the current project: pytest-alembic (0.10.6)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2705  Success - Main Install dependencies\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test] \u2b50 Run Main Install specific versions\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test] Unable to interpolate expression 'format('poetry run pip install ''sqlalchemy~={0}''\npoetry run pip install ''pytest --junitxml=report.xml~={1}''\npoetry run pip install ''pytest --junitxml=report.xml-asyncio~={2}''\n', matrix.sqlalchemy-version, matrix.pytest --junitxml=report.xml-version, matrix.pytest --junitxml=report.xml-asyncio-version)': Failed to parse: got unexpected character '-' while lexing integer part of number, expecting '0'..'9'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2705  Success - Main Install specific versions\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test] \u2b50 Run Main Run linters\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ruff src tests || exit 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | black --check src tests || exit 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | All done! \u2728 \ud83c\udf70 \u2728\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | 29 files would be left unchanged.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | mypy src tests || exit 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Success: no issues found in 29 source files\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2705  Success - Main Run linters\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test] \u2b50 Run Main Run tests\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/7] user= workdir=\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | COVERAGE_PROCESS_START=\"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/pyproject.toml\" \\\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | coverage run -m pytest src tests -vv\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================= test session starts ==============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | platform linux -- Python 3.7.11, pytest-7.0.1, pluggy-1.0.0 -- /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/bin/python\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | cachedir: .pytest_cache\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic, configfile: pyproject.toml\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | plugins: mock-resources-2.6.12, asyncio-0.16.0, alembic-0.10.6\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | collecting ... collected 90 items\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | run-last-failure: no previously failed tests, not deselecting items.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | src/pytest_alembic/config.py::pytest_alembic.config.Config PASSED        [  1%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | src/pytest_alembic/config.py::pytest_alembic.config.Config.from_raw_config PASSED [  2%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | src/pytest_alembic/plugin/fixtures.py::pytest_alembic.plugin.fixtures.alembic_config PASSED [  3%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | src/pytest_alembic/plugin/fixtures.py::pytest_alembic.plugin.fixtures.alembic_runner PASSED [  4%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | src/pytest_alembic/plugin/fixtures.py::pytest_alembic.plugin.fixtures.create_alembic_fixture PASSED [  5%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_config.py::test_default_file PASSED                           [  6%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_config.py::test_set_file PASSED                               [  7%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_config.py::test_set_config_file_name PASSED                   [  8%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_config.py::test_set_sqlalchemy_url PASSED                     [ 10%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_config.py::test_set_script_location PASSED                    [ 11%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_history.py::test_parse_head_revision PASSED                   [ 12%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_history.py::test_validate_revision PASSED                     [ 13%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_history.py::test_previous_revision PASSED                     [ 14%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_history.py::test_previous_revision_base PASSED                [ 15%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_history.py::test_next_revision PASSED                         [ 16%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_history.py::test_next_revision_head PASSED                    [ 17%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_history.py::test_revision_range_to_head PASSED                [ 18%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_history.py::test_revision_range_from_base PASSED              [ 20%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_history.py::test_revision_window PASSED                       [ 21%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_revision_data.py::test_from_config_empty PASSED               [ 22%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_revision_data.py::test_from_config_empty_data PASSED          [ 23%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_revision_data.py::test_revision_spec_input PASSED             [ 24%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_revision_data.py::test_get_before_single_item PASSED          [ 25%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_revision_data.py::test_get_before_multiple_items PASSED       [ 26%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_revision_data.py::test_get_at_single_item PASSED              [ 27%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_revision_data.py::test_get_at_multiple_items PASSED           [ 28%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_no_data PASSED                                [ 30%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_empty_history PASSED                          [ 31%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_alternative_script_location PASSED            [ 32%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_manual_alembic_config PASSED                  [ 33%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_default_script_location PASSED                [ 34%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_basic_revision_upgrade_data PASSED            [ 35%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_complex_revision_upgrade_data FAILED          [ 36%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_multiple_schemata PASSED                      [ 37%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_schema_revision_data FAILED                   [ 38%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_branched_history FAILED                       [ 40%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_branched_history_with_mergepoint PASSED       [ 41%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_ambiguous_downgrade_history PASSED            [ 42%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_migrate_up_to PASSED                          [ 43%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_migrate_up_before PASSED                      [ 44%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_migrate_down_before PASSED                    [ 45%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_process_revision_directives PASSED            [ 46%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_experimental_all_models_register PASSED       [ 47%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_experimental_all_models_register_metadata PASSED [ 48%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_experimental_all_models_register_failure PASSED [ 50%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_experimental_all_models_register_no_metadata PASSED [ 51%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_experimental_all_models_register_automatic PASSED [ 52%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_consistency_doesnt_roundtrip FAILED           [ 53%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_downgrade_leaves_no_trace_success FAILED      [ 54%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_downgrade_leaves_no_trace_failure FAILED      [ 55%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_minimum_downgrade_revision FAILED             [ 56%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_unimplemented_downgrade_warning FAILED        [ 57%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_failing_downgrade FAILED                      [ 58%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_async_sqlalchemy FAILED                       [ 60%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_async_sqlalchemy_native FAILED                [ 61%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_experimental_all_models_register_async FAILED [ 62%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_experimental_all_models_register_offline PASSED [ 63%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_experimental_all_models_register_namespace_package PASSED [ 64%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_generate_revision PASSED                      [ 65%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_skip_revision PASSED                          [ 66%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_pytest_alembic_tests_path FAILED              [ 67%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/test_runner.py::test_version_table_schema FAILED                   [ 68%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/plugin/test_plugin.py::test_parse_raw_test_names_empty_skips PASSED [ 70%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/plugin/test_plugin.py::Test__OptionResolver::test_all_enabled PASSED [ 71%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/plugin/test_plugin.py::Test__OptionResolver::test_include_specified_invalid PASSED [ 72%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/plugin/test_plugin.py::Test__OptionResolver::test_include_specified PASSED [ 73%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/plugin/test_plugin.py::Test__OptionResolver::test_exclude_specified_invalid PASSED [ 74%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/plugin/test_plugin.py::Test__OptionResolver::test_exclude_specified PASSED [ 75%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/plugin/test_plugin.py::Test__OptionResolver::test_include_experimental PASSED [ 76%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/plugin/test_plugin.py::Test_collect_tests::test_disabled_cli PASSED [ 77%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/plugin/test_plugin.py::Test_collect_tests::test_include_cfg PASSED [ 78%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/plugin/test_plugin.py::Test_collect_tests::test_exclude_cfg PASSED [ 80%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/plugin/test_plugin.py::Test_collect_tests::test_included_tests_start_with_tests PASSED [ 81%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/tests/experimental/test_all_models_register_on_metadata.py::Test_traverse_modules::test_non_existent_module PASSED [ 82%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/tests/experimental/test_all_models_register_on_metadata.py::Test_traverse_modules::test_non_package PASSED [ 83%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/tests/experimental/test_all_models_register_on_metadata.py::Test_traverse_modules::test_package_without_path PASSED [ 84%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/tests/experimental/test_all_models_register_on_metadata.py::Test_traverse_modules::test_package_children_single_level PASSED [ 85%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/tests/experimental/test_all_models_register_on_metadata.py::Test_traverse_modules::test_package_child_import_error PASSED [ 86%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/tests/experimental/test_all_models_register_on_metadata.py::Test_traverse_modules::test_package_child_is_package PASSED [ 87%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/tests/experimental/test_all_models_register_on_metadata.py::Test_get_full_tableset::test_null_metadata PASSED [ 88%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/tests/experimental/test_all_models_register_on_metadata.py::Test_get_full_tableset::test_no_metadata PASSED [ 90%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/tests/experimental/test_collect_clean_alembic_environment.py::Test_environment_context_fn::test_no_target_metadata PASSED [ 91%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/tests/experimental/test_collect_clean_alembic_environment.py::Test_environment_context_fn::test_output PASSED [ 92%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/tests/experimental/test_collect_clean_alembic_environment.py::Test_identify_modules::test_has_model_base_metadata PASSED [ 93%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/tests/experimental/test_collect_clean_alembic_environment.py::Test_identify_modules::test_has_model_base PASSED [ 94%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/tests/experimental/test_collect_clean_alembic_environment.py::Test_identify_modules::test_just_metadata PASSED [ 95%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/tests/experimental/test_collect_clean_alembic_environment.py::Test_get_referrer_module::test_get_referer[None-loader_name0] PASSED [ 96%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/tests/experimental/test_collect_clean_alembic_environment.py::Test_get_referrer_module::test_get_referer[__main__-loader_name1] PASSED [ 97%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/tests/experimental/test_collect_clean_alembic_environment.py::Test_get_referrer_module::test_get_referer[env_py-loader_name2] PASSED [ 98%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests/tests/experimental/test_collect_clean_alembic_environment.py::Test_get_referrer_module::test_get_referer[meow-loader_name3] PASSED [100%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | =================================== FAILURES ===================================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ______________________ test_complex_revision_upgrade_data ______________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_complex_revision_upgrade_data0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def test_complex_revision_upgrade_data(pytester):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       run_pytest(pytester)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:70: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_complex_revision_upgrade_data0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run_pytest(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester, *, success=True, passed=4, skipped=0, failed=0, test_alembic=True, args=None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if not args:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args = [\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--test-alembic\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--alembic-tests-path\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"conftest.py\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-vv\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-s\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             ]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if not test_alembic:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args = [\"-vv\", \"conftest.py\"]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester.copy_example()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         result = pytester.inline_run(*args)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         expected_return = (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             (pytest.ExitCode.OK if passed or skipped or failed else pytest.ExitCode.NO_TESTS_COLLECTED)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if success\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             else pytest.ExitCode.TESTS_FAILED\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       assert result.ret == expected_return\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E       assert <ExitCode.TESTS_FAILED: 1> == <ExitCode.OK: 0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         +<ExitCode.TESTS_FAILED: 1>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         -<ExitCode.OK: 0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:26: AssertionError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stdout call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================= test session starts ==============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | platform linux -- Python 3.7.11, pytest-7.0.1, pluggy-1.0.0 -- /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/bin/python\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | cachedir: .pytest_cache\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | rootdir: /tmp/pytest-of-runneradmin/pytest-0/test_complex_revision_upgrade_data0\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | plugins: mock-resources-2.6.12, asyncio-0.16.0, alembic-0.10.6\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | collecting ... collected 4 items\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_model_definitions_match_ddl Unable to find image 'postgres:9.6.10-alpine' locally\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_single_head_revision ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_up_down_consistency ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_upgrade ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ==================================== ERRORS ====================================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _____ ERROR at setup of [pytest-alembic] test_model_definitions_match_ddl ______\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b784fb10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b784fb10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b7d07950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b7d07950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b7d07950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b7d07950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b78d95d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________ ERROR at setup of [pytest-alembic] test_single_head_revision _________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b784fb10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b784fb10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b7d07950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b7d07950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b7d07950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b7d07950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b78d95d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________ ERROR at setup of [pytest-alembic] test_up_down_consistency __________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b784fb10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b784fb10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b7d07950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b7d07950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b7d07950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b7d07950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b78d95d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _______________ ERROR at setup of [pytest-alembic] test_upgrade ________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b784fb10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b784fb10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b7d07950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b7d07950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b7d07950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b7d07950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b78d95d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | =========================== short test summary info ============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_model_definitions_match_ddl - python_...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_single_head_revision - python_on_whal...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_up_down_consistency - python_on_whale...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_upgrade - python_on_whales.exceptions...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================== 4 errors in 3.55s ===============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stderr call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/create?fromImage=postgres&tag=9.6.10-alpine\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | __________________________ test_schema_revision_data ___________________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_schema_revision_data0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def test_schema_revision_data(pytester):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Assert that revision data handles schema names included in the table name.\"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       run_pytest(pytester, passed=3)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:85: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_schema_revision_data0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run_pytest(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester, *, success=True, passed=4, skipped=0, failed=0, test_alembic=True, args=None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if not args:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args = [\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--test-alembic\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--alembic-tests-path\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"conftest.py\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-vv\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-s\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             ]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if not test_alembic:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args = [\"-vv\", \"conftest.py\"]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester.copy_example()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         result = pytester.inline_run(*args)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         expected_return = (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             (pytest.ExitCode.OK if passed or skipped or failed else pytest.ExitCode.NO_TESTS_COLLECTED)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if success\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             else pytest.ExitCode.TESTS_FAILED\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       assert result.ret == expected_return\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E       assert <ExitCode.TESTS_FAILED: 1> == <ExitCode.OK: 0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         +<ExitCode.TESTS_FAILED: 1>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         -<ExitCode.OK: 0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:26: AssertionError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stdout call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================= test session starts ==============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | platform linux -- Python 3.7.11, pytest-7.0.1, pluggy-1.0.0 -- /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/bin/python\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | cachedir: .pytest_cache\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | rootdir: /tmp/pytest-of-runneradmin/pytest-0/test_schema_revision_data0, configfile: setup.cfg\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | plugins: mock-resources-2.6.12, asyncio-0.16.0, alembic-0.10.6\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | collecting ... collected 3 items\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_single_head_revision Unable to find image 'postgres:9.6.10-alpine' locally\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_up_down_consistency ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_upgrade ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ==================================== ERRORS ====================================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________ ERROR at setup of [pytest-alembic] test_single_head_revision _________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b68e7e50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b68e7e50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b68ee050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b68ee050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b68ee050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b68ee050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b7c5b710>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________ ERROR at setup of [pytest-alembic] test_up_down_consistency __________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b68e7e50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b68e7e50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b68ee050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b68ee050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b68ee050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b68ee050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b7c5b710>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _______________ ERROR at setup of [pytest-alembic] test_upgrade ________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b68e7e50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b68e7e50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b68ee050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b68ee050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b68ee050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b68ee050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b7c5b710>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | =========================== short test summary info ============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_single_head_revision - python_on_whal...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_up_down_consistency - python_on_whale...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_upgrade - python_on_whales.exceptions...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================== 3 errors in 2.37s ===============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stderr call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/create?fromImage=postgres&tag=9.6.10-alpine\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ____________________________ test_branched_history _____________________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_branched_history0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def test_branched_history(pytester):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Branched history can be navigated, when there's no mergepoint present.\"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       run_pytest(pytester, passed=4)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:90: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_branched_history0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run_pytest(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester, *, success=True, passed=4, skipped=0, failed=0, test_alembic=True, args=None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if not args:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args = [\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--test-alembic\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--alembic-tests-path\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"conftest.py\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-vv\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-s\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             ]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if not test_alembic:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args = [\"-vv\", \"conftest.py\"]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester.copy_example()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         result = pytester.inline_run(*args)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         expected_return = (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             (pytest.ExitCode.OK if passed or skipped or failed else pytest.ExitCode.NO_TESTS_COLLECTED)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if success\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             else pytest.ExitCode.TESTS_FAILED\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       assert result.ret == expected_return\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E       assert <ExitCode.TESTS_FAILED: 1> == <ExitCode.OK: 0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         +<ExitCode.TESTS_FAILED: 1>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         -<ExitCode.OK: 0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:26: AssertionError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stdout call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================= test session starts ==============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | platform linux -- Python 3.7.11, pytest-7.0.1, pluggy-1.0.0 -- /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/bin/python\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | cachedir: .pytest_cache\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | rootdir: /tmp/pytest-of-runneradmin/pytest-0/test_branched_history0, configfile: setup.cfg\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | plugins: mock-resources-2.6.12, asyncio-0.16.0, alembic-0.10.6\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | collecting ... collected 4 items\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_model_definitions_match_ddl Unable to find image 'postgres:9.6.10-alpine' locally\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_up_down_consistency ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_upgrade ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | test_migrations.py::test_migrate_up_to_specific_revision ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ==================================== ERRORS ====================================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _____ ERROR at setup of [pytest-alembic] test_model_definitions_match_ddl ______\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b6eb2110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b6eb2110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b644ff10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b644ff10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b644ff10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b644ff10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b7897c10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________ ERROR at setup of [pytest-alembic] test_up_down_consistency __________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b6eb2110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b6eb2110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b644ff10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b644ff10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b644ff10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b644ff10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b7897c10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _______________ ERROR at setup of [pytest-alembic] test_upgrade ________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b6eb2110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b6eb2110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b644ff10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b644ff10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b644ff10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b644ff10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b7897c10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ____________ ERROR at setup of test_migrate_up_to_specific_revision ____________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b6eb2110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b6eb2110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b644ff10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b644ff10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b644ff10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b644ff10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b7897c10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | =========================== short test summary info ============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_model_definitions_match_ddl - python_...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_up_down_consistency - python_on_whale...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_upgrade - python_on_whales.exceptions...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR test_migrations.py::test_migrate_up_to_specific_revision - python_on_wh...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================== 4 errors in 2.88s ===============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stderr call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/create?fromImage=postgres&tag=9.6.10-alpine\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ______________________ test_consistency_doesnt_roundtrip _______________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_consistency_doesnt_roundtrip0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def test_consistency_doesnt_roundtrip(pytester):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Assert a up/down consistency fails if a migration cannot rountrip up -> down -> up.\"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       result = run_pytest(pytester, success=False, passed=3, failed=1)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:169: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_consistency_doesnt_roundtrip0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run_pytest(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester, *, success=True, passed=4, skipped=0, failed=0, test_alembic=True, args=None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if not args:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args = [\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--test-alembic\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--alembic-tests-path\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"conftest.py\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-vv\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-s\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             ]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if not test_alembic:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args = [\"-vv\", \"conftest.py\"]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester.copy_example()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         result = pytester.inline_run(*args)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         expected_return = (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             (pytest.ExitCode.OK if passed or skipped or failed else pytest.ExitCode.NO_TESTS_COLLECTED)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if success\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             else pytest.ExitCode.TESTS_FAILED\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         assert result.ret == expected_return\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       result.assertoutcome(passed=passed, skipped=skipped, failed=failed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E       AssertionError: ([], [], [<TestReport 'conftest.py::pytest-alembic::test_model_definitions_match_ddl' when='setup' outcome='failed'>, ...hen='setup' outcome='failed'>, <TestReport 'conftest.py::pytest-alembic::test_upgrade' when='setup' outcome='failed'>])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E       assert {'failed': 4, 'passed': 0, 'skipped': 0} == {'failed': 1, 'passed': 3, 'skipped': 0}\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         Common items:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         {'skipped': 0}\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         Differing items:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         {'passed': 0} != {'passed': 3}\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         {'failed': 4} != {'failed': 1}\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         Full diff:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         - {'failed': 1, 'passed': 3, 'skipped': 0}\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         ?            ^            ^\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         + {'failed': 4, 'passed': 0, 'skipped': 0}\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         ?            ^            ^\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:28: AssertionError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stdout call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================= test session starts ==============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | platform linux -- Python 3.7.11, pytest-7.0.1, pluggy-1.0.0 -- /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/bin/python\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | cachedir: .pytest_cache\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | rootdir: /tmp/pytest-of-runneradmin/pytest-0/test_consistency_doesnt_roundtrip0\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | plugins: mock-resources-2.6.12, asyncio-0.16.0, alembic-0.10.6\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | collecting ... collected 4 items\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_model_definitions_match_ddl Unable to find image 'postgres:9.6.10-alpine' locally\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_single_head_revision ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_up_down_consistency ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_upgrade ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ==================================== ERRORS ====================================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _____ ERROR at setup of [pytest-alembic] test_model_definitions_match_ddl ______\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b60c1050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b60c1050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b5bda950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b5bda950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b5bda950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b5bda950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b6030d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________ ERROR at setup of [pytest-alembic] test_single_head_revision _________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b60c1050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b60c1050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b5bda950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b5bda950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b5bda950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b5bda950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b6030d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________ ERROR at setup of [pytest-alembic] test_up_down_consistency __________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b60c1050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b60c1050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b5bda950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b5bda950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b5bda950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b5bda950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b6030d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _______________ ERROR at setup of [pytest-alembic] test_upgrade ________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b60c1050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b60c1050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b5bda950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b5bda950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b5bda950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b5bda950>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b6030d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | =========================== short test summary info ============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_model_definitions_match_ddl - python_...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_single_head_revision - python_on_whal...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_up_down_consistency - python_on_whale...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_upgrade - python_on_whales.exceptions...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================== 4 errors in 2.98s ===============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stderr call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/create?fromImage=postgres&tag=9.6.10-alpine\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ____________________ test_downgrade_leaves_no_trace_success ____________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_downgrade_leaves_no_trace_success0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def test_downgrade_leaves_no_trace_success(pytester):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Assert the all-models-register test is collected when included through automatic test insertion.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         I.e. through use of pytest_alembic_include_experimental, rather than a manually\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         written test.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       result = run_pytest(pytester, passed=5)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:181: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_downgrade_leaves_no_trace_success0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run_pytest(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester, *, success=True, passed=4, skipped=0, failed=0, test_alembic=True, args=None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if not args:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args = [\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--test-alembic\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--alembic-tests-path\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"conftest.py\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-vv\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-s\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             ]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if not test_alembic:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args = [\"-vv\", \"conftest.py\"]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester.copy_example()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         result = pytester.inline_run(*args)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         expected_return = (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             (pytest.ExitCode.OK if passed or skipped or failed else pytest.ExitCode.NO_TESTS_COLLECTED)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if success\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             else pytest.ExitCode.TESTS_FAILED\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       assert result.ret == expected_return\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E       assert <ExitCode.TESTS_FAILED: 1> == <ExitCode.OK: 0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         +<ExitCode.TESTS_FAILED: 1>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         -<ExitCode.OK: 0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:26: AssertionError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stdout call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================= test session starts ==============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | platform linux -- Python 3.7.11, pytest-7.0.1, pluggy-1.0.0 -- /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/bin/python\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | cachedir: .pytest_cache\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | rootdir: /tmp/pytest-of-runneradmin/pytest-0/test_downgrade_leaves_no_trace_success0, configfile: setup.cfg\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | plugins: mock-resources-2.6.12, asyncio-0.16.0, alembic-0.10.6\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | collecting ... collected 5 items\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_downgrade_leaves_no_trace Unable to find image 'postgres:9.6.10-alpine' locally\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_model_definitions_match_ddl ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_single_head_revision ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_up_down_consistency ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_upgrade ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ==================================== ERRORS ====================================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ______ ERROR at setup of [pytest-alembic] test_downgrade_leaves_no_trace _______\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b5e14090>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b5e14090>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b593bb90>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b593bb90>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b593bb90>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b593bb90>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b5fd2310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _____ ERROR at setup of [pytest-alembic] test_model_definitions_match_ddl ______\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b5e14090>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b5e14090>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b593bb90>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b593bb90>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b593bb90>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b593bb90>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b5fd2310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________ ERROR at setup of [pytest-alembic] test_single_head_revision _________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b5e14090>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b5e14090>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b593bb90>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b593bb90>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b593bb90>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b593bb90>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b5fd2310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________ ERROR at setup of [pytest-alembic] test_up_down_consistency __________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b5e14090>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b5e14090>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b593bb90>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b593bb90>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b593bb90>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b593bb90>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b5fd2310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _______________ ERROR at setup of [pytest-alembic] test_upgrade ________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b5e14090>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b5e14090>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b593bb90>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b593bb90>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b593bb90>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b593bb90>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b5fd2310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | =========================== short test summary info ============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_downgrade_leaves_no_trace - python_on...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_model_definitions_match_ddl - python_...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_single_head_revision - python_on_whal...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_up_down_consistency - python_on_whale...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_upgrade - python_on_whales.exceptions...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================== 5 errors in 3.65s ===============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stderr call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/create?fromImage=postgres&tag=9.6.10-alpine\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ____________________ test_downgrade_leaves_no_trace_failure ____________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_downgrade_leaves_no_trace_failure0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def test_downgrade_leaves_no_trace_failure(pytester):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Assert the all-models-register test is collected when included through automatic test insertion.\"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         result = run_pytest(pytester, success=False, passed=0, failed=1)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         assert_failed_test_has_content(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             result,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             test=\"test_downgrade_leaves_no_trace\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           content=\"difference between the pre-'bbbbbbbbbbbb'-upgrade `MetaData`\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:191: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | result = <_pytest.pytester.HookRecorder object at 0x7f15b54b1890>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def assert_failed_test_has_content(result, *, test: str, content: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         report = result.matchreport(test)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if hasattr(report.longrepr, \"exce\"):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             assert content in str(report.longrepr.exce)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           assert content in str(report.longrepr)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           assert \"difference between the pre-'bbbbbbbbbbbb'-upgrade `MetaData`\" in \"self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', use...y/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E            +  where \"self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', use...y/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\" = str(ExceptionChainRepr(chain=[(ReprTraceback(reprentries=[ReprEntry(lines=['    def check_fn(self):', '        import sock...cktrace (it wasn't captured).\\nThe content of stderr can be found above the stacktrace (it wasn't captured).\"), None)]))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E            +    where ExceptionChainRepr(chain=[(ReprTraceback(reprentries=[ReprEntry(lines=['    def check_fn(self):', '        import sock...cktrace (it wasn't captured).\\nThe content of stderr can be found above the stacktrace (it wasn't captured).\"), None)]) = <TestReport 'conftest.py::pytest-alembic::test_downgrade_leaves_no_trace' when='setup' outcome='failed'>.longrepr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:42: AssertionError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stdout call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================= test session starts ==============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | platform linux -- Python 3.7.11, pytest-7.0.1, pluggy-1.0.0 -- /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/bin/python\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | cachedir: .pytest_cache\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | rootdir: /tmp/pytest-of-runneradmin/pytest-0/test_downgrade_leaves_no_trace_failure0, configfile: setup.cfg\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | plugins: mock-resources-2.6.12, asyncio-0.16.0, alembic-0.10.6\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | collecting ... collected 1 item\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_downgrade_leaves_no_trace Unable to find image 'postgres:9.6.10-alpine' locally\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ==================================== ERRORS ====================================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ______ ERROR at setup of [pytest-alembic] test_downgrade_leaves_no_trace _______\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b5375c10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b5375c10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b5076bd0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b5076bd0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b5076bd0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b5076bd0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b595f590>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | =========================== short test summary info ============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_downgrade_leaves_no_trace - python_on...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | =============================== 1 error in 1.24s ===============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stderr call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/create?fromImage=postgres&tag=9.6.10-alpine\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _______________________ test_minimum_downgrade_revision ________________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_minimum_downgrade_revision0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def test_minimum_downgrade_revision(pytester):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Assert the minimum_downgrade_revision config option is abided.\"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       run_pytest(pytester, passed=5)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:197: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_minimum_downgrade_revision0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run_pytest(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester, *, success=True, passed=4, skipped=0, failed=0, test_alembic=True, args=None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if not args:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args = [\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--test-alembic\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--alembic-tests-path\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"conftest.py\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-vv\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-s\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             ]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if not test_alembic:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args = [\"-vv\", \"conftest.py\"]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester.copy_example()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         result = pytester.inline_run(*args)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         expected_return = (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             (pytest.ExitCode.OK if passed or skipped or failed else pytest.ExitCode.NO_TESTS_COLLECTED)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if success\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             else pytest.ExitCode.TESTS_FAILED\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       assert result.ret == expected_return\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E       assert <ExitCode.TESTS_FAILED: 1> == <ExitCode.OK: 0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         +<ExitCode.TESTS_FAILED: 1>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         -<ExitCode.OK: 0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:26: AssertionError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stdout call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================= test session starts ==============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | platform linux -- Python 3.7.11, pytest-7.0.1, pluggy-1.0.0 -- /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/bin/python\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | cachedir: .pytest_cache\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | rootdir: /tmp/pytest-of-runneradmin/pytest-0/test_minimum_downgrade_revision0, configfile: setup.cfg\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | plugins: mock-resources-2.6.12, asyncio-0.16.0, alembic-0.10.6\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | collecting ... collected 5 items\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_downgrade_leaves_no_trace Unable to find image 'postgres:9.6.10-alpine' locally\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_model_definitions_match_ddl ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_single_head_revision ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_up_down_consistency ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_upgrade ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ==================================== ERRORS ====================================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ______ ERROR at setup of [pytest-alembic] test_downgrade_leaves_no_trace _______\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b5076b10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b5076b10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4a55310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4a55310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4a55310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4a55310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b6369590>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _____ ERROR at setup of [pytest-alembic] test_model_definitions_match_ddl ______\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b5076b10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b5076b10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4a55310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4a55310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4a55310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4a55310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b6369590>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________ ERROR at setup of [pytest-alembic] test_single_head_revision _________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b5076b10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b5076b10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4a55310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4a55310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4a55310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4a55310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b6369590>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________ ERROR at setup of [pytest-alembic] test_up_down_consistency __________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b5076b10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b5076b10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4a55310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4a55310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4a55310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4a55310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b6369590>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _______________ ERROR at setup of [pytest-alembic] test_upgrade ________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b5076b10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b5076b10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4a55310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4a55310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4a55310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4a55310>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b6369590>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | =========================== short test summary info ============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_downgrade_leaves_no_trace - python_on...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_model_definitions_match_ddl - python_...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_single_head_revision - python_on_whal...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_up_down_consistency - python_on_whale...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_upgrade - python_on_whales.exceptions...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================== 5 errors in 3.57s ===============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stderr call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/create?fromImage=postgres&tag=9.6.10-alpine\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _____________________ test_unimplemented_downgrade_warning _____________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_unimplemented_downgrade_warning0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def test_unimplemented_downgrade_warning(pytester):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Assert `NotImplementedError` raised during downgrade passes but emits a warning.\"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       result = run_pytest(pytester, passed=5)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:202: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_unimplemented_downgrade_warning0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run_pytest(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester, *, success=True, passed=4, skipped=0, failed=0, test_alembic=True, args=None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if not args:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args = [\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--test-alembic\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--alembic-tests-path\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"conftest.py\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-vv\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-s\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             ]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if not test_alembic:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args = [\"-vv\", \"conftest.py\"]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester.copy_example()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         result = pytester.inline_run(*args)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         expected_return = (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             (pytest.ExitCode.OK if passed or skipped or failed else pytest.ExitCode.NO_TESTS_COLLECTED)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if success\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             else pytest.ExitCode.TESTS_FAILED\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       assert result.ret == expected_return\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E       assert <ExitCode.TESTS_FAILED: 1> == <ExitCode.OK: 0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         +<ExitCode.TESTS_FAILED: 1>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         -<ExitCode.OK: 0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:26: AssertionError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stdout call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================= test session starts ==============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | platform linux -- Python 3.7.11, pytest-7.0.1, pluggy-1.0.0 -- /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/bin/python\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | cachedir: .pytest_cache\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | rootdir: /tmp/pytest-of-runneradmin/pytest-0/test_unimplemented_downgrade_warning0, configfile: setup.cfg\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | plugins: mock-resources-2.6.12, asyncio-0.16.0, alembic-0.10.6\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | collecting ... collected 5 items\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_downgrade_leaves_no_trace Unable to find image 'postgres:9.6.10-alpine' locally\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_model_definitions_match_ddl ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_single_head_revision ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_up_down_consistency ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_upgrade ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ==================================== ERRORS ====================================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ______ ERROR at setup of [pytest-alembic] test_downgrade_leaves_no_trace _______\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b4466bd0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b4466bd0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4466d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4466d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4466d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4466d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b4a59710>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _____ ERROR at setup of [pytest-alembic] test_model_definitions_match_ddl ______\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b4466bd0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b4466bd0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4466d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4466d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4466d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4466d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b4a59710>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________ ERROR at setup of [pytest-alembic] test_single_head_revision _________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b4466bd0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b4466bd0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4466d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4466d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4466d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4466d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b4a59710>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________ ERROR at setup of [pytest-alembic] test_up_down_consistency __________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b4466bd0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b4466bd0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4466d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4466d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4466d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4466d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b4a59710>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _______________ ERROR at setup of [pytest-alembic] test_upgrade ________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b4466bd0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b4466bd0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4466d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4466d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4466d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b4466d50>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b4a59710>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | =========================== short test summary info ============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_downgrade_leaves_no_trace - python_on...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_model_definitions_match_ddl - python_...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_single_head_revision - python_on_whal...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_up_down_consistency - python_on_whale...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_upgrade - python_on_whales.exceptions...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================== 5 errors in 3.75s ===============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stderr call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/create?fromImage=postgres&tag=9.6.10-alpine\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ____________________________ test_failing_downgrade ____________________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_failing_downgrade0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def test_failing_downgrade(pytester):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Assert failing downgrade, fails test.\"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       result = run_pytest(pytester, passed=3, failed=2, success=False)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:217: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_failing_downgrade0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run_pytest(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester, *, success=True, passed=4, skipped=0, failed=0, test_alembic=True, args=None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if not args:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args = [\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--test-alembic\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--alembic-tests-path\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"conftest.py\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-vv\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-s\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             ]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if not test_alembic:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args = [\"-vv\", \"conftest.py\"]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester.copy_example()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         result = pytester.inline_run(*args)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         expected_return = (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             (pytest.ExitCode.OK if passed or skipped or failed else pytest.ExitCode.NO_TESTS_COLLECTED)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if success\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             else pytest.ExitCode.TESTS_FAILED\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         assert result.ret == expected_return\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       result.assertoutcome(passed=passed, skipped=skipped, failed=failed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E       AssertionError: ([], [], [<TestReport 'conftest.py::pytest-alembic::test_downgrade_leaves_no_trace' when='setup' outcome='failed'>, <T...hen='setup' outcome='failed'>, <TestReport 'conftest.py::pytest-alembic::test_upgrade' when='setup' outcome='failed'>])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E       assert {'failed': 5, 'passed': 0, 'skipped': 0} == {'failed': 2, 'passed': 3, 'skipped': 0}\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         Common items:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         {'skipped': 0}\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         Differing items:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         {'passed': 0} != {'passed': 3}\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         {'failed': 5} != {'failed': 2}\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         Full diff:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         - {'failed': 2, 'passed': 3, 'skipped': 0}\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         ?            ^            ^\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         + {'failed': 5, 'passed': 0, 'skipped': 0}\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         ?            ^            ^\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:28: AssertionError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stdout call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================= test session starts ==============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | platform linux -- Python 3.7.11, pytest-7.0.1, pluggy-1.0.0 -- /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/bin/python\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | cachedir: .pytest_cache\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | rootdir: /tmp/pytest-of-runneradmin/pytest-0/test_failing_downgrade0, configfile: setup.cfg\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | plugins: mock-resources-2.6.12, asyncio-0.16.0, alembic-0.10.6\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | collecting ... collected 5 items\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_downgrade_leaves_no_trace Unable to find image 'postgres:9.6.10-alpine' locally\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_model_definitions_match_ddl ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_single_head_revision ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_up_down_consistency ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_upgrade ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ==================================== ERRORS ====================================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ______ ERROR at setup of [pytest-alembic] test_downgrade_leaves_no_trace _______\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b40ec390>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b40ec390>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3e143d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3e143d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3e143d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3e143d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b432c9d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _____ ERROR at setup of [pytest-alembic] test_model_definitions_match_ddl ______\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b40ec390>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b40ec390>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3e143d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3e143d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3e143d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3e143d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b432c9d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________ ERROR at setup of [pytest-alembic] test_single_head_revision _________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b40ec390>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b40ec390>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3e143d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3e143d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3e143d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3e143d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b432c9d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________ ERROR at setup of [pytest-alembic] test_up_down_consistency __________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b40ec390>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b40ec390>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3e143d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3e143d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3e143d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3e143d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b432c9d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _______________ ERROR at setup of [pytest-alembic] test_upgrade ________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b40ec390>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b40ec390>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3e143d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3e143d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3e143d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3e143d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b432c9d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | =========================== short test summary info ============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_downgrade_leaves_no_trace - python_on...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_model_definitions_match_ddl - python_...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_single_head_revision - python_on_whal...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_up_down_consistency - python_on_whale...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_upgrade - python_on_whales.exceptions...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================== 5 errors in 3.87s ===============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stderr call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/create?fromImage=postgres&tag=9.6.10-alpine\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ____________________________ test_async_sqlalchemy _____________________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_async_sqlalchemy0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def test_async_sqlalchemy(pytester):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Assert pytest-alembic works with async manually adapted sqlalchemy engine.\"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       run_pytest(pytester, passed=4)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:232: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_async_sqlalchemy0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run_pytest(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester, *, success=True, passed=4, skipped=0, failed=0, test_alembic=True, args=None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if not args:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args = [\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--test-alembic\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--alembic-tests-path\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"conftest.py\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-vv\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-s\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             ]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if not test_alembic:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args = [\"-vv\", \"conftest.py\"]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester.copy_example()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         result = pytester.inline_run(*args)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         expected_return = (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             (pytest.ExitCode.OK if passed or skipped or failed else pytest.ExitCode.NO_TESTS_COLLECTED)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if success\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             else pytest.ExitCode.TESTS_FAILED\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       assert result.ret == expected_return\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E       assert <ExitCode.TESTS_FAILED: 1> == <ExitCode.OK: 0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         +<ExitCode.TESTS_FAILED: 1>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         -<ExitCode.OK: 0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:26: AssertionError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stdout call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================= test session starts ==============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | platform linux -- Python 3.7.11, pytest-7.0.1, pluggy-1.0.0 -- /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/bin/python\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | cachedir: .pytest_cache\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | rootdir: /tmp/pytest-of-runneradmin/pytest-0/test_async_sqlalchemy0, configfile: setup.cfg\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | plugins: mock-resources-2.6.12, asyncio-0.16.0, alembic-0.10.6\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | collecting ... collected 4 items\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_model_definitions_match_ddl Unable to find image 'postgres:9.6.10-alpine' locally\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_single_head_revision ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_up_down_consistency ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_upgrade ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ==================================== ERRORS ====================================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _____ ERROR at setup of [pytest-alembic] test_model_definitions_match_ddl ______\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b3dad850>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b3dad850>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3777110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3777110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3777110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3777110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b3d2b5d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________ ERROR at setup of [pytest-alembic] test_single_head_revision _________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b3dad850>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b3dad850>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3777110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3777110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3777110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3777110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b3d2b5d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________ ERROR at setup of [pytest-alembic] test_up_down_consistency __________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b3dad850>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b3dad850>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3777110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3777110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3777110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3777110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b3d2b5d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _______________ ERROR at setup of [pytest-alembic] test_upgrade ________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b3dad850>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b3dad850>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3777110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3777110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3777110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b3777110>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b3d2b5d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | =============================== warnings summary ===============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ../../../../home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/_pytest/config/__init__.py:1249\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/_pytest/config/__init__.py:1249: PytestConfigWarning: Unknown config option: asyncio_mode\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |   \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     self._warn_or_fail_if_strict(f\"Unknown config option: {key}\\n\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | =========================== short test summary info ============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_model_definitions_match_ddl - python_...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_single_head_revision - python_on_whal...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_up_down_consistency - python_on_whale...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_upgrade - python_on_whales.exceptions...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ========================= 1 warning, 4 errors in 2.99s =========================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stderr call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/create?fromImage=postgres&tag=9.6.10-alpine\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________________________ test_async_sqlalchemy_native _________________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_async_sqlalchemy_native0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def test_async_sqlalchemy_native(pytester):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Assert pytest-alembic works with native async sqlalchemy engine.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         Additionally includes the experimental tests which perform in-test data\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         insertion, to ensure the whole plugin API works with asyncio.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       run_pytest(pytester, passed=6)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_async_sqlalchemy_native0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run_pytest(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester, *, success=True, passed=4, skipped=0, failed=0, test_alembic=True, args=None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if not args:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args = [\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--test-alembic\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--alembic-tests-path\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"conftest.py\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-vv\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-s\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             ]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if not test_alembic:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args = [\"-vv\", \"conftest.py\"]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester.copy_example()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         result = pytester.inline_run(*args)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         expected_return = (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             (pytest.ExitCode.OK if passed or skipped or failed else pytest.ExitCode.NO_TESTS_COLLECTED)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if success\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             else pytest.ExitCode.TESTS_FAILED\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       assert result.ret == expected_return\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E       assert <ExitCode.TESTS_FAILED: 1> == <ExitCode.OK: 0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         +<ExitCode.TESTS_FAILED: 1>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         -<ExitCode.OK: 0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:26: AssertionError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stdout call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================= test session starts ==============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | platform linux -- Python 3.7.11, pytest-7.0.1, pluggy-1.0.0 -- /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/bin/python\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | cachedir: .pytest_cache\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | rootdir: /tmp/pytest-of-runneradmin/pytest-0/test_async_sqlalchemy_native0, configfile: setup.cfg\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | plugins: mock-resources-2.6.12, asyncio-0.16.0, alembic-0.10.6\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | collecting ... collected 6 items\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_all_models_register_on_metadata Unable to find image 'postgres:9.6.10-alpine' locally\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_downgrade_leaves_no_trace ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_model_definitions_match_ddl ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_single_head_revision ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_up_down_consistency ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_upgrade ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ==================================== ERRORS ====================================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ___ ERROR at setup of [pytest-alembic] test_all_models_register_on_metadata ____\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b3461ed0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b3461ed0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b34d3bd0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ______ ERROR at setup of [pytest-alembic] test_downgrade_leaves_no_trace _______\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b3461ed0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b3461ed0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b34d3bd0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _____ ERROR at setup of [pytest-alembic] test_model_definitions_match_ddl ______\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b3461ed0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b3461ed0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b34d3bd0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________ ERROR at setup of [pytest-alembic] test_single_head_revision _________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b3461ed0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b3461ed0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b34d3bd0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________ ERROR at setup of [pytest-alembic] test_up_down_consistency __________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b3461ed0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b3461ed0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b34d3bd0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _______________ ERROR at setup of [pytest-alembic] test_upgrade ________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b3461ed0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b3461ed0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b31f5790>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b34d3bd0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | =========================== short test summary info ============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_all_models_register_on_metadata - pyt...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_downgrade_leaves_no_trace - python_on...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_model_definitions_match_ddl - python_...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_single_head_revision - python_on_whal...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_up_down_consistency - python_on_whale...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_upgrade - python_on_whales.exceptions...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================== 6 errors in 4.46s ===============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stderr call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/create?fromImage=postgres&tag=9.6.10-alpine\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________________ test_experimental_all_models_register_async __________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_experimental_all_models_register_async0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def test_experimental_all_models_register_async(pytester):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Assert all_models_register_on_metadata runs with async_ param.\"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       run_pytest(pytester, passed=1, test_alembic=False)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:246: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_experimental_all_models_register_async0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run_pytest(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester, *, success=True, passed=4, skipped=0, failed=0, test_alembic=True, args=None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if not args:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args = [\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--test-alembic\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--alembic-tests-path\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"conftest.py\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-vv\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-s\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             ]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if not test_alembic:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args = [\"-vv\", \"conftest.py\"]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester.copy_example()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         result = pytester.inline_run(*args)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         expected_return = (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             (pytest.ExitCode.OK if passed or skipped or failed else pytest.ExitCode.NO_TESTS_COLLECTED)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if success\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             else pytest.ExitCode.TESTS_FAILED\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       assert result.ret == expected_return\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E       assert <ExitCode.TESTS_FAILED: 1> == <ExitCode.OK: 0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         +<ExitCode.TESTS_FAILED: 1>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         -<ExitCode.OK: 0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:26: AssertionError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stdout call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================= test session starts ==============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | platform linux -- Python 3.7.11, pytest-7.0.1, pluggy-1.0.0 -- /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/bin/python\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | cachedir: .pytest_cache\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | rootdir: /tmp/pytest-of-runneradmin/pytest-0/test_experimental_all_models_register_async0\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | plugins: mock-resources-2.6.12, asyncio-0.16.0, alembic-0.10.6\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | collecting ... collected 1 item\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::test_all_models_register_on_metadata ERROR                  [100%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ==================================== ERRORS ====================================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ____________ ERROR at setup of test_all_models_register_on_metadata ____________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b319fe10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b319fe10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b2babed0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b2babed0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b2babed0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b2babed0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b2f53150>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ---------------------------- Captured stdout setup -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Unable to find image 'postgres:9.6.10-alpine' locally\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ---------------------------- Captured stderr setup -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/create?fromImage=postgres&tag=9.6.10-alpine\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | =========================== short test summary info ============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::test_all_models_register_on_metadata - python_on_whales.ex...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | =============================== 1 error in 1.32s ===============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ________________________ test_pytest_alembic_tests_path ________________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_pytest_alembic_tests_path0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def test_pytest_alembic_tests_path(pytester):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Assert the pytest_alembic_tests_path can be overridden.\"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       run_pytest(pytester, passed=4, args=[\"-vv\", \"--test-alembic\", \"tests_\"])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:272: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_pytest_alembic_tests_path0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run_pytest(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester, *, success=True, passed=4, skipped=0, failed=0, test_alembic=True, args=None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if not args:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args = [\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--test-alembic\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--alembic-tests-path\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"conftest.py\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-vv\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-s\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             ]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if not test_alembic:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args = [\"-vv\", \"conftest.py\"]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester.copy_example()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         result = pytester.inline_run(*args)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         expected_return = (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             (pytest.ExitCode.OK if passed or skipped or failed else pytest.ExitCode.NO_TESTS_COLLECTED)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if success\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             else pytest.ExitCode.TESTS_FAILED\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       assert result.ret == expected_return\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E       assert <ExitCode.TESTS_FAILED: 1> == <ExitCode.OK: 0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         +<ExitCode.TESTS_FAILED: 1>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         -<ExitCode.OK: 0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:26: AssertionError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stdout call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================= test session starts ==============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | platform linux -- Python 3.7.11, pytest-7.0.1, pluggy-1.0.0 -- /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/bin/python\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | cachedir: .pytest_cache\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | rootdir: /tmp/pytest-of-runneradmin/pytest-0/test_pytest_alembic_tests_path0, configfile: pytest.ini\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | plugins: mock-resources-2.6.12, asyncio-0.16.0, alembic-0.10.6\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | collecting ... collected 4 items\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests_/test/conftest.py::pytest-alembic::test_model_definitions_match_ddl ERROR [ 25%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests_/test/conftest.py::pytest-alembic::test_single_head_revision ERROR [ 50%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests_/test/conftest.py::pytest-alembic::test_up_down_consistency ERROR  [ 75%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | tests_/test/conftest.py::pytest-alembic::test_upgrade ERROR              [100%]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ==================================== ERRORS ====================================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _____ ERROR at setup of [pytest-alembic] test_model_definitions_match_ddl ______\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b226be10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b226be10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b2272050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b2272050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b2272050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b2272050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b2755990>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ---------------------------- Captured stdout setup -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Unable to find image 'postgres:9.6.10-alpine' locally\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ---------------------------- Captured stderr setup -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/create?fromImage=postgres&tag=9.6.10-alpine\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________ ERROR at setup of [pytest-alembic] test_single_head_revision _________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b226be10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b226be10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b2272050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b2272050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b2272050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b2272050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b2755990>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________ ERROR at setup of [pytest-alembic] test_up_down_consistency __________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b226be10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b226be10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b2272050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b2272050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b2272050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b2272050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b2755990>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _______________ ERROR at setup of [pytest-alembic] test_upgrade ________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b226be10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b226be10>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b2272050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b2272050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b2272050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b2272050>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b2755990>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | =========================== short test summary info ============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR tests_/test/conftest.py::pytest-alembic::test_model_definitions_match_ddl\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR tests_/test/conftest.py::pytest-alembic::test_single_head_revision - py...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR tests_/test/conftest.py::pytest-alembic::test_up_down_consistency - pyt...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR tests_/test/conftest.py::pytest-alembic::test_upgrade - python_on_whale...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================== 4 errors in 3.09s ===============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | __________________________ test_version_table_schema ___________________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_version_table_schema0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def test_version_table_schema(pytester):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Assert the setting the version_table_schema option functions correctly.\"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       run_pytest(pytester, passed=5)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:277: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytester = <Pytester PosixPath('/tmp/pytest-of-runneradmin/pytest-0/test_version_table_schema0')>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run_pytest(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester, *, success=True, passed=4, skipped=0, failed=0, test_alembic=True, args=None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if not args:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args = [\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--test-alembic\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"--alembic-tests-path\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"conftest.py\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-vv\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 \"-s\",\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             ]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if not test_alembic:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args = [\"-vv\", \"conftest.py\"]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         pytester.copy_example()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         result = pytester.inline_run(*args)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         expected_return = (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             (pytest.ExitCode.OK if passed or skipped or failed else pytest.ExitCode.NO_TESTS_COLLECTED)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if success\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             else pytest.ExitCode.TESTS_FAILED\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       assert result.ret == expected_return\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E       assert <ExitCode.TESTS_FAILED: 1> == <ExitCode.OK: 0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         +<ExitCode.TESTS_FAILED: 1>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E         -<ExitCode.OK: 0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/tests/test_runner.py:26: AssertionError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stdout call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================= test session starts ==============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | platform linux -- Python 3.7.11, pytest-7.0.1, pluggy-1.0.0 -- /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/bin/python\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | cachedir: .pytest_cache\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | rootdir: /tmp/pytest-of-runneradmin/pytest-0/test_version_table_schema0, configfile: setup.cfg\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | plugins: mock-resources-2.6.12, asyncio-0.16.0, alembic-0.10.6\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | collecting ... collected 5 items\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_all_models_register_on_metadata Unable to find image 'postgres:9.6.10-alpine' locally\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_downgrade_leaves_no_trace ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_model_definitions_match_ddl ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_up_down_consistency ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | conftest.py::pytest-alembic::test_upgrade ERROR\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ==================================== ERRORS ====================================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ___ ERROR at setup of [pytest-alembic] test_all_models_register_on_metadata ____\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b2a479d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b2a479d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b1f45650>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b1f45650>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b1f45650>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b1f45650>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b288e2d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ______ ERROR at setup of [pytest-alembic] test_downgrade_leaves_no_trace _______\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b2a479d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b2a479d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b1f45650>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b1f45650>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b1f45650>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b1f45650>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b288e2d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _____ ERROR at setup of [pytest-alembic] test_model_definitions_match_ddl ______\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b2a479d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b2a479d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b1f45650>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b1f45650>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b1f45650>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b1f45650>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b288e2d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _________ ERROR at setup of [pytest-alembic] test_up_down_consistency __________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b2a479d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b2a479d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b1f45650>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b1f45650>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b1f45650>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b1f45650>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b288e2d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _______________ ERROR at setup of [pytest-alembic] test_upgrade ________________\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           ConnectionRefusedError: [Errno 111] Connection refused\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:83: ConnectionRefusedError\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def wait_for_container(config, *, retries=DEFAULT_RETRIES, interval=DEFAULT_INTERVAL):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Wait for evidence that the container is up and healthy.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         The caller must provide a `check_fn` which should `raise ContainerCheckFailed` if\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         it finds that the container is not yet up.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         from python_on_whales import docker\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if config.port is None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             config.set(\"port\", unused_tcp_port())\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         check_fn = config.check_fn\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_args = (config.image,)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         run_kwargs = dict(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             publish=[(dest, source) for source, dest in config.ports().items()],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             envs=config.environment(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             name=container_name(config.name, config.port),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.exceptions import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except ImportError:  # pragma: no cover\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             from python_on_whales.utils import DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # Perform a single attempt, for the happy-path where the container already exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           retry(check_fn, retries=1, interval=interval, on_exc=ContainerCheckFailed)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:145: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | func = <bound method PostgresConfig.check_fn of PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def retry(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         func: Callable[..., T],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         *,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args=(),\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         kwargs={},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         retries=1,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         interval=DEFAULT_INTERVAL,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         on_exc=Exception,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> T:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         while retries:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             retries -= 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               result = func(*args, **kwargs)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:66: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def check_fn(self):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         import socket\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             s.connect((self.host, int(self.port)))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         except (ConnectionRefusedError, socket.error):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise ContainerCheckFailed(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               f\"Unable to connect to a presumed Postgres test container via given config: {self}\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           pytest_mock_resources.container.base.ContainerCheckFailed: Unable to connect to a presumed Postgres test container via given config: PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/postgres.py:86: ContainerCheckFailed\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b2a479d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | image = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _pull_if_necessary(self, image: ValidImage) -> Image:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(image, Image):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             # A docker image object must exist in the daemon to be defined.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return image\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         try:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return self.inspect(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:683: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <python_on_whales.components.image.cli_wrapper.ImageCLI object at 0x7f15b2a479d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | x = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def inspect(self, x: Union[str, List[str]]) -> Union[Image, List[Image]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"Creates a `python_on_whales.Image` object.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Returns\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.Image`, or `List[python_on_whales.Image]` if the input\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             was a list of strings.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         # Raises\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             `python_on_whales.exceptions.NoSuchImage` if one of the images does not exists.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         \"\"\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if isinstance(x, list):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             return [Image(self.client_config, identifier) for identifier in x]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >           return Image(self.client_config, x)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:337: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b1f45650>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine', is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self, client_config: ClientConfig, reference: str, is_immutable_id=False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       super().__init__(client_config, \"id\", reference, is_immutable_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:39: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b1f45650>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | client_config = ClientConfig(config=None, context=None, debug=None, host=None, log_level=None, tls=None, tlscacert=None, tlscert=None,...ectory=None, compose_compatibility=None, client_call=['docker'], _client_call_with_path=[PosixPath('/usr/bin/docker')])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | id_in_inspect = 'id', reference_or_id = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | is_immutable_id = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def __init__(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         client_config: ClientConfig,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         id_in_inspect: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         reference_or_id: str,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         is_immutable_id: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         super().__init__(client_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._last_refreshed_time = datetime.min\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._inspect_result = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._immutable_id = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._reference = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         self._id_in_inspect = id_in_inspect\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if is_immutable_id:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._immutable_id = reference_or_id\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             self._set_inspect_result(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               self._fetch_and_parse_inspect_result(reference_or_id)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:186: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b1f45650>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_and_parse_inspect_result(self, reference: str):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       json_str = self._fetch_inspect_result_json(reference)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/client_config.py:241: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | self = <[DockerException('The docker command executed was `/usr/bin/docker image inspect None`.\\nIt returned with code 1\\nThe...\": dial unix /var/run/docker.sock: connect: permission denied\\n\\'\\n') raised in repr()] Image object at 0x7f15b1f45650>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | reference = 'postgres:9.6.10-alpine'\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def _fetch_inspect_result_json(self, reference):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       return run(self.docker_cmd + [\"image\", \"inspect\", reference])\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:48: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'inspect', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = True, capture_stderr = True, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image inspect postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout is '[]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr is 'Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/postgres:9.6.10-alpine/json\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           '\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | During handling of the above exception, another exception occurred:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pytestconfig = <_pytest.config.Config object at 0x7f15b288e2d0>\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | pmr_postgres_config = PostgresConfig(password='password', root_database='dev', image='postgres:9.6.10-alpine', host='localhost', username='user', drivername='postgresql+psycopg2', ci_port=5432, port=5432)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     @pytest.fixture(scope=\"session\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def pmr_postgres_container(pytestconfig, pmr_postgres_config: PostgresConfig):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >       yield from get_container(pytestconfig, pmr_postgres_config)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/fixture/postgresql.py:40: \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:109: in get_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     interval=interval,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/pytest_mock_resources/container/base.py:149: in wait_for_container\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     container = docker.run(*run_args, **run_kwargs, detach=True, remove=True)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/container/cli_wrapper.py:1472: in run\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     image_cli._pull_if_necessary(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:686: in _pull_if_necessary\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self.pull(image)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:497: in pull\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     return self._pull_single_tag(x, quiet=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/components/image/cli_wrapper.py:515: in _pull_single_tag\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     run(full_cmd, capture_stdout=quiet, capture_stderr=quiet)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | args = ['/usr/bin/docker', 'image', 'pull', 'postgres:9.6.10-alpine']\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | capture_stdout = False, capture_stderr = False, input = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | return_stderr = False, env = {}, tty = False\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     def run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args: List[Any],\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stdout: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         capture_stderr: bool = True,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         input: Optional[bytes] = None,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         return_stderr: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         env: Dict[str, str] = {},\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         tty: bool = False,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     ) -> Union[str, Tuple[str, str]]:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         args = [str(x) for x in args]\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env = dict(os.environ)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         subprocess_env.update(env)\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if args[1] == \"buildx\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             subprocess_env[\"DOCKER_CLI_EXPERIMENTAL\"] = \"enabled\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = sys.stdout\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stdout:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stdout_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if tty:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = sys.stderr\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         elif capture_stderr:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = subprocess.PIPE\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         else:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             stderr_dest = None\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if os.environ.get(\"PYTHON_ON_WHALES_DEBUG\", \"0\") == \"1\":\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"command: \" + \" \".join(args))\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(f\"Env: {subprocess_env}\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             print(\"------------------------------\")\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         completed_process = subprocess.run(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             args, input=input, stdout=stdout_dest, stderr=stderr_dest, env=subprocess_env\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |         if completed_process.returncode != 0:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             if completed_process.stderr is not None:\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such image\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchImage(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such service\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchService(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such container\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchContainer(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if (\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     \"this node is not a swarm manager\"\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     in completed_process.stderr.decode().lower()\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 ):\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NotASwarmManager(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 if \"no such volume\" in completed_process.stderr.decode().lower():\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     raise NoSuchVolume(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                         completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                     )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |     \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             raise DockerException(\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 args,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.returncode,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |                 completed_process.stdout,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | >               completed_process.stderr,\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   |             )\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           python_on_whales.exceptions.DockerException: The docker command executed was `/usr/bin/docker image pull postgres:9.6.10-alpine`.\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           It returned with code 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stdout can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | E           The content of stderr can be found above the stacktrace (it wasn't captured).\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | \n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pytest-alembic-aRzOFBrQ-py3.7/lib/python3.7/site-packages/python_on_whales/utils.py:181: DockerException\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | =========================== short test summary info ============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_all_models_register_on_metadata - pyt...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_downgrade_leaves_no_trace - python_on...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_model_definitions_match_ddl - python_...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_up_down_consistency - python_on_whale...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ERROR conftest.py::pytest-alembic::test_upgrade - python_on_whales.exceptions...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ============================== 5 errors in 4.07s ===============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | ----------------------------- Captured stderr call -----------------------------\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/create?fromImage=postgres&tag=9.6.10-alpine\": dial unix /var/run/docker.sock: connect: permission denied\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | =========================== short test summary info ============================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | FAILED tests/test_runner.py::test_complex_revision_upgrade_data - assert <Exi...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | FAILED tests/test_runner.py::test_schema_revision_data - assert <ExitCode.TES...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | FAILED tests/test_runner.py::test_branched_history - assert <ExitCode.TESTS_F...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | FAILED tests/test_runner.py::test_consistency_doesnt_roundtrip - AssertionErr...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | FAILED tests/test_runner.py::test_downgrade_leaves_no_trace_success - assert ...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | FAILED tests/test_runner.py::test_downgrade_leaves_no_trace_failure - assert ...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | FAILED tests/test_runner.py::test_minimum_downgrade_revision - assert <ExitCo...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | FAILED tests/test_runner.py::test_unimplemented_downgrade_warning - assert <E...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | FAILED tests/test_runner.py::test_failing_downgrade - AssertionError: ([], []...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | FAILED tests/test_runner.py::test_async_sqlalchemy - assert <ExitCode.TESTS_F...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | FAILED tests/test_runner.py::test_async_sqlalchemy_native - assert <ExitCode....\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | FAILED tests/test_runner.py::test_experimental_all_models_register_async - as...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | FAILED tests/test_runner.py::test_pytest_alembic_tests_path - assert <ExitCod...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | FAILED tests/test_runner.py::test_version_table_schema - assert <ExitCode.TES...\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | =================== 14 failed, 76 passed in 64.92s (0:01:04) ===================\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   | make: *** [Makefile:11: test] Error 1\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u274c  Failure - Main Run tests\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test] exitcode '2': failure\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test] \u2b50 Run Post Install poetry\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/b01fd94a-2c1f-4d0b-9557-20b62f3b4ac2/act/abatilo-actions-poetry@v2.0.0/ dst=/var/run/act/actions/abatilo-actions-poetry@v2.0.0/\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/abatilo-actions-poetry@v2.0.0/] user=0 workdir=\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test]   \u2705  Success - Post Install poetry\n[d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b/test] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'test' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/schireson-pytest-alembic/.github/workflows/build-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "d2ea1f1c-f989-4f16-8cb9-eaf9ecfad68b",
        "build_tool": "pytest",
        "elapsed_time": 386.8643205165863
    }
}