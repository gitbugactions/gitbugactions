{
    "repository": "lRomul/argus",
    "stars": 78,
    "language": "python",
    "size": 815,
    "clone_url": "https://github.com/lRomul/argus.git",
    "timestamp": "2023-06-28T13:01:51.325202Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_loss",
                "name": "test_get_pytorch_losses",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_loss",
                "name": "test_is_pytorch_loss",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_optimizer",
                "name": "test_get_pytorch_optimizers",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_optimizer",
                "name": "test_is_pytorch_optimizer",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_optimizer",
                "name": "test_is_multi_tensor_optimizer",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pipeline",
                "name": "test_pipeline",
                "time": 5.093,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_default",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_identity[42]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_identity[test]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_identity[True]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_deep_to[list_of_tensors0-destination_dtype0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_deep_to[list_of_tensors0-destination_dtype1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_deep_to[list_of_tensors1-destination_dtype0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_deep_to[list_of_tensors1-destination_dtype1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_deep_detach[list_of_tensors0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_deep_detach[list_of_tensors1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_deep_chunk[list_of_tensors0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_deep_chunk[list_of_tensors1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_device_to_str",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_check_pickleble[list_of_tensors0]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_check_pickleble[list_of_tensors1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_average_meter[one_dim_num_sequence0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_average_meter[one_dim_num_sequence1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_average_meter[one_dim_num_sequence2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_average_meter[one_dim_num_sequence3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_inheritors",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_callback.TestCallbacks",
                "name": "test_attach_callback[0]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_callback.TestCallbacks",
                "name": "test_attach_callback[1]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_callback.TestCallbacks",
                "name": "test_attach_callback[2]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_callback.TestCallbacks",
                "name": "test_attach_callback[3]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_callback.TestCallbacks",
                "name": "test_attach_callback[16]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_callback.TestCallbacks",
                "name": "test_attach_non_callable_handler",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_callback.TestCallbacks",
                "name": "test_attach_not_a_callback",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_callback.TestDecoratorCallbacks",
                "name": "test_on_event",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_callback.TestDecoratorCallbacks",
                "name": "test_on_decorators",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_checkpoints.TestCheckpoints",
                "name": "test_checkpoint[False]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_checkpoints.TestCheckpoints",
                "name": "test_checkpoint[True]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_checkpoints.TestCheckpoints",
                "name": "test_checkpoint_exceptions",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_checkpoints.TestCheckpoints",
                "name": "test_max_saves[None]",
                "time": 0.105,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_checkpoints.TestCheckpoints",
                "name": "test_max_saves[1]",
                "time": 0.126,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_checkpoints.TestCheckpoints",
                "name": "test_max_saves[3]",
                "time": 0.107,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_checkpoints.TestCheckpoints",
                "name": "test_max_saves[12]",
                "time": 0.116,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_checkpoints.TestCheckpoints",
                "name": "test_monitor_checkpoint[False]",
                "time": 0.115,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_checkpoints.TestCheckpoints",
                "name": "test_monitor_checkpoint[True]",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_early_stopping.TestEarlyStopping",
                "name": "test_increasing_decreasing_seq[1-auto]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_early_stopping.TestEarlyStopping",
                "name": "test_increasing_decreasing_seq[3-min]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_early_stopping.TestEarlyStopping",
                "name": "test_increasing_decreasing_seq[9-auto]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_early_stopping.TestEarlyStopping",
                "name": "test_metric_not_found",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_early_stopping.TestEarlyStopping",
                "name": "test_decreasing_with_spikes",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_logging",
                "name": "test_format_lr_to_str[0.001-5-0.001]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_logging",
                "name": "test_format_lr_to_str[3.9e-06-6-3.9e-06]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_logging",
                "name": "test_format_lr_to_str[0.99999-1-1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_logging",
                "name": "test_format_lr_to_str[lr3-2-[0.00023, 0.0024]]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_logging",
                "name": "test_train_default_logging",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_logging",
                "name": "test_val_default_logging",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_logging",
                "name": "test_logging_to_file",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_logging",
                "name": "test_logging_to_file_create_dir",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_logging",
                "name": "test_logging_to_csv[,]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_logging",
                "name": "test_logging_to_csv[|]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_logging",
                "name": "test_logging_to_csv[\\t]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_lr_schedulers.TestLrSchedulers",
                "name": "test_lr_scheduler",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_lr_schedulers.TestLrSchedulers",
                "name": "test_lr_scheduler_step_on_iteration",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_lr_schedulers.TestLrSchedulers",
                "name": "test_lambda_lr[True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_lr_schedulers.TestLrSchedulers",
                "name": "test_lambda_lr[False]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_lr_schedulers.TestLrSchedulers",
                "name": "test_step_lr",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_lr_schedulers.TestLrSchedulers",
                "name": "test_multi_step_lr[True]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_lr_schedulers.TestLrSchedulers",
                "name": "test_multi_step_lr[False]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_lr_schedulers.TestLrSchedulers",
                "name": "test_exponential_lr[True]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_lr_schedulers.TestLrSchedulers",
                "name": "test_exponential_lr[False]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_lr_schedulers.TestLrSchedulers",
                "name": "test_cosine_annealing_lr",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_lr_schedulers.TestLrSchedulers",
                "name": "test_multiplicative_lr[True]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_lr_schedulers.TestLrSchedulers",
                "name": "test_multiplicative_lr[False]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_lr_schedulers.TestLrSchedulers",
                "name": "test_one_cycle_lr",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_lr_schedulers.TestLrSchedulers",
                "name": "test_cosine_annealing_warm_restarts[True]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_lr_schedulers.TestLrSchedulers",
                "name": "test_cosine_annealing_warm_restarts[False]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_lr_schedulers.TestLrSchedulers",
                "name": "test_cyclic_lr[True]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_lr_schedulers.TestLrSchedulers",
                "name": "test_cyclic_lr[False]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.callbacks.test_lr_schedulers.TestLrSchedulers",
                "name": "test_reduce_lr_on_plateau",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.engine.test_engine",
                "name": "test_state_update",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.engine.test_engine",
                "name": "test_init_step_method",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.engine.test_engine.TestEngineMethods",
                "name": "test_add_event_handler",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.engine.test_engine.TestEngineMethods",
                "name": "test_raise_event[Events.START]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.engine.test_engine.TestEngineMethods",
                "name": "test_raise_event[Events.COMPLETE]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.engine.test_engine.TestEngineMethods",
                "name": "test_raise_event[Events.EPOCH_START]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.engine.test_engine.TestEngineMethods",
                "name": "test_raise_event[Events.EPOCH_COMPLETE]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.engine.test_engine.TestEngineMethods",
                "name": "test_raise_event[Events.ITERATION_START]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.engine.test_engine.TestEngineMethods",
                "name": "test_raise_event[Events.ITERATION_COMPLETE]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.engine.test_engine.TestEngineMethods",
                "name": "test_raise_event[Events.CATCH_EXCEPTION]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.engine.test_engine.TestEngineMethods",
                "name": "test_run",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.engine.test_engine.TestEngineMethods",
                "name": "test_phase_states",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.engine.test_engine.TestEngineMethods",
                "name": "test_custom_events",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.metrics.test_categorical_accuracy",
                "name": "test_categorical_accuracy[8-4-32]",
                "time": 0.104,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.metrics.test_categorical_accuracy",
                "name": "test_categorical_accuracy[16-2-15]",
                "time": 0.142,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.metrics.test_categorical_accuracy",
                "name": "test_categorical_accuracy[27-13-38]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.metrics.test_loss",
                "name": "test_loss_metric[one_dim_num_sequence0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.metrics.test_loss",
                "name": "test_loss_metric[one_dim_num_sequence1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.metrics.test_loss",
                "name": "test_loss_metric[one_dim_num_sequence2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.metrics.test_loss",
                "name": "test_loss_metric[one_dim_num_sequence3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.metrics.test_metric",
                "name": "test_init_better",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.metrics.test_metric.TestMetric",
                "name": "test_redefine_metric_warn",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.metrics.test_metric.TestMetric",
                "name": "test_custom_metric",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.metrics.test_metric.TestMetric",
                "name": "test_attach_none",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.metrics.test_metric.TestMetric",
                "name": "test_custom_callback_by_name",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.metrics.test_metric.TestMetric",
                "name": "test_just_for_coverage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestBuild",
                "name": "test_simple_build",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestBuild",
                "name": "test_default_and_string_build",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestBuild",
                "name": "test_default_from_params_build",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestBuild",
                "name": "test_dict_flexibility_build",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestBuild",
                "name": "test_factory_function_build",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestBuild",
                "name": "test_none_params_build",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestBuild",
                "name": "test_none_nn_module_build",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestBuild",
                "name": "test_redefine_build_warn",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_nn_module",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_optimizer[AdamW]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_optimizer[Adamax]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_optimizer[ASGD]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_optimizer[LBFGS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_optimizer[RAdam]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_optimizer[RMSprop]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_optimizer[Adadelta]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_optimizer[Adam]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_optimizer[Rprop]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_optimizer[NAdam]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_optimizer[Adagrad]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_optimizer[SGD]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_optimizer[SparseAdam]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_loss[GaussianNLLLoss]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_loss[NLLLoss]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_loss[SmoothL1Loss]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_loss[NLLLoss2d]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_loss[PoissonNLLLoss]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_loss[KLDivLoss]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_loss[MultiLabelMarginLoss]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_loss[L1Loss]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_loss[CrossEntropyLoss]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_loss[MultiLabelSoftMarginLoss]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_loss[MultiMarginLoss]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_loss[TripletMarginLoss]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_loss[BCELoss]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_loss[HuberLoss]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_loss[HingeEmbeddingLoss]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_loss[TripletMarginWithDistanceLoss]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_loss[MSELoss]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_loss[MarginRankingLoss]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_loss[BCEWithLogitsLoss]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_loss[CTCLoss]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_loss[CosineEmbeddingLoss]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_loss[SoftMarginLoss]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_prediction_transform",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestCastFunction",
                "name": "test_cast_device",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestBuildModelMethod",
                "name": "test_get_nn_module",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestBuildModelMethod",
                "name": "test_get_set_device",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestBuildModelMethod",
                "name": "test_check_attributes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestChooseAttributeFromDict",
                "name": "test_dict_choose",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_build.TestChooseAttributeFromDict",
                "name": "test_not_dict_choose",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_custom_build_methods",
                "name": "test_custom_build_methods",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_load.TestLoadModel",
                "name": "test_load_model[False]",
                "time": 0.111,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_load.TestLoadModel",
                "name": "test_load_model[True]",
                "time": 0.107,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_load.TestLoadModel",
                "name": "test_none_attributes[False]",
                "time": 0.115,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_load.TestLoadModel",
                "name": "test_none_attributes[True]",
                "time": 0.092,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_load.TestLoadModel",
                "name": "test_replace_nn_module_params[False]",
                "time": 0.141,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_load.TestLoadModel",
                "name": "test_replace_nn_module_params[True]",
                "time": 0.156,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_load.TestLoadModel",
                "name": "test_replace_optimizer_params[False]",
                "time": 0.149,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_load.TestLoadModel",
                "name": "test_replace_optimizer_params[True]",
                "time": 0.122,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_load.TestLoadModel",
                "name": "test_replace_loss_params[False]",
                "time": 0.115,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_load.TestLoadModel",
                "name": "test_replace_loss_params[True]",
                "time": 0.131,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_load.TestLoadModel",
                "name": "test_replace_prediction_transform_params[False]",
                "time": 0.124,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_load.TestLoadModel",
                "name": "test_replace_prediction_transform_params[True]",
                "time": 0.156,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_load.TestLoadModel",
                "name": "test_replace_kwargs_params[False]",
                "time": 0.156,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_load.TestLoadModel",
                "name": "test_replace_kwargs_params[True]",
                "time": 0.123,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_load.TestLoadModel",
                "name": "test_file_not_found_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_load.TestLoadModel",
                "name": "test_replace_model_name[False]",
                "time": 0.113,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_load.TestLoadModel",
                "name": "test_replace_model_name[True]",
                "time": 0.098,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_load.TestLoadModel",
                "name": "test_state_load_func[False]",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_load.TestLoadModel",
                "name": "test_state_load_func[True]",
                "time": 0.089,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_load.TestLoadModel",
                "name": "test_change_state_dict_func[False]",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_load.TestLoadModel",
                "name": "test_change_state_dict_func[True]",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModelMethod",
                "name": "test_train_step",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModelMethod",
                "name": "test_val_step",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModelMethod",
                "name": "test_predict",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModelMethod",
                "name": "test_train_val_modes",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModelMethod",
                "name": "test_fit_train_loader",
                "time": 0.131,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModelMethod",
                "name": "test_fit_train_val_loader",
                "time": 3.221,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModelMethod",
                "name": "test_save",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModelMethod",
                "name": "test_save_with_optimizer_state",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test] \ud83d\ude80  Start image=crawlergpt:latest\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/lRomul-argus] user=0 workdir=\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v1\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:3.8]\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test] \u2b50 Run Main actions/checkout@v2\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \u2705  Success - Main actions/checkout@v2\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test] \u2b50 Run Main Set up Python\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/b3d2ad8f-6309-432d-99ad-cc1a59df51d4/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udcac  ::debug::isExplicit: \n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udcac  ::debug::explicit? false\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udcac  ::debug::explicit? true\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udcac  ::debug::explicit? true\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udcac  ::debug::explicit? true\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udcac  ::debug::explicit? true\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udcac  ::debug::explicit? true\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udcac  ::debug::explicit? true\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udcac  ::debug::evaluating 6 versions\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udcac  ::debug::matched: 3.8.11\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Successfully setup CPython (3.8.11)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \u2705  Success - Main Set up Python\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \u2699  ::set-output:: python-version=3.8.11\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test] \u2b50 Run Main Install test dependencies\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages (21.2.4)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting pip\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Installing collected packages: pip\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Attempting uninstall: pip\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |     Found existing installation: pip 21.2.4\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |     Uninstalling pip-21.2.4:\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |       Successfully uninstalled pip-21.2.4\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Successfully installed pip-23.1.2\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting pytest==7.3.2 (from -r tests/requirements.txt (line 1))\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading pytest-7.3.2-py3-none-any.whl (320 kB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 320.9/320.9 kB 14.4 MB/s eta 0:00:00\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting pytest-cov==4.1.0 (from -r tests/requirements.txt (line 2))\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading pytest_cov-4.1.0-py3-none-any.whl (21 kB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting mypy==1.3.0 (from -r tests/requirements.txt (line 3))\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading mypy-1.3.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.2 MB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 12.2/12.2 MB 22.7 MB/s eta 0:00:00\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting flake8==6.0.0 (from -r tests/requirements.txt (line 4))\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading flake8-6.0.0-py2.py3-none-any.whl (57 kB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 57.8/57.8 kB 10.7 MB/s eta 0:00:00\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting iniconfig (from pytest==7.3.2->-r tests/requirements.txt (line 1))\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting packaging (from pytest==7.3.2->-r tests/requirements.txt (line 1))\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 961.2 kB/s eta 0:00:00\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting pluggy<2.0,>=0.12 (from pytest==7.3.2->-r tests/requirements.txt (line 1))\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting exceptiongroup>=1.0.0rc8 (from pytest==7.3.2->-r tests/requirements.txt (line 1))\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting tomli>=1.0.0 (from pytest==7.3.2->-r tests/requirements.txt (line 1))\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting coverage[toml]>=5.2.1 (from pytest-cov==4.1.0->-r tests/requirements.txt (line 2))\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading coverage-7.2.7-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (229 kB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 229.9/229.9 kB 9.4 MB/s eta 0:00:00\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting typing-extensions>=3.10 (from mypy==1.3.0->-r tests/requirements.txt (line 3))\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading typing_extensions-4.6.3-py3-none-any.whl (31 kB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting mypy-extensions>=1.0.0 (from mypy==1.3.0->-r tests/requirements.txt (line 3))\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting mccabe<0.8.0,>=0.7.0 (from flake8==6.0.0->-r tests/requirements.txt (line 4))\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading mccabe-0.7.0-py2.py3-none-any.whl (7.3 kB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting pycodestyle<2.11.0,>=2.10.0 (from flake8==6.0.0->-r tests/requirements.txt (line 4))\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading pycodestyle-2.10.0-py2.py3-none-any.whl (41 kB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 41.3/41.3 kB 5.1 MB/s eta 0:00:00\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting pyflakes<3.1.0,>=3.0.0 (from flake8==6.0.0->-r tests/requirements.txt (line 4))\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading pyflakes-3.0.1-py2.py3-none-any.whl (62 kB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.8/62.8 kB 8.0 MB/s eta 0:00:00\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Installing collected packages: typing-extensions, tomli, pyflakes, pycodestyle, pluggy, packaging, mypy-extensions, mccabe, iniconfig, exceptiongroup, coverage, pytest, mypy, flake8, pytest-cov\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Successfully installed coverage-7.2.7 exceptiongroup-1.1.1 flake8-6.0.0 iniconfig-2.0.0 mccabe-0.7.0 mypy-1.3.0 mypy-extensions-1.0.0 packaging-23.1 pluggy-1.2.0 pycodestyle-2.10.0 pyflakes-3.0.1 pytest-7.3.2 pytest-cov-4.1.0 tomli-2.0.1 typing-extensions-4.6.3\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | [notice] A new release of pip is available: 21.1.1 -> 23.1.2\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | [notice] To update, run: pip install --upgrade pip\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \u2705  Success - Main Install test dependencies\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test] \u2b50 Run Main Install CPU PyTorch\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Looking in indexes: https://download.pytorch.org/whl/cpu\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting torch==2.0.1\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading https://download.pytorch.org/whl/cpu/torch-2.0.1%2Bcpu-cp38-cp38-linux_x86_64.whl (195.4 MB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 195.4/195.4 MB 7.1 MB/s eta 0:00:00\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting filelock (from torch==2.0.1)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading https://download.pytorch.org/whl/filelock-3.9.0-py3-none-any.whl (9.7 kB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Requirement already satisfied: typing-extensions in /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages (from torch==2.0.1) (4.6.3)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting sympy (from torch==2.0.1)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading https://download.pytorch.org/whl/sympy-1.11.1-py3-none-any.whl (6.5 MB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 6.5/6.5 MB 31.2 MB/s eta 0:00:00\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting networkx (from torch==2.0.1)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading https://download.pytorch.org/whl/networkx-3.0-py3-none-any.whl (2.0 MB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.0/2.0 MB 14.4 MB/s eta 0:00:00\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting jinja2 (from torch==2.0.1)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading https://download.pytorch.org/whl/Jinja2-3.1.2-py3-none-any.whl (133 kB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 133.1/133.1 kB 1.5 MB/s eta 0:00:00\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting MarkupSafe>=2.0 (from jinja2->torch==2.0.1)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading https://download.pytorch.org/whl/MarkupSafe-2.1.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Collecting mpmath>=0.19 (from sympy->torch==2.0.1)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   Downloading https://download.pytorch.org/whl/mpmath-1.2.1-py3-none-any.whl (532 kB)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 532.6/532.6 kB 10.4 MB/s eta 0:00:00\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Installing collected packages: mpmath, sympy, networkx, MarkupSafe, filelock, jinja2, torch\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Successfully installed MarkupSafe-2.1.2 filelock-3.9.0 jinja2-3.1.2 mpmath-1.2.1 networkx-3.0 sympy-1.11.1 torch-2.0.1+cpu\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | [notice] A new release of pip is available: 21.1.1 -> 23.1.2\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | [notice] To update, run: pip install --upgrade pip\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \u2705  Success - Main Install CPU PyTorch\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test] \u2b50 Run Main Check code style\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \u2705  Success - Main Check code style\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test] \u2b50 Run Main Test\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | ============================= test session starts ==============================\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | platform linux -- Python 3.8.11, pytest-7.3.2, pluggy-1.2.0\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/lRomul-argus\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | configfile: setup.cfg\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | testpaths: tests\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | plugins: cov-4.1.0\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | collected 185 items\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | tests/test_loss.py ..                                                    [  1%]\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | tests/test_optimizer.py ...                                              [  2%]\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | tests/test_pipeline.py .                                                 [  3%]\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | tests/test_utils.py ....................                                 [ 14%]\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | tests/callbacks/test_callback.py .........                               [ 18%]\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | tests/callbacks/test_checkpoints.py .........                            [ 23%]\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | tests/callbacks/test_early_stopping.py .....                             [ 26%]\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | tests/callbacks/test_logging.py ...........                              [ 32%]\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | tests/callbacks/test_lr_schedulers.py ..................                 [ 42%]\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | tests/engine/test_engine.py .............                                [ 49%]\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | tests/metrics/test_categorical_accuracy.py ...                           [ 50%]\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | tests/metrics/test_loss.py ....                                          [ 52%]\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | tests/metrics/test_metric.py ......                                      [ 56%]\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | tests/model/test_build.py .............................................. [ 81%]\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | .....                                                                    [ 83%]\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | tests/model/test_custom_build_methods.py .                               [ 84%]\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | tests/model/test_load.py .....................                           [ 95%]\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | tests/model/test_model.py ........                                       [100%]\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | =============================== warnings summary ===============================\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | argus/model/build.py:30\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/lRomul-argus/argus/model/build.py:30: UserWarning: Failed to initialize NumPy: numpy.core.multiarray failed to import (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:84.)\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |     'device': torch.device('cpu'),\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/lRomul-argus/report.xml -\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | ---------- coverage: platform linux, python 3.8.11-final-0 -----------\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Name                                    Stmts   Miss  Cover\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | -----------------------------------------------------------\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | argus/__init__.py                           6      0   100%\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | argus/callbacks/__init__.py                 5      0   100%\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | argus/callbacks/callback.py                45      0   100%\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | argus/callbacks/checkpoints.py             75      0   100%\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | argus/callbacks/early_stopping.py          25      0   100%\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | argus/callbacks/logging.py                 81      0   100%\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | argus/callbacks/lr_schedulers.py           66      0   100%\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | argus/engine/__init__.py                    1      0   100%\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | argus/engine/engine.py                     88      0   100%\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | argus/loss.py                              15      0   100%\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | argus/metrics/__init__.py                   2      0   100%\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | argus/metrics/categorical_accuracy.py      21      0   100%\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | argus/metrics/loss.py                      16      0   100%\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | argus/metrics/metric.py                    65      0   100%\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | argus/model/__init__.py                     2      0   100%\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | argus/model/build.py                      182      0   100%\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | argus/model/load.py                        48      0   100%\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | argus/model/model.py                      108      0   100%\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | argus/optimizer.py                         15      0   100%\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | argus/types.py                             10      0   100%\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | argus/utils.py                             88      0   100%\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | -----------------------------------------------------------\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | TOTAL                                     964      0   100%\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | ======================= 185 passed, 1 warning in 13.74s ========================\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \u2705  Success - Main Test\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test] \u2b50 Run Main Upload coverage\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/b3d2ad8f-6309-432d-99ad-cc1a59df51d4/act/codecov-codecov-action@v1/ dst=/var/run/act/actions/codecov-codecov-action@v1/\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/codecov-codecov-action@v1/] user=0 workdir=\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v1/dist/index.js] user= workdir=\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | [command]/usr/bin/bash codecov.sh -n  -F  -Q github-action-v1.5.2\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   _____          _\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |  / ____|        | |\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | | |     ___   __| | ___  ___ _____   __\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | | |    / _ \\ / _` |/ _ \\/ __/ _ \\ \\ / /\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | | |___| (_) | (_| |  __/ (_| (_) \\ V /\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |  \\_____\\___/ \\__,_|\\___|\\___\\___/ \\_/\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |                               Bash-1.0.3\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \u001b[0;36m==>\u001b[0m git version 2.33.0 found\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \u001b[0;36m==>\u001b[0m curl 7.68.0 (x86_64-pc-linux-gnu) libcurl/7.68.0 OpenSSL/1.1.1f zlib/1.2.11 brotli/1.0.7 libidn2/2.2.0 libpsl/0.21.0 (+libidn2/2.2.0) libssh/0.9.3/openssl/zlib nghttp2/1.40.0 librtmp/2.3\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Release-Date: 2020-01-08\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtmp rtsp scp sftp smb smbs smtp smtps telnet tftp \n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | Features: AsynchDNS brotli GSS-API HTTP2 HTTPS-proxy IDN IPv6 Kerberos Largefile libz NTLM NTLM_WB PSL SPNEGO SSL TLS-SRP UnixSockets\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \u001b[0;90m==>\u001b[0m GitHub Actions detected.\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |     Env vars used:\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |       -> GITHUB_ACTIONS:    true\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |       -> GITHUB_HEAD_REF:   \n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |       -> GITHUB_REF:        refs/heads/master\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |       -> GITHUB_REPOSITORY: lRomul/argus\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |       -> GITHUB_RUN_ID:     1\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |       -> GITHUB_SHA:        45225405c3bf0ee0c79a63c3f09687fbe075e91b\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |       -> GITHUB_WORKFLOW:   d52363d5-1b14-4894-a2a8-0a594b65b7a4\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |     \u001b[0;90mproject root:\u001b[0m .\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |     \u001b[0;32mYaml not found, that's ok! Learn more at\u001b[0m \u001b[0;36mhttp://docs.codecov.io/docs/codecov-yaml\u001b[0m\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \u001b[0;90m==>\u001b[0m Running gcov in . \u001b[0;90m(disable via -X gcov)\u001b[0m\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \u001b[0;90m==>\u001b[0m Python coveragepy exists \u001b[0;90mdisable via -X coveragepy\u001b[0m\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |     \u001b[0;90m->\u001b[0m Running coverage xml\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \u001b[0;90m==>\u001b[0m Searching for coverage reports in:\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |     \u001b[0;32m+\u001b[0m .\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |     \u001b[0;90m->\u001b[0m Found 2 reports\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \u001b[0;90m==>\u001b[0m Detecting git/mercurial file structure\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \u001b[0;90m==>\u001b[0m Reading reports\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |     \u001b[0;32m+\u001b[0m ./coverage.xml \u001b[0;90mbytes=38741\u001b[0m\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |     \u001b[0;32m+\u001b[0m ./report.xml \u001b[0;90mbytes=20549\u001b[0m\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \u001b[0;90m==>\u001b[0m Appending adjustments\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |     \u001b[0;36mhttps://docs.codecov.io/docs/fixing-reports\u001b[0m\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |     \u001b[0;90m->\u001b[0m No adjustments found\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \u001b[0;90m==>\u001b[0m Gzipping contents\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |         8.0K\t/tmp/codecov.lpJ2XR.gz\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \u001b[0;90m==>\u001b[0m Uploading reports\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |     \u001b[0;90murl:\u001b[0m https://codecov.io\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |     \u001b[0;90mquery:\u001b[0m branch=master&commit=45225405c3bf0ee0c79a63c3f09687fbe075e91b&build=1&build_url=http%3A%2F%2Fgithub.com%2FlRomul%2Fargus%2Factions%2Fruns%2F1&name=&tag=&slug=lRomul%2Fargus&service=github-actions&flags=&pr=&job=d52363d5-1b14-4894-a2a8-0a594b65b7a4&cmd_args=n,F,Q\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \u001b[0;90m->\u001b[0m  Pinging Codecov\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | https://codecov.io/upload/v4?package=github-action-v1.5.2-1.0.3&token=secret&branch=master&commit=45225405c3bf0ee0c79a63c3f09687fbe075e91b&build=1&build_url=http%3A%2F%2Fgithub.com%2FlRomul%2Fargus%2Factions%2Fruns%2F1&name=&tag=&slug=lRomul%2Fargus&service=github-actions&flags=&pr=&job=d52363d5-1b14-4894-a2a8-0a594b65b7a4&cmd_args=n,F,Q\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \u001b[0;31m{'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | 404\u001b[0m\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \u001b[0;90m==>\u001b[0m Uploading to Codecov\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |                                  Dload  Upload   Total   Spent    Left  Speed\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   | \r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100  5254  100   171  100  5083    370  11026 --:--:-- --:--:-- --:--:-- 11372\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   |     \u001b[0;32m{'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\u001b[0m\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \u2705  Success - Main Upload coverage\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test] \u2b50 Run Post Set up Python\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test]   \u2705  Success - Post Set up Python\n[d52363d5-1b14-4894-a2a8-0a594b65b7a4/test] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/lRomul-argus/.github/workflows/test-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 343.99725461006165
    }
}