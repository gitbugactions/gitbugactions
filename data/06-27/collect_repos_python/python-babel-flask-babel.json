{
    "repository": "python-babel/flask-babel",
    "stars": 416,
    "language": "python",
    "size": 518,
    "clone_url": "https://github.com/python-babel/flask-babel.git",
    "timestamp": "2023-07-01T09:08:51.249541Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_date_formatting",
                "name": "test_basics",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_date_formatting",
                "name": "test_custom_formats",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_date_formatting",
                "name": "test_custom_locale_selector",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_date_formatting",
                "name": "test_refreshing",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_force_locale",
                "name": "test_force_locale",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_force_locale",
                "name": "test_force_locale_with_threading",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_force_locale",
                "name": "test_force_locale_with_threading_and_app_context",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_force_locale",
                "name": "test_refresh_during_force_locale",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_gettext",
                "name": "test_basics",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_gettext",
                "name": "test_template_basics",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_gettext",
                "name": "test_lazy_gettext",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_gettext",
                "name": "test_lazy_ngettext",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_gettext",
                "name": "test_lazy_gettext_defaultdomain",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_gettext",
                "name": "test_list_translations",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_gettext",
                "name": "test_list_translations_default_locale_exists",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_gettext",
                "name": "test_no_formatting",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_gettext",
                "name": "test_domain",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_gettext",
                "name": "test_as_default",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_gettext",
                "name": "test_default_domain",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_gettext",
                "name": "test_multiple_apps",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_gettext",
                "name": "test_cache",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_integration",
                "name": "test_no_request_context",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_integration",
                "name": "test_multiple_directories",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_integration",
                "name": "test_multiple_directories_multiple_domains",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_integration",
                "name": "test_multiple_directories_different_domain",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_integration",
                "name": "test_different_domain",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_integration",
                "name": "test_lazy_old_style_formatting",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_integration",
                "name": "test_lazy_pickling",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_multiple_apps",
                "name": "test_multiple_apps",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_number_formatting",
                "name": "test_basics",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.] \ud83d\ude80  Start image=crawlergpt:latest\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/python-babel-flask-babel] user=0 workdir=\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.] \u2b50 Run Pre Install Poetry\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2705  Success - Pre Install Poetry\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.] \ud83e\uddea  Matrix: map[python-version:3.7]\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.] \u2b50 Run Main actions/checkout@v3\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2705  Success - Main actions/checkout@v3\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.] \u2b50 Run Main Set up Python 3.7\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udc33  docker cp src=/tmp/act-cache/208aaa40-2511-40b0-9616-5abd8dc6f71d/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2753  ::group::Installed versions\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udcac  ::debug::isExplicit: \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udcac  ::debug::explicit? false\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udcac  ::debug::explicit? true\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udcac  ::debug::explicit? true\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udcac  ::debug::explicit? true\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udcac  ::debug::explicit? true\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udcac  ::debug::explicit? true\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udcac  ::debug::explicit? true\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udcac  ::debug::evaluating 6 versions\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udcac  ::debug::matched: 3.7.11\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | Successfully set up CPython (3.7.11)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2753  ::endgroup::\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2705  Success - Main Set up Python 3.7\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2699  ::set-output:: python-version=3.7.11\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.] \u2b50 Run Main Install Poetry\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udc33  docker cp src=/tmp/act-cache/208aaa40-2511-40b0-9616-5abd8dc6f71d/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.] \u2b50 Run Main Install and configure Poetry\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | Retrieving Poetry metadata\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | # Welcome to Poetry!\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | This will download and install the latest version of Poetry,\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | a dependency and package manager for Python.\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | /home/runneradmin/.local/bin\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | You can uninstall at any time by executing this script with the --uninstall option,\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | and these changes will be reverted.\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | Installing Poetry (1.5.1)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | Installing Poetry (1.5.1): Creating environment\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | Installing Poetry (1.5.1): Installing Poetry\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | Installing Poetry (1.5.1): Creating script\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | Installing Poetry (1.5.1): Done\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | Poetry (1.5.1) is installed now. Great!\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | environment variable.\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | You can test that everything is set up by executing:\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | `poetry --version`\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \u001b[33mDone \u2705\u001b[0m\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2705  Success - Main Install and configure Poetry\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2705  Success - Main Install Poetry\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.] \u2b50 Run Main Installing\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | Creating virtualenv flask-babel-G_QAbmOD-py3.7 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | Updating dependencies\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | Resolving dependencies...\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | Package operations: 46 installs, 0 updates, 0 removals\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing certifi (2023.5.7)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing charset-normalizer (3.1.0)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing idna (3.4)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing markupsafe (2.1.3)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing pytz (2023.3)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing typing-extensions (4.7.0)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing urllib3 (2.0.3)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing zipp (3.15.0)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing alabaster (0.7.13)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing babel (2.12.1)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing docutils (0.19)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing imagesize (1.4.1)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing importlib-metadata (6.7.0)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing jinja2 (3.1.2)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing packaging (23.1)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing pygments (2.15.1)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing requests (2.31.0)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing snowballstemmer (2.2.0)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing sphinxcontrib-applehelp (1.0.2)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing sphinxcontrib-devhelp (1.0.2)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing sphinxcontrib-htmlhelp (2.0.0)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing sphinxcontrib-jsmath (1.0.1)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing sphinxcontrib-qthelp (1.0.3)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing sphinxcontrib-serializinghtml (1.1.5)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing exceptiongroup (1.1.1)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing iniconfig (2.0.0)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing pluggy (1.2.0)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing six (1.16.0)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing soupsieve (2.4.1)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing sphinx (5.3.0)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing tomli (2.0.1)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing beautifulsoup4 (4.12.2)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing bump2version (1.0.1)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing click (8.1.3)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing coverage (6.5.0)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing itsdangerous (2.1.2)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing pytest (7.4.0)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing python-dateutil (2.8.2)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing sphinx-basic-ng (1.0.0b1)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing werkzeug (2.2.3)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing bumpversion (0.6.0)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing flask (2.2.5)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing furo (2022.12.7)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing ghp-import (2.1.0)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing pytest-cov (3.0.0)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   \u2022 Installing pytest-mock (3.11.1)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | Writing lock file\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | Installing the current project: flask-babel (3.1.0)\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2705  Success - Main Installing\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.] \u2b50 Run Main Running tests\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | ============================= test session starts ==============================\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | platform linux -- Python 3.7.11, pytest-7.4.0, pluggy-1.2.0\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/python-babel-flask-babel\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | plugins: mock-3.11.1, cov-3.0.0\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | collected 30 items\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | tests/test_date_formatting.py ....                                       [ 13%]\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | tests/test_force_locale.py ....                                          [ 26%]\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | tests/test_gettext.py .............                                      [ 70%]\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | tests/test_integration.py .......                                        [ 93%]\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | tests/test_multiple_apps.py .                                            [ 96%]\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | tests/test_number_formatting.py .                                        [100%]\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | =============================== warnings summary ===============================\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | ../../../home/runneradmin/.cache/pypoetry/virtualenvs/flask-babel-G_QAbmOD-py3.7/lib/python3.7/site-packages/pytest_cov/plugin.py:256\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   /home/runneradmin/.cache/pypoetry/virtualenvs/flask-babel-G_QAbmOD-py3.7/lib/python3.7/site-packages/pytest_cov/plugin.py:256: PytestDeprecationWarning: The hookimpl CovPlugin.pytest_configure_node uses old-style configuration options (marks or attributes).\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   Please use the pytest.hookimpl(optionalhook=True) decorator instead\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |    to configure the hooks.\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |    See https://docs.pytest.org/en/latest/deprecations.html#configuring-hook-specs-impls-using-markers\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |     def pytest_configure_node(self, node):\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | ../../../home/runneradmin/.cache/pypoetry/virtualenvs/flask-babel-G_QAbmOD-py3.7/lib/python3.7/site-packages/pytest_cov/plugin.py:265\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   /home/runneradmin/.cache/pypoetry/virtualenvs/flask-babel-G_QAbmOD-py3.7/lib/python3.7/site-packages/pytest_cov/plugin.py:265: PytestDeprecationWarning: The hookimpl CovPlugin.pytest_testnodedown uses old-style configuration options (marks or attributes).\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |   Please use the pytest.hookimpl(optionalhook=True) decorator instead\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |    to configure the hooks.\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |    See https://docs.pytest.org/en/latest/deprecations.html#configuring-hook-specs-impls-using-markers\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   |     def pytest_testnodedown(self, node, error):\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/python-babel-flask-babel/report.xml -\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | ---------- coverage: platform linux, python 3.7.11-final-0 -----------\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | Coverage XML written to file coverage.xml\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | ======================== 30 passed, 2 warnings in 1.47s ========================\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2705  Success - Main Running tests\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.] \u2b50 Run Main Building documentation\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | Running Sphinx v5.3.0\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | making output directory... done\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | building [mo]: targets for 0 po files that are out of date\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | building [html]: targets for 1 source files that are out of date\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | updating environment: [new config] 1 added, 0 changed, 0 removed\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | reading sources... [100%] index\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | looking for now-outdated files... none found\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | pickling environment... done\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | checking consistency... done\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | preparing documents... done\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | writing output... [100%] index\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | generating indices... genindex py-modindex done\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | highlighting module code... [100%] flask_babel\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | writing additional pages... search done\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | copying static files... done\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | copying extra files... done\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | dumping search index in English (code: en)... done\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | dumping object inventory... done\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | build succeeded.\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | \n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   | The HTML pages are in _build/html.\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2705  Success - Main Building documentation\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.] \u2b50 Run Post Install Poetry\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udc33  docker cp src=/tmp/act-cache/208aaa40-2511-40b0-9616-5abd8dc6f71d/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2705  Success - Post Install Poetry\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.] \u2b50 Run Post Set up Python 3.7\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.]   \u2705  Success - Post Set up Python 3.7\n[3b13d670-a8d8-484a-a47b-4294137badcf/Running tests.] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/python-babel-flask-babel/.github/workflows/test-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "3b13d670-a8d8-484a-a47b-4294137badcf",
        "build_tool": "pytest",
        "elapsed_time": 92.04312825202942
    }
}