{
    "repository": "iamlikeme/rainflow",
    "stars": 84,
    "language": "python",
    "size": 195,
    "clone_url": "https://github.com/iamlikeme/rainflow.git",
    "timestamp": "2023-06-28T11:18:19.562579Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "pytest",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_rainflow",
                "name": "test_version",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_count_cycles[series0-cycles0-counts0-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_count_cycles[series1-cycles1-counts1-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_count_cycles[series2-cycles2-counts2-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_count_cycles_ndigits[series0-cycles0-counts0-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_count_cycles_ndigits[series1-cycles1-counts1-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_count_cycles_nbins",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_count_cycles_binsize_case_1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_count_cycles_binsize_case_3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_count_cycles_series_with_zero_derivatives[series0-cycles0-counts0-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_count_cycles_series_with_zero_derivatives[series1-cycles1-counts1-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_count_cycles_series_with_zero_derivatives[series2-cycles2-counts2-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_count_cycles_exclusive_arguments",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_extract_cycles[series0-cycles0-counts0-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_extract_cycles[series1-cycles1-counts1-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_extract_cycles[series2-cycles2-counts2-True]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_extract_cycles_small_series[series0-cycles0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_extract_cycles_small_series[series1-cycles1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_extract_cycles_small_series[series2-cycles2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_extract_cycles_small_series[series3-cycles3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_reversals_yield_value[series0-cycles0-counts0-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_reversals_yield_value[series1-cycles1-counts1-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_reversals_yield_value[series2-cycles2-counts2-True]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_reversals_small_series[series0-reversals0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_reversals_small_series[series1-reversals1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_reversals_small_series[series2-reversals2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_reversals_small_series[series3-reversals3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rainflow",
                "name": "test_num_bins",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests] \ud83d\ude80  Start image=crawlergpt:latest\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/iamlikeme-rainflow] user=0 workdir=\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1.3\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests] \u2b50 Run Pre Install Poetry\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \u2705  Success - Pre Install Poetry\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests] \ud83e\uddea  Matrix: map[python-version:3.7]\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests] \u2b50 Run Main actions/checkout@v2\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \u2705  Success - Main actions/checkout@v2\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests] \u2b50 Run Main Install Python 3.7\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/c967c852-db71-4c0e-bd2e-4be0d5ac9c20/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udcac  ::debug::isExplicit: \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udcac  ::debug::explicit? false\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udcac  ::debug::explicit? true\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udcac  ::debug::explicit? true\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udcac  ::debug::explicit? true\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udcac  ::debug::explicit? true\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udcac  ::debug::explicit? true\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udcac  ::debug::explicit? true\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udcac  ::debug::evaluating 6 versions\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udcac  ::debug::matched: 3.7.11\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | Successfully setup CPython (3.7.11)\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \u2705  Success - Main Install Python 3.7\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \u2699  ::set-output:: python-version=3.7.11\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests] \u2b50 Run Main Install Poetry\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/c967c852-db71-4c0e-bd2e-4be0d5ac9c20/act/snok-install-poetry@v1.3/ dst=/var/run/act/actions/snok-install-poetry@v1.3/\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1.3/] user=0 workdir=\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests] \u2b50 Run Main Install and configure Poetry\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | Retrieving Poetry metadata\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | # Welcome to Poetry!\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | This will download and install the latest version of Poetry,\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | a dependency and package manager for Python.\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | /home/runneradmin/.local/bin\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | You can uninstall at any time by executing this script with the --uninstall option,\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | and these changes will be reverted.\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | Installing Poetry (1.3.2)\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | Installing Poetry (1.3.2): Creating environment\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | Installing Poetry (1.3.2): Installing Poetry\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | Installing Poetry (1.3.2): Creating script\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | Installing Poetry (1.3.2): Done\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | Poetry (1.3.2) is installed now. Great!\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | environment variable.\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | You can test that everything is set up by executing:\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | `poetry --version`\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \u001b[33mDone \u2705\u001b[0m\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \u2705  Success - Main Install and configure Poetry\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \u2705  Success - Main Install Poetry\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests] \u2b50 Run Main Setup virtualenv\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | Creating virtualenv rainflow-7m7Stc4q-py3.7 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | Using virtualenv: /home/runneradmin/.cache/pypoetry/virtualenvs/rainflow-7m7Stc4q-py3.7\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \u2705  Success - Main Setup virtualenv\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests] \u2b50 Run Main Install rainflow\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | Installing dependencies from lock file\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | Package operations: 10 installs, 0 updates, 0 removals\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   |   \u2022 Installing zipp (1.2.0)\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   |   \u2022 Installing importlib-metadata (2.1.2)\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   |   \u2022 Installing pyparsing (2.4.7)\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   |   \u2022 Installing attrs (21.2.0)\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   |   \u2022 Installing iniconfig (1.1.1)\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   |   \u2022 Installing packaging (21.2)\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   |   \u2022 Installing pluggy (1.0.0)\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   |   \u2022 Installing py (1.11.0)\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   |   \u2022 Installing toml (0.10.2)\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   |   \u2022 Installing pytest (6.2.5)\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | Installing the current project: rainflow (3.2.0)\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \u2705  Success - Main Install rainflow\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests] \u2b50 Run Main Run tests\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | ============================= test session starts ==============================\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | platform linux -- Python 3.7.11, pytest-6.2.5, py-1.11.0, pluggy-1.0.0\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/iamlikeme-rainflow\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | collected 28 items\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | tests/test_rainflow.py ............................                      [100%]\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | \n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/iamlikeme-rainflow/report.xml -\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   | ============================== 28 passed in 0.18s ==============================\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \u2705  Success - Main Run tests\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests] \u2b50 Run Post Install Poetry\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/c967c852-db71-4c0e-bd2e-4be0d5ac9c20/act/snok-install-poetry@v1.3/ dst=/var/run/act/actions/snok-install-poetry@v1.3/\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1.3/] user=0 workdir=\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \u2705  Success - Post Install Poetry\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests] \u2b50 Run Post Install Python 3.7\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests]   \u2705  Success - Post Install Python 3.7\n[c5c5414e-935d-4750-a5f8-eab4829cd1f7/tests] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/iamlikeme-rainflow/.github/workflows/tests-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 190.54754304885864
    }
}