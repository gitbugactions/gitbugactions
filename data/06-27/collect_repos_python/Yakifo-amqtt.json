{
    "repository": "Yakifo/amqtt",
    "stars": 91,
    "language": "python",
    "size": 1029,
    "clone_url": "https://github.com/Yakifo/amqtt.git",
    "timestamp": "2023-06-28T16:36:29.339389Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tests.test_broker",
                "name": "test_start_stop",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_client_connect",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_connect_tcp",
                "time": 0.399,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_client_connect_will_flag",
                "time": 0.252,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_client_connect_clean_session_false",
                "time": 0.116,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_client_subscribe",
                "time": 0.144,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_client_subscribe_twice",
                "time": 0.124,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_client_unsubscribe",
                "time": 0.224,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_client_publish",
                "time": 0.122,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_client_publish_acl_permitted",
                "time": 0.127,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_client_publish_acl_forbidden",
                "time": 1.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_client_publish_acl_permitted_sub_forbidden",
                "time": 1.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_client_publish_dup",
                "time": 2.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_client_publish_invalid_topic",
                "time": 0.136,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_client_publish_big",
                "time": 0.138,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_client_publish_retain",
                "time": 0.194,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_client_publish_retain_delete",
                "time": 0.119,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_client_subscribe_publish",
                "time": 0.245,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_client_subscribe_invalid",
                "time": 0.222,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_client_subscribe_publish_dollar_topic_1",
                "time": 2.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_client_subscribe_publish_dollar_topic_2",
                "time": 2.241,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_client_publish_retain_subscribe",
                "time": 1.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_matches_multi_level_wildcard",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_matches_single_level_wildcard",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_broker",
                "name": "test_broker_broadcast_cancellation",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_smometest",
                "time": 1.892,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_connect_tcp",
                "time": 0.372,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_connect_tcp_secure",
                "time": 0.118,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_connect_tcp_failure",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_connect_ws",
                "time": 0.115,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_reconnect_ws_retain_username_password",
                "time": 1.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_connect_ws_secure",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_connect_username_without_password",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_ping",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_subscribe",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_unsubscribe",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_deliver",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_deliver_timeout",
                "time": 2.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_cancel_publish_qos1",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_cancel_publish_qos2_pubrec",
                "time": 1.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_cancel_publish_qos2_pubcomp",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_codecs.TestCodecs",
                "name": "test_bytes_to_hex_str",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_codecs.TestCodecs",
                "name": "test_bytes_to_int",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_codecs.TestCodecs",
                "name": "test_decode_string",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_codecs.TestCodecs",
                "name": "test_encode_string",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_format_client_message",
                "time": 1.437,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_format_client_message_valid",
                "time": 3.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_format_client_message_unknown",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_client_id",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_read_yaml_config",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_connect.ConnectPacketTest",
                "name": "test_decode_fail_miss_clientId",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_connect.ConnectPacketTest",
                "name": "test_decode_fail_miss_password",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_connect.ConnectPacketTest",
                "name": "test_decode_fail_miss_username",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_connect.ConnectPacketTest",
                "name": "test_decode_fail_miss_willtopic",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_connect.ConnectPacketTest",
                "name": "test_decode_fail_reserved_flag",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_connect.ConnectPacketTest",
                "name": "test_decode_ok",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_connect.ConnectPacketTest",
                "name": "test_decode_ok_will_flag",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_connect.ConnectPacketTest",
                "name": "test_encode",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_connect.ConnectPacketTest",
                "name": "test_getattr_ok",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_packet.TestMQTTFixedHeaderTest",
                "name": "test_from_bytes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_packet.TestMQTTFixedHeaderTest",
                "name": "test_from_bytes_ko_with_length",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_packet.TestMQTTFixedHeaderTest",
                "name": "test_from_bytes_with_length",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_packet.TestMQTTFixedHeaderTest",
                "name": "test_to_bytes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_packet.TestMQTTFixedHeaderTest",
                "name": "test_to_bytes_2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_puback.PubackPacketTest",
                "name": "test_from_stream",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_puback.PubackPacketTest",
                "name": "test_to_bytes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_pubcomp.PubcompPacketTest",
                "name": "test_from_stream",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_pubcomp.PubcompPacketTest",
                "name": "test_to_bytes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_publish.PublishPacketTest",
                "name": "test_build",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_publish.PublishPacketTest",
                "name": "test_from_stream_qos_0",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_publish.PublishPacketTest",
                "name": "test_from_stream_qos_2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_publish.PublishPacketTest",
                "name": "test_to_stream_no_packet_id",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_publish.PublishPacketTest",
                "name": "test_to_stream_packet",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_pubrec.PubrecPacketTest",
                "name": "test_from_stream",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_pubrec.PubrecPacketTest",
                "name": "test_to_bytes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_pubrel.PubrelPacketTest",
                "name": "test_from_stream",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_pubrel.PubrelPacketTest",
                "name": "test_to_bytes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_suback.SubackPacketTest",
                "name": "test_from_stream",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_suback.SubackPacketTest",
                "name": "test_to_stream",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_subscribe.SubscribePacketTest",
                "name": "test_from_stream",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_subscribe.SubscribePacketTest",
                "name": "test_to_stream",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_unsuback.UnsubackPacketTest",
                "name": "test_from_stream",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_unsuback.UnsubackPacketTest",
                "name": "test_to_stream",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_unsubscribe.UnsubscribePacketTest",
                "name": "test_from_stream",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.test_unsubscribe.UnsubscribePacketTest",
                "name": "test_to_stream",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.protocol.test_handler.ProtocolHandlerTest",
                "name": "test_init_handler",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.protocol.test_handler.ProtocolHandlerTest",
                "name": "test_publish_qos0",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.protocol.test_handler.ProtocolHandlerTest",
                "name": "test_publish_qos1",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.protocol.test_handler.ProtocolHandlerTest",
                "name": "test_publish_qos1_retry",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.protocol.test_handler.ProtocolHandlerTest",
                "name": "test_publish_qos2",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.protocol.test_handler.ProtocolHandlerTest",
                "name": "test_publish_qos2_retry",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.protocol.test_handler.ProtocolHandlerTest",
                "name": "test_receive_qos0",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.protocol.test_handler.ProtocolHandlerTest",
                "name": "test_receive_qos1",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.protocol.test_handler.ProtocolHandlerTest",
                "name": "test_receive_qos2",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mqtt.protocol.test_handler.ProtocolHandlerTest",
                "name": "test_start_stop",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_authentication.TestAnonymousAuthPlugin",
                "name": "test_allow_anonymous",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_authentication.TestAnonymousAuthPlugin",
                "name": "test_allow_nonanonymous",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_authentication.TestAnonymousAuthPlugin",
                "name": "test_disallow_anonymous",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_authentication.TestFileAuthPlugin",
                "name": "test_allow",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_authentication.TestFileAuthPlugin",
                "name": "test_unknown_password",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_authentication.TestFileAuthPlugin",
                "name": "test_wrong_password",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_manager.TestPluginManager",
                "name": "test_fire_event",
                "time": 1.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_manager.TestPluginManager",
                "name": "test_fire_event_wait",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_manager.TestPluginManager",
                "name": "test_load_plugin",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_manager.TestPluginManager",
                "name": "test_map_coro",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_manager.TestPluginManager",
                "name": "test_map_coro_filter",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_manager.TestPluginManager",
                "name": "test_map_coro_return",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_persistence.TestSQLitePlugin",
                "name": "test_create_tables",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_plugins",
                "name": "test_plugins_correct_has_attr",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_base_no_config",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_base_empty_config",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_base_disabled_config",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_base_enabled_config",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_taboo_empty_config",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_taboo_disabled",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_taboo_not_taboo_topic",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_taboo_anon_taboo_topic",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_taboo_notadmin_taboo_topic",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_taboo_admin_taboo_topic",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_topic_ac_not_match",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_topic_ac_not_match_longer_acl",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_topic_ac_not_match_longer_rq",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_topic_ac_match_exact",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_topic_ac_match_plus",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_topic_ac_match_hash",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_taclp_empty_config",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_taclp_true_disabled",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_taclp_true_no_pub_acl",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_taclp_false_sub_no_topic",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_taclp_false_sub_unknown_user",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_taclp_false_sub_no_permission",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_taclp_true_sub_permission",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_taclp_true_pub_permission",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.plugins.test_topic_checking",
                "name": "test_taclp_true_anon_sub_permission",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build] \ud83d\ude80  Start image=crawlergpt:latest\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Yakifo-amqtt] user=0 workdir=\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build] \ud83e\uddea  Matrix: map[python-version:3.7]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build] \u2b50 Run Main actions/checkout@v2\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \u2705  Success - Main actions/checkout@v2\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build] \u2b50 Run Main Set up Python 3.7\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/df65a4d3-832f-44a6-9b93-5d2bbd3796ee/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udcac  ::debug::isExplicit: \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udcac  ::debug::explicit? false\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udcac  ::debug::explicit? true\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udcac  ::debug::explicit? true\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udcac  ::debug::explicit? true\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udcac  ::debug::explicit? true\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udcac  ::debug::explicit? true\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udcac  ::debug::explicit? true\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udcac  ::debug::matched: 3.7.11\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Successfully setup CPython (3.7.11)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \u2705  Success - Main Set up Python 3.7\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \u2699  ::set-output:: python-version=3.7.11\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build] \u2b50 Run Main Install dependencies\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Retrieving Poetry metadata\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | # Welcome to Poetry!\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | This will download and install the latest version of Poetry,\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | a dependency and package manager for Python.\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | /home/runneradmin/.local/bin\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | You can uninstall at any time by executing this script with the --uninstall option,\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | and these changes will be reverted.\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Installing Poetry (1.5.1)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Installing Poetry (1.5.1): Creating environment\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Installing Poetry (1.5.1): Installing Poetry\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Installing Poetry (1.5.1): Creating script\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Installing Poetry (1.5.1): Done\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Poetry (1.5.1) is installed now. Great!\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | environment variable.\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | You can test that everything is set up by executing:\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | `poetry --version`\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Creating virtualenv amqtt-xTNKcyRX-py3.7 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Installing dependencies from lock file\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Warning: poetry.lock is not consistent with pyproject.toml. You may be getting improper dependencies. Run `poetry lock [--no-update]` to fix it.\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Package operations: 50 installs, 0 updates, 0 removals\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing typing-extensions (3.10.0.2)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing zipp (3.6.0)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing importlib-metadata (4.8.2)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing pyparsing (2.4.7)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing attrs (21.2.0)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing certifi (2021.10.8)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing charset-normalizer (2.0.7)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing idna (3.3)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing iniconfig (1.1.1)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing lazy-object-proxy (1.6.0)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing packaging (21.2)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing pluggy (1.0.0)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing py (1.11.0)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing toml (0.10.2)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing typed-ast (1.4.3)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing urllib3 (1.26.7)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing wrapt (1.13.3)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing astroid (2.8.4)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing click (8.0.3)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing coverage (6.1.1)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing docopt (0.6.2)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing isort (5.10.1)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing mccabe (0.6.1)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing mock (4.0.3)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing mypy-extensions (0.4.3)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing pathspec (0.9.0)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing platformdirs (2.4.0)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing pycodestyle (2.7.0)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing pyflakes (2.3.1)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing pytest (6.2.5)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing regex (2021.11.10)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing requests (2.26.0)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing six (1.16.0)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing sortedcontainers (2.4.0)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing tomli (1.2.2)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing asyncmock (0.4.2)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing black (21.10b0)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing coveralls (3.3.0)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing flake8 (3.9.2)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing hypothesis (6.24.2)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing mypy (0.812)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing passlib (1.7.4)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing psutil (5.9.0)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing pylint (2.11.1)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing pytest-asyncio (0.14.0)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing pytest-cov (2.12.1)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing pytest-logdog (0.1.0)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing pyyaml (6.0)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing transitions (0.8.10)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   \u2022 Installing websockets (10.0)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Installing the current project: amqtt (0.11.0-beta1)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \u2705  Success - Main Install dependencies\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build] \u2b50 Run Main Lint with flake8 and black\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | 0\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | All done! \u2728 \ud83c\udf70 \u2728\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | 80 files would be left unchanged.\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \u2705  Success - Main Lint with flake8 and black\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build] \u2b50 Run Main Test with pytest\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | ============================= test session starts ==============================\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | platform linux -- Python 3.7.11, pytest-6.2.5, py-1.11.0, pluggy-1.0.0\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Yakifo-amqtt\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | plugins: cov-2.12.1, asyncio-0.14.0, logdog-0.1.0, hypothesis-6.24.2\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | collected 134 items\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/test_broker.py .....................X...                           [ 18%]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/test_cli.py .                                                      [ 19%]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/test_client.py ...............                                     [ 30%]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/test_codecs.py ....                                                [ 33%]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/test_utils.py .....                                                [ 37%]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/test_connect.py .........                                     [ 44%]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/test_packet.py .....                                          [ 47%]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/test_puback.py ..                                             [ 49%]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/test_pubcomp.py ..                                            [ 50%]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/test_publish.py .....                                         [ 54%]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/test_pubrec.py ..                                             [ 55%]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/test_pubrel.py ..                                             [ 57%]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/test_suback.py ..                                             [ 58%]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/test_subscribe.py ..                                          [ 60%]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/test_unsuback.py ..                                           [ 61%]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/test_unsubscribe.py ..                                        [ 63%]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/protocol/test_handler.py ..........                           [ 70%]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/plugins/test_authentication.py ......                              [ 75%]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/plugins/test_manager.py ......                                     [ 79%]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/plugins/test_persistence.py .                                      [ 80%]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/plugins/test_plugins.py .                                          [ 81%]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/plugins/test_topic_checking.py .........................           [100%]\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Yakifo-amqtt/report.xml -\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | ---------- coverage: platform linux, python 3.7.11-final-0 -----------\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Name                                    Stmts   Miss  Cover\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | -----------------------------------------------------------\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/__init__.py                           1      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/adapters.py                         102     10    90%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/broker.py                           546    102    81%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/client.py                           288     52    82%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/codecs.py                            52      3    94%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/errors.py                             8      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/mqtt/__init__.py                     23      2    91%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/mqtt/connack.py                      56      5    91%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/mqtt/connect.py                     216     20    91%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/mqtt/constants.py                     3      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/mqtt/disconnect.py                   14      1    93%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/mqtt/packet.py                      166     12    93%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/mqtt/pingreq.py                      14      1    93%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/mqtt/pingresp.py                     16      1    94%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/mqtt/protocol/__init__.py             0      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/mqtt/protocol/broker_handler.py     123     20    84%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/mqtt/protocol/client_handler.py     119     18    85%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/mqtt/protocol/handler.py            394     64    84%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/mqtt/puback.py                       24      2    92%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/mqtt/pubcomp.py                      24      2    92%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/mqtt/publish.py                     116      8    93%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/mqtt/pubrec.py                       24      2    92%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/mqtt/pubrel.py                       22      2    91%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/mqtt/suback.py                       48      4    92%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/mqtt/subscribe.py                    48      4    92%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/mqtt/unsuback.py                     17      1    94%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/mqtt/unsubscribe.py                  43      3    93%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/plugins/__init__.py                   0      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/plugins/authentication.py            69     13    81%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/plugins/logging.py                   28      6    79%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/plugins/manager.py                  111     13    88%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/plugins/persistence.py               47     21    55%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/plugins/sys/__init__.py               0      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/plugins/sys/broker.py               108     47    56%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/plugins/topic_checking.py            75      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/scripts/__init__.py                   0      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/scripts/broker_script.py             36     21    42%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/scripts/pub_script.py               104     84    19%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/scripts/sub_script.py                91     70    23%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/session.py                           96     12    88%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/utils.py                             27      3    89%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | amqtt/version.py                           17     17     0%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/__init__.py                           1      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/conftest.py                          29      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/__init__.py                      1      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/protocol/__init__.py             1      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/protocol/test_handler.py       395     42    89%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/test_connect.py                108      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/test_packet.py                  39      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/test_puback.py                  17      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/test_pubcomp.py                 17      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/test_publish.py                 99      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/test_pubrec.py                  17      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/test_pubrel.py                  17      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/test_suback.py                  22      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/test_subscribe.py               25      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/test_unsuback.py                18      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/mqtt/test_unsubscribe.py             20      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/plugins/__init__.py                   1      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/plugins/test_authentication.py       72      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/plugins/test_manager.py              64      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/plugins/test_persistence.py          25      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/plugins/test_plugins.py              40      1    98%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/plugins/test_topic_checking.py      215      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/test_broker.py                      400      7    98%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/test_cli.py                          11      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/test_client.py                      196      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/test_codecs.py                       22      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | tests/test_utils.py                        26      0   100%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | -----------------------------------------------------------\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | TOTAL                                    5214    696    87%\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Coverage XML written to file coverage.xml\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | ======================= 133 passed, 1 xpassed in 29.28s ========================\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \u2705  Success - Main Test with pytest\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build] \u2b50 Run Main Upload coverage data to coveralls.io\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Submitting coverage to coveralls.io...\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Could not submit coverage: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Traceback (most recent call last):\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   File \"/home/runneradmin/.cache/pypoetry/virtualenvs/amqtt-xTNKcyRX-py3.7/lib/python3.7/site-packages/coveralls/api.py\", line 288, in submit_report\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |     response.raise_for_status()\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   File \"/home/runneradmin/.cache/pypoetry/virtualenvs/amqtt-xTNKcyRX-py3.7/lib/python3.7/site-packages/requests/models.py\", line 953, in raise_for_status\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |     raise HTTPError(http_error_msg, response=self)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | requests.exceptions.HTTPError: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | The above exception was the direct cause of the following exception:\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | \n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | Traceback (most recent call last):\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   File \"/home/runneradmin/.cache/pypoetry/virtualenvs/amqtt-xTNKcyRX-py3.7/lib/python3.7/site-packages/coveralls/cli.py\", line 95, in main\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |     result = coverallz.wear()\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   File \"/home/runneradmin/.cache/pypoetry/virtualenvs/amqtt-xTNKcyRX-py3.7/lib/python3.7/site-packages/coveralls/api.py\", line 255, in wear\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |     return self.submit_report(json_string)\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |   File \"/home/runneradmin/.cache/pypoetry/virtualenvs/amqtt-xTNKcyRX-py3.7/lib/python3.7/site-packages/coveralls/api.py\", line 292, in submit_report\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   |     'Could not submit coverage: {}'.format(e)) from e\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | coveralls.exception.CoverallsException: Could not submit coverage: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   | resubmitting with id None\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build]   \u274c  Failure - Main Upload coverage data to coveralls.io\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build] exitcode '1': failure\n[4c26ceb4-40b3-449e-b834-efb8d09ca27d/build] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'build' failed\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Yakifo-amqtt/.github/workflows/python-package-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 295.02886295318604
    }
}