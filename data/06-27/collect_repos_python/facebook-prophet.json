{
    "repository": "facebook/prophet",
    "stars": 16051,
    "language": "python",
    "size": 60248,
    "clone_url": "https://github.com/facebook/prophet.git",
    "timestamp": "2023-06-28T11:39:27.194363Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [],
        "stdout": "[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ] \ud83d\ude80  Start image=crawlergpt:latest\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python] \ud83d\ude80  Start image=crawlergpt:latest\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet] user=0 workdir=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet] user=0 workdir=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \u2601  git clone 'https://github.com/r-lib/actions' # ref=v2\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \u2601  git clone 'https://github.com/r-lib/actions' # ref=v2\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:3.8]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python] \u2b50 Run Main actions/checkout@v3\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \u2705  Success - Main actions/checkout@v3\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python] \u2b50 Run Main Set up Python 3.8\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udc33  docker cp src=/tmp/act-cache/ddc28a6b-6249-4322-9b98-b5bc92bf22d6/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \u2601  git clone 'https://github.com/r-lib/actions' # ref=v2\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ] \u2b50 Run Pre Check\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v3\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v3\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \u2705  Success - Pre Check\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ] \ud83e\uddea  Matrix: map[config:map[os:ubuntu-latest r:release rspm:https://packagemanager.rstudio.com/cran/__linux__/focal/latest]]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ] \u2b50 Run Main actions/checkout@v3\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \u2705  Success - Main actions/checkout@v3\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ] \u2b50 Run Main r-lib/actions/setup-pandoc@v2\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udc33  docker cp src=/tmp/act-cache/ddc28a6b-6249-4322-9b98-b5bc92bf22d6/act/r-lib-actions-setup-pandoc@v2/ dst=/var/run/act/actions/r-lib-actions-setup-pandoc@v2/\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/r-lib-actions-setup-pandoc@v2/] user=0 workdir=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \u2753  ::group::Installed versions\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::isExplicit: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::explicit? false\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::explicit? true\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::explicit? true\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::explicit? true\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::explicit? true\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::explicit? true\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::explicit? true\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::evaluating 6 versions\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::matched: 3.8.11\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Successfully set up CPython (3.8.11)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \u2753  ::endgroup::\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::Search path '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/pyproject.toml\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::Found 1 files to hash.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::OS Name: Ubuntu, Version: 20.04\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [command]/opt/hostedtoolcache/Python/3.8.11/x64/bin/pip cache dir\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /home/runneradmin/.cache/pip\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::global cache directory path is /home/runneradmin/.cache/pip\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::Resolved Keys:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::[\"setup-python-Linux-20.04-Ubuntu-python-3.8.11-pip-27670fa8cf575708488aad231e5a87e4fc06f2077fcebba364155eddc3dffdc7\",\"setup-python-Linux-20.04-Ubuntu-python-3.8.11-pip\"]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::1.5.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:41303/_apis/artifactcache/cache?keys=setup-python-Linux-20.04-Ubuntu-python-3.8.11-pip-27670fa8cf575708488aad231e5a87e4fc06f2077fcebba364155eddc3dffdc7%252Csetup-python-Linux-20.04-Ubuntu-python-3.8.11-pip&version=79a244514713d0ea96d5d8aab70186082a897848df6e845ec8308965d2f82f4f\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | pip cache is not found\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \u2705  Success - Main Set up Python 3.8\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib/pkgconfig\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.8.11/x64/bin/python\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \u2699  ::set-output:: cache-hit=false\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \u2699  ::set-output:: python-version=3.8.11\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python] \u2b50 Run Main Install and test\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/r-lib-actions-setup-pandoc@v2/setup-pandoc/lib/setup-pandoc.js] user= workdir=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Obtaining file:///tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Installing build dependencies: started\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Installing build dependencies: finished with status 'done'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Getting requirements to build wheel: started\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Getting requirements to build wheel: finished with status 'done'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     Preparing wheel metadata: started\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     Preparing wheel metadata: finished with status 'done'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting python-dateutil>=2.8.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Using cached python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting importlib-resources\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading importlib_resources-5.12.0-py3-none-any.whl (36 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting matplotlib>=2.0.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading matplotlib-3.7.1-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (9.2 MB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting cmdstanpy>=1.0.4\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Using cached cmdstanpy-1.1.0-py3-none-any.whl (83 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting convertdate>=2.1.2\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading convertdate-2.4.0-py3-none-any.whl (47 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting LunarCalendar>=0.0.9\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading LunarCalendar-0.0.9-py2.py3-none-any.whl (18 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting pandas>=1.0.4\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Using cached pandas-2.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.3 MB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting holidays>=0.25\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading holidays-0.27.1-py3-none-any.whl (598 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting numpy>=1.15.4\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Using cached numpy-1.24.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.3 MB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting tqdm>=4.36.1\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Using cached tqdm-4.65.0-py3-none-any.whl (77 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting pytest\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading pytest-7.4.0-py3-none-any.whl (323 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting nbconvert\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading nbconvert-7.6.0-py3-none-any.whl (290 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting wheel\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Using cached wheel-0.40.0-py3-none-any.whl (64 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting jupyterlab\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading jupyterlab-4.0.2-py3-none-any.whl (9.2 MB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting setuptools>=64\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Using cached setuptools-68.0.0-py3-none-any.whl (804 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting plotly\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading plotly-5.15.0-py2.py3-none-any.whl (15.5 MB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting distributed\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading distributed-2023.5.0-py3-none-any.whl (966 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting dask[dataframe]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading dask-2023.5.0-py3-none-any.whl (1.2 MB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting pymeeus<=1,>=0.3.13\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading PyMeeus-0.5.12.tar.gz (5.8 MB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting ephem>=3.7.5.3\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading ephem-4.1.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.8 MB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting pytz\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Using cached pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting pillow>=6.2.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading Pillow-9.5.0-cp38-cp38-manylinux_2_28_x86_64.whl (3.4 MB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting fonttools>=4.22.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading fonttools-4.40.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (4.4 MB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting cycler>=0.10\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading cycler-0.11.0-py3-none-any.whl (6.4 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting kiwisolver>=1.0.1\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading kiwisolver-1.4.4-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl (1.2 MB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting pyparsing>=2.3.1\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading pyparsing-3.1.0-py3-none-any.whl (102 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting contourpy>=1.0.1\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading contourpy-1.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (300 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting packaging>=20.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting zipp>=3.1.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting tzdata>=2022.1\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Using cached tzdata-2023.3-py2.py3-none-any.whl (341 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting six>=1.5\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Using cached six-1.16.0-py2.py3-none-any.whl (11 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting partd>=1.2.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading partd-1.4.0-py3-none-any.whl (18 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting click>=8.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting importlib-metadata>=4.13.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting cloudpickle>=1.5.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading cloudpickle-2.2.1-py3-none-any.whl (25 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting pyyaml>=5.3.1\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading PyYAML-6.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (701 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting toolz>=0.10.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading toolz-0.12.0-py3-none-any.whl (55 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting fsspec>=2021.09.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading fsspec-2023.6.0-py3-none-any.whl (163 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting locket\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading locket-1.0.0-py2.py3-none-any.whl (4.4 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting tblib>=1.6.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading tblib-2.0.0-py3-none-any.whl (11 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udcac  ::debug::got pandoc-version 2.19.2\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \u2753  ::group::Download pandoc\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udcac  ::debug::Downloading https://github.com/jgm/pandoc/releases/download/2.19.2/pandoc-2.19.2-1-amd64.deb\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udcac  ::debug::Downloading /tmp/c01e3aa4-ce0e-485d-b2d5-deff8d4b88e9\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting psutil>=5.7.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading psutil-5.9.5-cp36-abi3-manylinux_2_12_x86_64.manylinux2010_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (282 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting zict>=2.2.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading zict-3.0.0-py2.py3-none-any.whl (43 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting sortedcontainers>=2.0.5\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading sortedcontainers-2.4.0-py2.py3-none-any.whl (29 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting jinja2>=2.10.3\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading Jinja2-3.1.2-py3-none-any.whl (133 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udcac  ::debug::download complete\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \u2753  ::group::Install gdebi-core\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | [command]sudo apt-get install -y gdebi-core\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting urllib3>=1.24.3\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting tornado>=6.0.3\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading tornado-6.3.2-cp38-abi3-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (426 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting msgpack>=1.0.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | Reading package lists...\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading msgpack-1.0.5-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (322 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | Building dependency tree...\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | Reading state information...\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | The following additional packages will be installed:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   |   python3-debian\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting MarkupSafe>=2.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading MarkupSafe-2.1.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | The following NEW packages will be installed:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   |   gdebi-core python3-debian\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | 0 upgraded, 2 newly installed, 0 to remove and 20 not upgraded.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | Need to get 181 kB of archives.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | After this operation, 1201 kB of additional disk space will be used.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 python3-debian all 0.1.36ubuntu1 [65.0 kB]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 gdebi-core all 0.9.5.7+nmu3 [116 kB]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting notebook-shim>=0.2\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading notebook_shim-0.2.3-py3-none-any.whl (13 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting ipykernel\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading ipykernel-6.23.3-py3-none-any.whl (152 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting jupyter-lsp>=2.0.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading jupyter_lsp-2.2.0-py3-none-any.whl (65 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting traitlets\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading traitlets-5.9.0-py3-none-any.whl (117 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting jupyter-core\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading jupyter_core-5.3.1-py3-none-any.whl (93 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting jupyterlab-server<3,>=2.19.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading jupyterlab_server-2.23.0-py3-none-any.whl (57 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | Fetched 181 kB in 0s (680 kB/s)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | Selecting previously unselected package python3-debian.\r\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting jupyter-server<3,>=2.4.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading jupyter_server-2.7.0-py3-none-any.whl (375 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 193678 files and directories currently installed.)\r\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | Preparing to unpack .../python3-debian_0.1.36ubuntu1_all.deb ...\r\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | Unpacking python3-debian (0.1.36ubuntu1) ...\r\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting tomli\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting async-lru>=1.0.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading async_lru-2.0.2-py3-none-any.whl (5.7 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting typing-extensions>=4.0.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading typing_extensions-4.6.3-py3-none-any.whl (31 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | Selecting previously unselected package gdebi-core.\r\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | Preparing to unpack .../gdebi-core_0.9.5.7+nmu3_all.deb ...\r\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | Unpacking gdebi-core (0.9.5.7+nmu3) ...\r\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting argon2-cffi\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading argon2_cffi-21.3.0-py3-none-any.whl (14 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting prometheus-client\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading prometheus_client-0.17.0-py3-none-any.whl (60 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting jupyter-server-terminals\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | Setting up python3-debian (0.1.36ubuntu1) ...\r\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading jupyter_server_terminals-0.4.4-py3-none-any.whl (13 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | Setting up gdebi-core (0.9.5.7+nmu3) ...\r\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \u2753  ::group::Install pandoc\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | [command]sudo gdebi --non-interactive /tmp/pandoc-2.19.2-1-amd64.deb\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting pyzmq>=24\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading pyzmq-25.1.0-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.1 MB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting send2trash\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading Send2Trash-1.8.2-py3-none-any.whl (18 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting terminado>=0.8.3\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading terminado-0.17.1-py3-none-any.whl (17 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting jupyter-client>=7.4.4\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading jupyter_client-8.3.0-py3-none-any.whl (103 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting jupyter-events>=0.6.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading jupyter_events-0.6.3-py3-none-any.whl (18 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting websocket-client\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading websocket_client-1.6.1-py3-none-any.whl (56 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting nbformat>=5.3.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading nbformat-5.9.0-py3-none-any.whl (77 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting anyio>=3.1.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading anyio-3.7.0-py3-none-any.whl (80 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | \rReading package lists... 0%\r\rReading package lists... 0%\r\rReading package lists... 0%\r\rReading package lists... 6%\r\rReading package lists... 6%\r\rReading package lists... 6%\r\rReading package lists... 6%\r\rReading package lists... 50%\r\rReading package lists... 63%\r\rReading package lists... 63%\r\rReading package lists... 64%\r\rReading package lists... 64%\r\rReading package lists... 71%\r\rReading package lists... 71%\r\rReading package lists... 73%\r\rReading package lists... 73%\r\rReading package lists... 79%\r\rReading package lists... 79%\r\rReading package lists... 79%\r\rReading package lists... 79%\r\rReading package lists... 79%\r\rReading package lists... 79%\r\rReading package lists... 79%\r\rReading package lists... 79%\r\rReading package lists... 84%\r\rReading package lists... 84%\r\rReading package lists... 86%\r\rReading package lists... 86%\r\rReading package lists... 88%\r\rReading package lists... 88%\r\rReading package lists... 88%\r\rReading package lists... 88%\r\rReading package lists... 93%\r\rReading package lists... 93%\r\rReading package lists... 97%\r\rReading package lists... 97%\r\rReading package lists... 97%\r\rReading package lists... 97%\r\rReading package lists... 97%\r\rReading package lists... 97%\r\rReading package lists... 97%\r\rReading package lists... 97%\r\rReading package lists... 97%\r\rReading package lists... 97%\r\rReading package lists... 98%\r\rReading package lists... 98%\r\rReading package lists... 98%\r\rReading package lists... 98%\r\rReading package lists... 98%\r\rReading package lists... 98%\r\rReading package lists... 98%\r\rReading package lists... 98%\r\r\rReading package lists... Done\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting overrides\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading overrides-7.3.1-py3-none-any.whl (17 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | \rBuilding dependency tree... 0%\r\rBuilding dependency tree... 0%\r\rBuilding dependency tree... 50%\r\rBuilding dependency tree... 50%\r\rBuilding dependency tree... 56%\r\rBuilding dependency tree        \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting sniffio>=1.1\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading sniffio-1.3.0-py3-none-any.whl (10 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting exceptiongroup\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | \rReading state information... 0%\r\rReading state information... 0%\r\r\rReading state information... Done\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting idna>=2.8\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting platformdirs>=2.5\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | \rReading state information... 0%\r  \rReading state information... 1%\r  \rReading state information... 3%\r  \rReading state information... 5%\r  \rReading state information... 7%\r  \rReading state information... 9%\r  \rReading state information... 11%\r \rReading state information... 13%\r \rReading state information... 15%\r \rReading state information... 17%\r \rReading state information... 19%\r \rReading state information... 21%\r \rReading state information... 23%\r \rReading state information... 25%\r \rReading state information... 27%\r \rReading state information... 29%\r \rReading state information... 31%\r \rReading state information... 33%\r \rReading state information... 35%\r \rReading state information... 37%\r \rReading state information... 39%\r \rReading state information... 41%\r \rReading state information... 43%\r \rReading state information... 45%\r \rReading state information... 47%\r \rReading state information... 49%\r \rReading state information... 51%\r \rReading state information... 53%\r \rReading state information... 55%\r \rReading state information... 57%\r \rReading state information... 59%\r \rReading state information... 61%\r \rReading state information... 63%\r \rReading state information... 65%\r \rReading state information... 67%\r \rReading state information... 69%\r \rReading state information... 71%\r \rReading state information... 73%\r \rReading state information... 75%\r \rReading state information... 77%\r \rReading state information... 79%\r \rReading state information... 81%\r \rReading state information... 83%\r \rReading state information... 85%\r \rReading state information... 87%\r \rReading state information... 89%\r \rReading state information... 91%\r \rReading state information... 93%\r \rReading state information... 95%\r \rReading state information... 97%\r \rReading state information... 99%\r Selecting previously unselected package pandoc.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting rfc3339-validator\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading rfc3339_validator-0.1.4-py2.py3-none-any.whl (3.5 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting rfc3986-validator>=0.1.1\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading rfc3986_validator-0.1.1-py2.py3-none-any.whl (4.2 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | (Reading database ... 193799 files and directories currently installed.)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | Preparing to unpack /tmp/pandoc-2.19.2-1-amd64.deb ...\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting python-json-logger>=2.0.4\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading python_json_logger-2.0.7-py3-none-any.whl (8.1 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | Unpacking pandoc (2.19.2-1) ...\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting jsonschema[format-nongpl]>=3.2.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading jsonschema-4.17.3-py3-none-any.whl (90 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading pyrsistent-0.19.3-py3-none-any.whl (57 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting attrs>=17.4.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting pkgutil-resolve-name>=1.3.10\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading pkgutil_resolve_name-1.3.10-py3-none-any.whl (4.7 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting fqdn\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading fqdn-1.5.1-py3-none-any.whl (9.1 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting webcolors>=1.11\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading webcolors-1.13-py3-none-any.whl (14 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting isoduration\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading isoduration-20.11.0-py3-none-any.whl (11 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting uri-template\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading uri_template-1.3.0-py3-none-any.whl (11 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting jsonpointer>1.13\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading jsonpointer-2.4-py2.py3-none-any.whl (7.8 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting babel>=2.10\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading Babel-2.12.1-py3-none-any.whl (10.1 MB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | Setting up pandoc (2.19.2-1) ...\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | \r\rReading state information... Done\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \u2753  ::endgroup::\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \u2705  Success - Main r-lib/actions/setup-pandoc@v2\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting json5>=0.9.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading json5-0.9.14-py2.py3-none-any.whl (19 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ] \u2b50 Run Main Set up R\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udc33  docker cp src=/tmp/act-cache/ddc28a6b-6249-4322-9b98-b5bc92bf22d6/act/r-lib-actions-setup-r@v2/ dst=/var/run/act/actions/r-lib-actions-setup-r@v2/\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting requests>=2.28\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting tinycss2\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading tinycss2-1.2.1-py3-none-any.whl (21 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting pandocfilters>=1.4.1\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading pandocfilters-1.5.0-py2.py3-none-any.whl (8.7 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting bleach!=5.0.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading bleach-6.0.0-py3-none-any.whl (162 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting jupyterlab-pygments\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading jupyterlab_pygments-0.2.2-py2.py3-none-any.whl (21 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting pygments>=2.4.1\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading Pygments-2.15.1-py3-none-any.whl (1.1 MB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting mistune<4,>=2.0.3\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading mistune-3.0.1-py3-none-any.whl (47 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting defusedxml\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading defusedxml-0.7.1-py2.py3-none-any.whl (25 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting beautifulsoup4\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading beautifulsoup4-4.12.2-py3-none-any.whl (142 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting nbclient>=0.5.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading nbclient-0.8.0-py3-none-any.whl (73 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting webencodings\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting fastjsonschema\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading fastjsonschema-2.17.1-py3-none-any.whl (23 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting certifi>=2017.4.17\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting charset-normalizer<4,>=2\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading charset_normalizer-3.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (195 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting ptyprocess\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting argon2-cffi-bindings\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading argon2_cffi_bindings-21.2.0-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (86 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting cffi>=1.0.1\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading cffi-1.15.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (442 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting pycparser\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting soupsieve>1.2\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading soupsieve-2.4.1-py3-none-any.whl (36 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting comm>=0.1.1\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading comm-0.1.3-py3-none-any.whl (6.6 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting debugpy>=1.6.5\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading debugpy-1.6.7-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.1 MB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting matplotlib-inline>=0.1\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading matplotlib_inline-0.1.6-py3-none-any.whl (9.4 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting nest-asyncio\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading nest_asyncio-1.5.6-py3-none-any.whl (5.2 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting ipython>=7.23.1\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading ipython-8.12.2-py3-none-any.whl (797 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting pickleshare\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading pickleshare-0.7.5-py2.py3-none-any.whl (6.9 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting stack-data\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading stack_data-0.6.2-py3-none-any.whl (24 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting backcall\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading backcall-0.2.0-py2.py3-none-any.whl (11 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting jedi>=0.16\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading jedi-0.18.2-py2.py3-none-any.whl (1.6 MB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting decorator\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading decorator-5.1.1-py3-none-any.whl (9.1 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting pexpect>4.3\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading pexpect-4.8.0-py2.py3-none-any.whl (59 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting prompt-toolkit!=3.0.37,<3.1.0,>=3.0.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading prompt_toolkit-3.0.38-py3-none-any.whl (385 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting parso<0.9.0,>=0.8.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading parso-0.8.3-py2.py3-none-any.whl (100 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting wcwidth\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading wcwidth-0.2.6-py2.py3-none-any.whl (29 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting arrow>=0.15.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading arrow-1.2.3-py3-none-any.whl (66 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting tenacity>=6.2.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading tenacity-8.2.2-py3-none-any.whl (24 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting pluggy<2.0,>=0.12\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting iniconfig\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting pure-eval\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading pure_eval-0.2.2-py3-none-any.whl (11 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting executing>=1.2.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading executing-1.2.0-py2.py3-none-any.whl (24 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Collecting asttokens>=2.1.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Downloading asttokens-2.2.1-py2.py3-none-any.whl (26 kB)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Using legacy 'setup.py install' for pymeeus, since package 'wheel' is not installed.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/r-lib-actions-setup-r@v2/] user=0 workdir=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Installing collected packages: zipp, six, traitlets, python-dateutil, pyrsistent, platformdirs, pkgutil-resolve-name, importlib-resources, attrs, tornado, pyzmq, pycparser, jupyter-core, jsonschema, importlib-metadata, fastjsonschema, arrow, webencodings, webcolors, uri-template, soupsieve, rfc3986-validator, rfc3339-validator, ptyprocess, nbformat, MarkupSafe, jupyter-client, jsonpointer, isoduration, idna, fqdn, cffi, wcwidth, tinycss2, terminado, sniffio, pyyaml, python-json-logger, pygments, pure-eval, parso, pandocfilters, packaging, nbclient, mistune, jupyterlab-pygments, jinja2, executing, exceptiongroup, defusedxml, bleach, beautifulsoup4, asttokens, argon2-cffi-bindings, websocket-client, urllib3, tzdata, typing-extensions, toolz, stack-data, send2trash, pytz, prompt-toolkit, prometheus-client, pickleshare, pexpect, overrides, numpy, nbconvert, matplotlib-inline, locket, jupyter-server-terminals, jupyter-events, jedi, decorator, charset-normalizer, certifi, backcall, argon2-cffi, anyio, tqdm, requests, pyparsing, pymeeus, psutil, pillow, partd, pandas, nest-asyncio, kiwisolver, jupyter-server, json5, ipython, fsspec, fonttools, ephem, debugpy, cycler, contourpy, comm, cloudpickle, click, babel, zict, tomli, tenacity, tblib, sortedcontainers, pluggy, notebook-shim, msgpack, matplotlib, LunarCalendar, jupyterlab-server, jupyter-lsp, ipykernel, iniconfig, holidays, dask, convertdate, cmdstanpy, async-lru, wheel, setuptools, pytest, prophet, plotly, jupyterlab, distributed\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     Running setup.py install for pymeeus: started\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     Running setup.py install for pymeeus: finished with status 'done'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/r-lib-actions-setup-r@v2/setup-r/lib/setup-r.js] user= workdir=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udcac  ::debug::started action\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udcac  ::debug::got version release from input\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udcac  ::debug::isExplicit: 4.3.1\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udcac  ::debug::explicit? true\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/R/4.3.1/x64\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udcac  ::debug::not found\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \u2753  ::group::Downloading R\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udcac  ::debug::Downloading https://cdn.posit.co/r/ubuntu-2004/pkgs/r-4.3.1_1_amd64.deb\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udcac  ::debug::Destination /tmp/ec5fff06-665b-4f8d-b018-59f981916898\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udcac  ::debug::download complete\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \u2753  ::endgroup::\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \u2753  ::group::Updating system package data\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | [command]/usr/bin/sudo DEBIAN_FRONTEND=noninteractive apt-get update -y -qq\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | E: The repository 'https://dl.hhvm.com/ubuntu focal Release' no longer has a Release file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   | W: An error occurred during the signature verification. The repository is not updated and the previous index files will be used. GPG error: http://dl.google.com/linux/chrome/deb stable InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \u2753  ::endgroup::\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udcac  ::debug::Error: The process '/usr/bin/sudo' failed with exit code 100\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udcac  ::debug::Failed to install R: Error: The process '/usr/bin/sudo' failed with exit code 100\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \ud83d\udcac  ::debug::Failed to get R [object Object]: Failed to install R: Error: The process '/usr/bin/sudo' failed with exit code 100\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \u2757  ::error::Failed to get R release: Failed to get R [object Object]: Failed to install R: Error: The process '/usr/bin/sudo' failed with exit code 100\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ]   \u274c  Failure - Main Set up R\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ] exitcode '1': failure\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Attempting uninstall: setuptools\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     Found existing installation: setuptools 56.0.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     Uninstalling setuptools-56.0.0:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |       Successfully uninstalled setuptools-56.0.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |   Running setup.py develop for prophet\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-r     ] \ud83c\udfc1  Job failed\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | Successfully installed LunarCalendar-0.0.9 MarkupSafe-2.1.3 anyio-3.7.0 argon2-cffi-21.3.0 argon2-cffi-bindings-21.2.0 arrow-1.2.3 asttokens-2.2.1 async-lru-2.0.2 attrs-23.1.0 babel-2.12.1 backcall-0.2.0 beautifulsoup4-4.12.2 bleach-6.0.0 certifi-2023.5.7 cffi-1.15.1 charset-normalizer-3.1.0 click-8.1.3 cloudpickle-2.2.1 cmdstanpy-1.1.0 comm-0.1.3 contourpy-1.1.0 convertdate-2.4.0 cycler-0.11.0 dask-2023.5.0 debugpy-1.6.7 decorator-5.1.1 defusedxml-0.7.1 distributed-2023.5.0 ephem-4.1.4 exceptiongroup-1.1.1 executing-1.2.0 fastjsonschema-2.17.1 fonttools-4.40.0 fqdn-1.5.1 fsspec-2023.6.0 holidays-0.27.1 idna-3.4 importlib-metadata-6.7.0 importlib-resources-5.12.0 iniconfig-2.0.0 ipykernel-6.23.3 ipython-8.12.2 isoduration-20.11.0 jedi-0.18.2 jinja2-3.1.2 json5-0.9.14 jsonpointer-2.4 jsonschema-4.17.3 jupyter-client-8.3.0 jupyter-core-5.3.1 jupyter-events-0.6.3 jupyter-lsp-2.2.0 jupyter-server-2.7.0 jupyter-server-terminals-0.4.4 jupyterlab-4.0.2 jupyterlab-pygments-0.2.2 jupyterlab-server-2.23.0 kiwisolver-1.4.4 locket-1.0.0 matplotlib-3.7.1 matplotlib-inline-0.1.6 mistune-3.0.1 msgpack-1.0.5 nbclient-0.8.0 nbconvert-7.6.0 nbformat-5.9.0 nest-asyncio-1.5.6 notebook-shim-0.2.3 numpy-1.24.4 overrides-7.3.1 packaging-23.1 pandas-2.0.2 pandocfilters-1.5.0 parso-0.8.3 partd-1.4.0 pexpect-4.8.0 pickleshare-0.7.5 pillow-9.5.0 pkgutil-resolve-name-1.3.10 platformdirs-3.8.0 plotly-5.15.0 pluggy-1.2.0 prometheus-client-0.17.0 prompt-toolkit-3.0.38 prophet-1.1.4 psutil-5.9.5 ptyprocess-0.7.0 pure-eval-0.2.2 pycparser-2.21 pygments-2.15.1 pymeeus-0.5.12 pyparsing-3.1.0 pyrsistent-0.19.3 pytest-7.4.0 python-dateutil-2.8.2 python-json-logger-2.0.7 pytz-2023.3 pyyaml-6.0 pyzmq-25.1.0 requests-2.31.0 rfc3339-validator-0.1.4 rfc3986-validator-0.1.1 send2trash-1.8.2 setuptools-68.0.0 six-1.16.0 sniffio-1.3.0 sortedcontainers-2.4.0 soupsieve-2.4.1 stack-data-0.6.2 tblib-2.0.0 tenacity-8.2.2 terminado-0.17.1 tinycss2-1.2.1 tomli-2.0.1 toolz-0.12.0 tornado-6.3.2 tqdm-4.65.0 traitlets-5.9.0 typing-extensions-4.6.3 tzdata-2023.3 uri-template-1.3.0 urllib3-2.0.3 wcwidth-0.2.6 webcolors-1.13 webencodings-0.5.1 websocket-client-1.6.1 wheel-0.40.0 zict-3.0.0 zipp-3.15.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.8.11/x64/bin/python -m pip install --upgrade pip' command.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ============================= test session starts ==============================\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | platform linux -- Python 3.8.11, pytest-7.4.0, pluggy-1.2.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | plugins: anyio-3.7.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | collected 69 items\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_diagnostics.py FFFFFFFFFFFFFF..FF                     [ 26%]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py FFsFFsFFFFFFFF.FFFFFFFFF..FFFFFFFFFFFFF.FF [ 86%]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FFFFF                                                                    [ 94%]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_serialize.py FFF                                      [ 98%]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_utilities.py F                                        [100%]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | =================================== FAILURES ===================================\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | __________ TestCrossValidation.test_cross_validation[CMDSTANPY-None] ___________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_diagnostics.TestCrossValidation object at 0x7f73b757a6d0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ts_short =            ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0  2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1  2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2  2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3  2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4  2012-05-24...0-03  21.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 96 2012-10-04  21.95\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 97 2012-10-05  20.91\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 98 2012-10-08  20.40\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 99 2012-10-09  20.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [100 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | parallel_method = None, backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     @pytest.mark.parametrize(\"parallel_method\", PARALLEL_METHODS)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_cross_validation(self, ts_short, parallel_method, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_diagnostics.py:40: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ________ TestCrossValidation.test_cross_validation[CMDSTANPY-processes] ________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_diagnostics.TestCrossValidation object at 0x7f73b757a700>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ts_short =            ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0  2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1  2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2  2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3  2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4  2012-05-24...0-03  21.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 96 2012-10-04  21.95\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 97 2012-10-05  20.91\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 98 2012-10-08  20.40\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 99 2012-10-09  20.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [100 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | parallel_method = 'processes', backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     @pytest.mark.parametrize(\"parallel_method\", PARALLEL_METHODS)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_cross_validation(self, ts_short, parallel_method, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_diagnostics.py:40: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _________ TestCrossValidation.test_cross_validation[CMDSTANPY-threads] _________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_diagnostics.TestCrossValidation object at 0x7f73b757a940>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ts_short =            ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0  2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1  2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2  2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3  2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4  2012-05-24...0-03  21.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 96 2012-10-04  21.95\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 97 2012-10-05  20.91\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 98 2012-10-08  20.40\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 99 2012-10-09  20.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [100 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | parallel_method = 'threads', backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     @pytest.mark.parametrize(\"parallel_method\", PARALLEL_METHODS)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_cross_validation(self, ts_short, parallel_method, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_diagnostics.py:40: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ____ TestCrossValidation.test_cross_validation[CMDSTANPY-parallel_method3] _____\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_diagnostics.TestCrossValidation object at 0x7f73b757ab80>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ts_short =            ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0  2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1  2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2  2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3  2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4  2012-05-24...0-03  21.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 96 2012-10-04  21.95\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 97 2012-10-05  20.91\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 98 2012-10-08  20.40\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 99 2012-10-09  20.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [100 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | parallel_method = <prophet.tests.test_diagnostics.CustomParallelBackend object at 0x7f73bc4069a0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     @pytest.mark.parametrize(\"parallel_method\", PARALLEL_METHODS)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_cross_validation(self, ts_short, parallel_method, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_diagnostics.py:40: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | __________ TestCrossValidation.test_cross_validation[CMDSTANPY-dask] ___________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_diagnostics.TestCrossValidation object at 0x7f73b757aca0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ts_short =            ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0  2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1  2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2  2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3  2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4  2012-05-24...0-03  21.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 96 2012-10-04  21.95\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 97 2012-10-05  20.91\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 98 2012-10-08  20.40\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 99 2012-10-09  20.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [100 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | parallel_method = 'dask', backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     @pytest.mark.parametrize(\"parallel_method\", PARALLEL_METHODS)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_cross_validation(self, ts_short, parallel_method, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_diagnostics.py:40: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ___________ TestCrossValidation.test_bad_parallel_methods[CMDSTANPY] ___________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_diagnostics.TestCrossValidation object at 0x7f73b757adf0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ts_short =            ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0  2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1  2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2  2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3  2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4  2012-05-24...0-03  21.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 96 2012-10-04  21.95\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 97 2012-10-05  20.91\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 98 2012-10-08  20.40\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 99 2012-10-09  20.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [100 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_bad_parallel_methods(self, ts_short, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_diagnostics.py:67: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ TestCrossValidation.test_check_single_cutoff_forecast_func_calls[CMDSTANPY] __\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_diagnostics.TestCrossValidation object at 0x7f73b757afa0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ts_short =            ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0  2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1  2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2  2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3  2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4  2012-05-24...0-03  21.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 96 2012-10-04  21.95\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 97 2012-10-05  20.91\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 98 2012-10-08  20.40\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 99 2012-10-09  20.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [100 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f73b4dfe640>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_check_single_cutoff_forecast_func_calls(self, ts_short, monkeypatch, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_diagnostics.py:77: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ TestCrossValidation.test_cross_validation_logistic_or_flat_growth[CMDSTANPY-logistic] _\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_diagnostics.TestCrossValidation object at 0x7f73b7519250>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | growth = 'logistic'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ts_short =            ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0  2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1  2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2  2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3  2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4  2012-05-24...0-03  21.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 96 2012-10-04  21.95\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 97 2012-10-05  20.91\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 98 2012-10-08  20.40\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 99 2012-10-09  20.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [100 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     @pytest.mark.parametrize(\"growth\", [\"logistic\", \"flat\"])\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_cross_validation_logistic_or_flat_growth(self, growth, ts_short, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         df = ts_short.copy()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if growth == \"logistic\":\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             df[\"cap\"] = 40\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(growth=growth, stan_backend=backend).fit(df)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_diagnostics.py:110: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ TestCrossValidation.test_cross_validation_logistic_or_flat_growth[CMDSTANPY-flat] _\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_diagnostics.TestCrossValidation object at 0x7f73b75192e0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | growth = 'flat'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ts_short =            ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0  2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1  2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2  2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3  2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4  2012-05-24...0-03  21.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 96 2012-10-04  21.95\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 97 2012-10-05  20.91\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 98 2012-10-08  20.40\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 99 2012-10-09  20.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [100 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     @pytest.mark.parametrize(\"growth\", [\"logistic\", \"flat\"])\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_cross_validation_logistic_or_flat_growth(self, growth, ts_short, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         df = ts_short.copy()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if growth == \"logistic\":\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             df[\"cap\"] = 40\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(growth=growth, stan_backend=backend).fit(df)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_diagnostics.py:110: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ____ TestCrossValidation.test_cross_validation_extra_regressors[CMDSTANPY] _____\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_diagnostics.TestCrossValidation object at 0x7f73b75194f0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ts_short =            ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0  2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1  2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2  2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3  2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4  2012-05-24...0-03  21.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 96 2012-10-04  21.95\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 97 2012-10-05  20.91\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 98 2012-10-08  20.40\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 99 2012-10-09  20.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [100 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_cross_validation_extra_regressors(self, ts_short, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         df = ts_short.copy()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         df[\"extra\"] = range(df.shape[0])\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         df[\"is_conditional_week\"] = np.arange(df.shape[0]) // 7 % 2\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_diagnostics.py:123: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ___ TestCrossValidation.test_cross_validation_default_value_check[CMDSTANPY] ___\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_diagnostics.TestCrossValidation object at 0x7f73b75196a0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ts_short =            ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0  2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1  2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2  2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3  2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4  2012-05-24...0-03  21.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 96 2012-10-04  21.95\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 97 2012-10-05  20.91\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 98 2012-10-08  20.40\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 99 2012-10-09  20.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [100 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_cross_validation_default_value_check(self, ts_short, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_diagnostics.py:147: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _____ TestCrossValidation.test_cross_validation_custom_cutoffs[CMDSTANPY] ______\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_diagnostics.TestCrossValidation object at 0x7f73b75198b0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ts_short =            ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0  2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1  2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2  2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3  2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4  2012-05-24...0-03  21.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 96 2012-10-04  21.95\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 97 2012-10-05  20.91\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 98 2012-10-08  20.40\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 99 2012-10-09  20.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [100 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_cross_validation_custom_cutoffs(self, ts_short, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_diagnostics.py:158: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | __ TestCrossValidation.test_cross_validation_uncertainty_disabled[CMDSTANPY] ___\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_diagnostics.TestCrossValidation object at 0x7f73b7519730>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ts_short =            ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0  2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1  2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2  2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3  2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4  2012-05-24...0-03  21.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 96 2012-10-04  21.95\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 97 2012-10-05  20.91\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 98 2012-10-08  20.40\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 99 2012-10-09  20.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [100 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_cross_validation_uncertainty_disabled(self, ts_short, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         df = ts_short.copy()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         for uncertainty in [0, False]:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >           m = Prophet(uncertainty_samples=uncertainty, stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_diagnostics.py:173: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | __________ TestPerformanceMetrics.test_performance_metrics[CMDSTANPY] __________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_diagnostics.TestPerformanceMetrics object at 0x7f73b7519b80>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ts_short =            ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0  2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1  2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2  2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3  2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4  2012-05-24...0-03  21.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 96 2012-10-04  21.95\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 97 2012-10-05  20.91\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 98 2012-10-08  20.40\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 99 2012-10-09  20.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [100 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_performance_metrics(self, ts_short, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_diagnostics.py:186: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _________________ TestProphetCopy.test_prophet_copy[CMDSTANPY] _________________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_diagnostics.TestProphetCopy object at 0x7f73b75290a0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | data =             ds      y    cap  binary_feature\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23  200.0               0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03  200.0...    1\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83  200.0               1\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30  200.0               1\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 4 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_prophet_copy(self, data, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # These values are created except for its default values\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         holiday = pd.DataFrame({\"ds\": pd.to_datetime([\"2016-12-25\"]), \"holiday\": [\"x\"]})\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         products = itertools.product(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             [\"linear\", \"logistic\"],  # growth\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             [None, pd.to_datetime([\"2016-12-25\"])],  # changepoints\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             [3],  # n_changepoints\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             [0.9],  # changepoint_range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             [True, False],  # yearly_seasonality\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             [True, False],  # weekly_seasonality\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             [True, False],  # daily_seasonality\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             [None, holiday],  # holidays\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             [\"additive\", \"multiplicative\"],  # seasonality_mode\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             [1.1],  # seasonality_prior_scale\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             [1.1],  # holidays_prior_scale\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             [0.1],  # changepoint_prior_scale\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             [100],  # mcmc_samples\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             [0.9],  # interval_width\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             [200],  # uncertainty_samples\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # Values should be copied correctly\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         for product in products:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >           m1 = Prophet(*product, stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_diagnostics.py:319: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _____________ TestProphetCopy.test_prophet_copy_custom[CMDSTANPY] ______________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_diagnostics.TestProphetCopy object at 0x7f73b7519ca0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | data =             ds      y    cap  binary_feature\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23  200.0               0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03  200.0...    1\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83  200.0               1\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30  200.0               1\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 4 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_prophet_copy_custom(self, data, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         changepoints = pd.date_range(\"2012-06-15\", \"2012-09-15\")\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cutoff = pd.Timestamp(\"2012-07-25\")\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m1 = Prophet(changepoints=changepoints, stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_diagnostics.py:353: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ___________ TestProphetFitPredictDefault.test_fit_predict[CMDSTANPY] ___________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetFitPredictDefault object at 0x7f73b4f999a0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_fit_predict(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         test_days = 30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         train, test = train_test_split(daily_univariate_ts, test_days)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       forecaster = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:28: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _______ TestProphetFitPredictDefault.test_fit_predict_newton[CMDSTANPY] ________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetFitPredictDefault object at 0x7f73b4f99a90>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_fit_predict_newton(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         test_days = 30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         train, test = train_test_split(daily_univariate_ts, test_days)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       forecaster = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:40: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _____ TestProphetFitPredictDefault.test_fit_predict_no_seasons[CMDSTANPY] ______\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetFitPredictDefault object at 0x7f73b4f99d60>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_fit_predict_no_seasons(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         test_days = 30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         train, _ = train_test_split(daily_univariate_ts, test_days)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       forecaster = Prophet(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             weekly_seasonality=False, yearly_seasonality=False, stan_backend=backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:66: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ___ TestProphetFitPredictDefault.test_fit_predict_no_changepoints[CMDSTANPY] ___\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetFitPredictDefault object at 0x7f73b7529160>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_fit_predict_no_changepoints(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         test_days = daily_univariate_ts.shape[0] // 2\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         train, future = train_test_split(daily_univariate_ts, test_days)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       forecaster = Prophet(n_changepoints=0, stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:77: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ TestProphetFitPredictDefault.test_fit_changepoint_not_in_history[CMDSTANPY] __\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetFitPredictDefault object at 0x7f73b75293a0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_fit_changepoint_not_in_history(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         train = daily_univariate_ts[\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             (daily_univariate_ts[\"ds\"] < \"2013-01-01\") | (daily_univariate_ts[\"ds\"] > \"2014-01-01\")\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         ]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         future = pd.DataFrame({\"ds\": daily_univariate_ts[\"ds\"]})\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       prophet = Prophet(changepoints=[\"2013-06-06\"], stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:98: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _____ TestProphetFitPredictDefault.test_fit_predict_duplicates[CMDSTANPY] ______\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetFitPredictDefault object at 0x7f73b7529700>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_fit_predict_duplicates(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         The underlying model should still fit successfully when there are duplicate dates in the history.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         The model essentially sees this as multiple observations for the same time value, and fits the parameters\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         accordingly.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         train, test = train_test_split(daily_univariate_ts, daily_univariate_ts.shape[0] // 2)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         repeated_obs = train.copy()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         repeated_obs[\"y\"] += 10\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         train = pd.concat([train, repeated_obs])\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       forecaster = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:115: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | __ TestProphetFitPredictDefault.test_fit_predict_constant_history[CMDSTANPY] ___\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetFitPredictDefault object at 0x7f73b75292b0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_fit_predict_constant_history(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         When the training data history is constant, Prophet should predict the same value for all future dates.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         for constant in [0, 20]:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             train, test = train_test_split(daily_univariate_ts, daily_univariate_ts.shape[0] // 2)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             train[\"y\"] = constant\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >           forecaster = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:126: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ TestProphetFitPredictDefault.test_fit_predict_uncertainty_disabled[CMDSTANPY] _\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetFitPredictDefault object at 0x7f73b7529a60>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_fit_predict_uncertainty_disabled(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         test_days = daily_univariate_ts.shape[0] // 2\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         train, future = train_test_split(daily_univariate_ts, test_days)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         for uncertainty in [0, False]:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >           forecaster = Prophet(uncertainty_samples=uncertainty, stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:135: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _____________ TestProphetDataPrep.test_setup_dataframe[CMDSTANPY] ______________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetDataPrep object at 0x7f73b7529fa0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_setup_dataframe(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"Test that the columns 't' and 'y_scaled' are added to the dataframe.\"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         train, _ = train_test_split(daily_univariate_ts, daily_univariate_ts.shape[0] // 2)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:153: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ________ TestProphetDataPrep.test_setup_dataframe_ds_column[CMDSTANPY] _________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetDataPrep object at 0x7f73b7529d60>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_setup_dataframe_ds_column(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"Test case where 'ds' exists as an index name and column. Prophet should use the column.\"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         train, _ = train_test_split(daily_univariate_ts, daily_univariate_ts.shape[0] // 2)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         train.index = pd.to_datetime([\"1970-01-01\" for _ in range(train.shape[0])])\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         train.index.rename(\"ds\", inplace=True)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:168: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ______________ TestProphetDataPrep.test_logistic_floor[CMDSTANPY] ______________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetDataPrep object at 0x7f73b75294c0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_logistic_floor(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"Test the scaling of y with logistic growth and a floor/cap.\"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         train, _ = train_test_split(daily_univariate_ts, daily_univariate_ts.shape[0] // 2)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         train[\"floor\"] = 10.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         train[\"cap\"] = 80.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(growth=\"logistic\", stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:177: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | __________ TestProphetDataPrep.test_make_future_dataframe[CMDSTANPY] ___________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetDataPrep object at 0x7f73b4f99af0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_make_future_dataframe(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         train = daily_univariate_ts.head(468 // 2)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       forecaster = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:190: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ____________ TestProphetTrendComponent.test_growth_init[CMDSTANPY] _____________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetTrendComponent object at 0x7f73b752f2b0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_growth_init(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       model = Prophet(growth=\"logistic\", stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:210: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ____________ TestProphetTrendComponent.test_flat_growth[CMDSTANPY] _____________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetTrendComponent object at 0x7f73b752f520>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_flat_growth(self, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(growth=\"flat\", stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:229: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | __________ TestProphetTrendComponent.test_piecewise_linear[CMDSTANPY] __________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetTrendComponent object at 0x7f73b752f610>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_piecewise_linear(self, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       model = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:247: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _________ TestProphetTrendComponent.test_piecewise_logistic[CMDSTANPY] _________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetTrendComponent object at 0x7f73b752f7f0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_piecewise_logistic(self, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       model = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:265: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _____________ TestProphetTrendComponent.test_flat_trend[CMDSTANPY] _____________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetTrendComponent object at 0x7f73b752f910>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_flat_trend(self, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       model = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:298: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | __________ TestProphetTrendComponent.test_get_changepoints[CMDSTANPY] __________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetTrendComponent object at 0x7f73b752fb20>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_get_changepoints(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         By default, Prophet uses the first 80% of the history to detect changepoints.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         train, _ = train_test_split(daily_univariate_ts, daily_univariate_ts.shape[0] // 2)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:314: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _______ TestProphetTrendComponent.test_set_changepoint_range[CMDSTANPY] ________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetTrendComponent object at 0x7f73b752fdf0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_set_changepoint_range(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         train, _ = train_test_split(daily_univariate_ts, daily_univariate_ts.shape[0] // 2)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(changepoint_range=0.4, stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:327: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _______ TestProphetTrendComponent.test_get_zero_changepoints[CMDSTANPY] ________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetTrendComponent object at 0x7f73b752ff70>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_get_zero_changepoints(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         train, _ = train_test_split(daily_univariate_ts, daily_univariate_ts.shape[0] // 2)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(n_changepoints=0, stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:343: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ______ TestProphetTrendComponent.test_override_n_changepoints[CMDSTANPY] _______\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetTrendComponent object at 0x7f73b752fd60>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_override_n_changepoints(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         train = daily_univariate_ts.head(20).copy()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(n_changepoints=15, stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:353: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _____ TestProphetSeasonalComponent.test_auto_weekly_seasonality[CMDSTANPY] _____\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetSeasonalComponent object at 0x7f73b75464c0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_auto_weekly_seasonality(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # Should be enabled\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         train = daily_univariate_ts.head(15)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:380: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _____ TestProphetSeasonalComponent.test_auto_yearly_seasonality[CMDSTANPY] _____\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetSeasonalComponent object at 0x7f73b752f6d0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_auto_yearly_seasonality(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # Should be enabled\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:416: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _____ TestProphetSeasonalComponent.test_auto_daily_seasonality[CMDSTANPY] ______\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetSeasonalComponent object at 0x7f73b4f99b20>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | subdaily_univariate_ts =                      ds    y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2017-01-01 00:05:00  0.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2017-01-01 00:10:00  0.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2017-01-01 00:15:00  0.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3 ...:00 -2.5\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 860 2017-01-03 23:45:00 -2.4\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 861 2017-01-03 23:50:00 -2.4\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 862 2017-01-03 23:55:00 -2.4\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [863 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_auto_daily_seasonality(self, daily_univariate_ts, subdaily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # Should be enabled\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:447: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ______ TestProphetSeasonalComponent.test_set_seasonality_mode[CMDSTANPY] _______\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetSeasonalComponent object at 0x7f73b7546d90>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_set_seasonality_mode(self, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # Setting attribute\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:481: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ________ TestProphetSeasonalComponent.test_seasonality_modes[CMDSTANPY] ________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetSeasonalComponent object at 0x7f73b7546400>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_seasonality_modes(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # Model with holidays, seasonalities, and extra regressors\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         holidays = pd.DataFrame(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"ds\": pd.to_datetime([\"2016-12-25\"]),\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"holiday\": [\"xmas\"],\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"lower_window\": [-1],\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"upper_window\": [0],\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(seasonality_mode=\"multiplicative\", holidays=holidays, stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:498: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ TestProphetCustomSeasonalComponent.test_custom_monthly_seasonality[CMDSTANPY] _\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetCustomSeasonalComponent object at 0x7f73b7546580>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_custom_monthly_seasonality(self, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:531: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ TestProphetCustomSeasonalComponent.test_duplicate_component_names[CMDSTANPY] _\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetCustomSeasonalComponent object at 0x7f73b7546820>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_duplicate_component_names(self, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         holidays = pd.DataFrame(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"ds\": pd.to_datetime([\"2017-01-02\"]),\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"holiday\": [\"special_day\"],\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"prior_scale\": [4.0],\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(holidays=holidays, stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:549: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ___ TestProphetCustomSeasonalComponent.test_custom_fourier_order[CMDSTANPY] ____\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetCustomSeasonalComponent object at 0x7f73b4f993d0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_custom_fourier_order(self, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"Fourier order cannot be <= 0\"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:559: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _______ TestProphetCustomSeasonalComponent.test_custom_priors[CMDSTANPY] _______\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetCustomSeasonalComponent object at 0x7f73b75469d0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_custom_priors(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         holidays = pd.DataFrame(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"ds\": pd.to_datetime([\"2017-01-02\"]),\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"holiday\": [\"special_day\"],\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"prior_scale\": [4.0],\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             holidays=holidays,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             yearly_seasonality=False,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             seasonality_mode=\"multiplicative\",\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stan_backend=backend,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:573: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ TestProphetCustomSeasonalComponent.test_conditional_custom_seasonality[CMDSTANPY] _\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetCustomSeasonalComponent object at 0x7f73b7546af0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_conditional_custom_seasonality(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(weekly_seasonality=False, yearly_seasonality=False, stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:605: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | __________ TestProphetHolidays.test_holidays_lower_window[CMDSTANPY] ___________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetHolidays object at 0x7f73b75469a0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_holidays_lower_window(self, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         holidays = pd.DataFrame(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"ds\": pd.to_datetime([\"2016-12-25\"]),\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"holiday\": [\"xmas\"],\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"lower_window\": [-1],\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"upper_window\": [0],\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       model = Prophet(holidays=holidays, stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:655: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | __________ TestProphetHolidays.test_holidays_upper_window[CMDSTANPY] ___________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetHolidays object at 0x7f73b7546e80>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_holidays_upper_window(self, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         holidays = pd.DataFrame(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"ds\": pd.to_datetime([\"2016-12-25\"]),\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"holiday\": [\"xmas\"],\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"lower_window\": [-1],\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"upper_window\": [10],\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(holidays=holidays, stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:672: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _____________ TestProphetHolidays.test_holidays_priors[CMDSTANPY] ______________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetHolidays object at 0x7f73b7628400>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_holidays_priors(self, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # Check prior specifications\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         holidays = pd.DataFrame(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"ds\": pd.to_datetime([\"2016-12-25\", \"2017-12-25\"]),\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"holiday\": [\"xmas\", \"xmas\"],\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"lower_window\": [-1, -1],\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"upper_window\": [0, 0],\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"prior_scale\": [5.0, 5.0],\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(holidays=holidays, stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:691: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ____________ TestProphetHolidays.test_fit_with_holidays[CMDSTANPY] _____________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetHolidays object at 0x7f73b7549430>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_fit_with_holidays(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         holidays = pd.DataFrame(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"ds\": pd.to_datetime([\"2012-06-06\", \"2013-06-06\"]),\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"holiday\": [\"seans-bday\"] * 2,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"lower_window\": [0] * 2,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"upper_window\": [1] * 2,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       model = Prophet(holidays=holidays, uncertainty_samples=0, stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:751: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ____ TestProphetHolidays.test_fit_predict_with_country_holidays[CMDSTANPY] _____\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetHolidays object at 0x7f73b4fdca00>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_fit_predict_with_country_holidays(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         holidays = pd.DataFrame(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"ds\": pd.to_datetime([\"2012-06-06\", \"2013-06-06\"]),\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"holiday\": [\"seans-bday\"] * 2,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"lower_window\": [0] * 2,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"upper_window\": [1] * 2,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # Test with holidays and country_holidays\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       model = Prophet(holidays=holidays, uncertainty_samples=0, stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:764: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ____________ TestProphetHolidays.test_subdaily_holidays[CMDSTANPY] _____________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetHolidays object at 0x7f73b7546fa0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | subdaily_univariate_ts =                      ds    y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2017-01-01 00:05:00  0.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2017-01-01 00:10:00  0.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2017-01-01 00:15:00  0.0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3 ...:00 -2.5\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 860 2017-01-03 23:45:00 -2.4\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 861 2017-01-03 23:50:00 -2.4\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 862 2017-01-03 23:55:00 -2.4\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [863 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_subdaily_holidays(self, subdaily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         holidays = pd.DataFrame(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"ds\": pd.to_datetime([\"2017-01-02\"]),\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"holiday\": [\"special_day\"],\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(holidays=holidays, stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:788: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ____________ TestProphetRegressors.test_added_regressors[CMDSTANPY] ____________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetRegressors object at 0x7f73b7529fd0>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_added_regressors(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:796: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ___________ TestProphetRegressors.test_constant_regressor[CMDSTANPY] ___________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetRegressors object at 0x7f73b4fdcb20>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_constant_regressor(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         df = daily_univariate_ts.copy()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         df[\"constant_feature\"] = 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:876: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _____________ TestProphetWarmStart.test_fit_warm_start[CMDSTANPY] ______________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetWarmStart object at 0x7f73b4fdcd00>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_fit_warm_start(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend).fit(daily_univariate_ts.iloc[:500])\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:884: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ___________ TestProphetWarmStart.test_sampling_warm_start[CMDSTANPY] ___________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_prophet.TestProphetWarmStart object at 0x7f73b4fdc760>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_sampling_warm_start(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(mcmc_samples=100, stan_backend=backend).fit(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             daily_univariate_ts.iloc[:500], show_progress=False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_prophet.py:891: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | ________________ TestSerialize.test_simple_serialize[CMDSTANPY] ________________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_serialize.TestSerialize object at 0x7f73b7519a00>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_simple_serialize(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_serialize.py:19: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _________________ TestSerialize.test_full_serialize[CMDSTANPY] _________________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_serialize.TestSerialize object at 0x7f73b7529b80>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_full_serialize(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # Construct a model with all attributes\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         holidays = pd.DataFrame(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"ds\": pd.to_datetime([\"2012-06-06\", \"2013-06-06\"]),\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"holiday\": [\"seans-bday\"] * 2,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"lower_window\": [0] * 2,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 \"upper_window\": [1] * 2,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # Test with holidays and country_holidays\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             holidays=holidays,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             seasonality_mode=\"multiplicative\",\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             changepoints=[\"2012-07-01\", \"2012-10-01\", \"2013-01-01\"],\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stan_backend=backend,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_serialize.py:68: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | __________________ TestSerialize.test_backwards_compatibility __________________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_serialize.TestSerialize object at 0x7f73b7529b50>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_backwards_compatibility(self):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         old_versions = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             \"0.6.1.dev0\": (29.3669923968994, \"fb\"),\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             \"0.7.1\": (29.282810844704414, \"fb\"),\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             \"1.0.1\": (29.282810844704414, \"\"),\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         for v, (pred_val, v_str) in old_versions.items():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             fname = Path(__file__).parent / f\"serialized_model_v{v}.json\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(fname, \"r\") as fin:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 model_str = json.load(fin)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # Check that deserializes\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >           m = model_from_json(model_str)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_serialize.py:137: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/serialize.py:206: in model_from_json\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return model_from_dict(model_dict)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/serialize.py:145: in model_from_dict\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     model = Prophet()  # We will overwrite all attributes set in init anyway\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.forecaster.Prophet object at 0x7f73b731c850>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | stan_backend = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def _load_stan_backend(self, stan_backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_backend is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             for i in StanBackendEnum:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     logger.debug(\"Trying to load backend: %s\", i.name)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     return self._load_stan_backend(i.name)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except Exception as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     logger.debug(\"Unable to load backend %s (%s), trying the next one\", i.name, e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       logger.debug(\"Loaded stan backend: %s\", self.stan_backend.get_type())\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E       AttributeError: 'Prophet' object has no attribute 'stan_backend'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:156: AttributeError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _____________ TestUtilities.test_regressor_coefficients[CMDSTANPY] _____________\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = <prophet.tests.test_utilities.TestUtilities object at 0x7f73b732d940>\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | daily_univariate_ts =             ds      y\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 0   2012-05-18  38.23\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 1   2012-05-21  34.03\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 2   2012-05-22  31.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 3   2012-05-23  32.00\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 4   2012...  61.35\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 506 2014-05-27  63.48\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 507 2014-05-28  63.51\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 508 2014-05-29  63.83\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | 509 2014-05-30  63.30\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | [510 rows x 2 columns]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | backend = 'CMDSTANPY'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def test_regressor_coefficients(self, daily_univariate_ts, backend):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >       m = Prophet(stan_backend=backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/tests/test_utilities.py:14: \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:143: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self._load_stan_backend(stan_backend)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/forecaster.py:154: in _load_stan_backend\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.stan_backend = StanBackendEnum.get_backend_class(stan_backend)()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:64: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     super().__init__()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:22: in __init__\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     self.model = self.load_model()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | prophet/models.py:73: in load_model\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     return cmdstanpy.CmdStanModel(exe_file=str(model_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | self = CmdStanModel: name=\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t stan_file=None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t exe_file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \t compiler_options=stanc_options={}, cpp_options={}\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | model_name = None, stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | exe_file = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | compile = True, stanc_options = None, cpp_options = None, user_header = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     def __init__(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         model_name: Optional[str] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stan_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         exe_file: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         # TODO should be Literal['force'] not str\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         compile: Union[bool, str] = True,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         stanc_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         cpp_options: Optional[Dict[str, Any]] = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         user_header: OptionalPath = None,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     ) -> None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         Initialize object given constructor args.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param model_name: Model name, used for output file names.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stan_file: Path to Stan program file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param exe_file: Path to compiled executable file.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param compile: Whether or not to compile the model.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param stanc_options: Options for stanc compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param cpp_options: Options for C++ compiler.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         :param user_header: A path to a header file to include during C++\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             compilation.\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         \"\"\"\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._name = ''\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._stan_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._exe_file = None\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options = CompilerOptions(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             stanc_options=stanc_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             cpp_options=cpp_options,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             user_header=user_header,\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._fixed_param = False\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if model_name is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not model_name.strip():\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Invalid value for argument model name, found \"{}\"'.format(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         model_name\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._name = model_name.strip()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         self._compiler_options.validate()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if stan_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if exe_file is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'Missing model file arguments, you must specify '\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'either Stan source or executable program file or both.'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._stan_file = os.path.realpath(os.path.expanduser(stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._stan_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError('no such file {}'.format(self._stan_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             _, filename = os.path.split(stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if len(filename) < 6 or not filename.endswith('.stan'):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 raise ValueError(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     'invalid stan filename {}'.format(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 )\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not self._name:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 self._name, _ = os.path.splitext(filename)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # if program has include directives, record path\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             with open(self._stan_file, 'r') as fd:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 program = fd.read()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if '#include' in program:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 path, _ = os.path.split(self._stan_file)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 if self._compiler_options._stanc_options is None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options._stanc_options = {\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         'include-paths': [path]\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     }\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 else:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     self._compiler_options.add_include_path(path)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             # try to detect models w/out parameters, needed for sampler\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not cmdstan_version_before(\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 2, 27\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             ):  # unknown end of version range\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 try:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     model_info = self.src_info()\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if 'parameters' in model_info:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         self._fixed_param |= len(model_info['parameters']) == 0\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                 except ValueError as e:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     if compile:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                         raise\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |                     get_logger().debug(e)\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |     \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |         if exe_file is not None:\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             self._exe_file = os.path.realpath(os.path.expanduser(exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   |             if not os.path.exists(self._exe_file):\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | >               raise ValueError('no such file {}'.format(self._exe_file))\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | E               ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | \n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/cmdstanpy/model.py:202: ValueError\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/report.xml -\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | =========================== short test summary info ============================\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_diagnostics.py::TestCrossValidation::test_cross_validation[CMDSTANPY-None] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_diagnostics.py::TestCrossValidation::test_cross_validation[CMDSTANPY-processes] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_diagnostics.py::TestCrossValidation::test_cross_validation[CMDSTANPY-threads] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_diagnostics.py::TestCrossValidation::test_cross_validation[CMDSTANPY-parallel_method3] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_diagnostics.py::TestCrossValidation::test_cross_validation[CMDSTANPY-dask] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_diagnostics.py::TestCrossValidation::test_bad_parallel_methods[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_diagnostics.py::TestCrossValidation::test_check_single_cutoff_forecast_func_calls[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_diagnostics.py::TestCrossValidation::test_cross_validation_logistic_or_flat_growth[CMDSTANPY-logistic] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_diagnostics.py::TestCrossValidation::test_cross_validation_logistic_or_flat_growth[CMDSTANPY-flat] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_diagnostics.py::TestCrossValidation::test_cross_validation_extra_regressors[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_diagnostics.py::TestCrossValidation::test_cross_validation_default_value_check[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_diagnostics.py::TestCrossValidation::test_cross_validation_custom_cutoffs[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_diagnostics.py::TestCrossValidation::test_cross_validation_uncertainty_disabled[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_diagnostics.py::TestPerformanceMetrics::test_performance_metrics[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_diagnostics.py::TestProphetCopy::test_prophet_copy[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_diagnostics.py::TestProphetCopy::test_prophet_copy_custom[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetFitPredictDefault::test_fit_predict[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetFitPredictDefault::test_fit_predict_newton[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetFitPredictDefault::test_fit_predict_no_seasons[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetFitPredictDefault::test_fit_predict_no_changepoints[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetFitPredictDefault::test_fit_changepoint_not_in_history[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetFitPredictDefault::test_fit_predict_duplicates[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetFitPredictDefault::test_fit_predict_constant_history[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetFitPredictDefault::test_fit_predict_uncertainty_disabled[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetDataPrep::test_setup_dataframe[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetDataPrep::test_setup_dataframe_ds_column[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetDataPrep::test_logistic_floor[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetDataPrep::test_make_future_dataframe[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetTrendComponent::test_growth_init[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetTrendComponent::test_flat_growth[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetTrendComponent::test_piecewise_linear[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetTrendComponent::test_piecewise_logistic[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetTrendComponent::test_flat_trend[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetTrendComponent::test_get_changepoints[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetTrendComponent::test_set_changepoint_range[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetTrendComponent::test_get_zero_changepoints[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetTrendComponent::test_override_n_changepoints[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetSeasonalComponent::test_auto_weekly_seasonality[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetSeasonalComponent::test_auto_yearly_seasonality[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetSeasonalComponent::test_auto_daily_seasonality[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetSeasonalComponent::test_set_seasonality_mode[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetSeasonalComponent::test_seasonality_modes[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetCustomSeasonalComponent::test_custom_monthly_seasonality[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetCustomSeasonalComponent::test_duplicate_component_names[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetCustomSeasonalComponent::test_custom_fourier_order[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetCustomSeasonalComponent::test_custom_priors[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetCustomSeasonalComponent::test_conditional_custom_seasonality[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetHolidays::test_holidays_lower_window[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetHolidays::test_holidays_upper_window[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetHolidays::test_holidays_priors[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetHolidays::test_fit_with_holidays[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetHolidays::test_fit_predict_with_country_holidays[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetHolidays::test_subdaily_holidays[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetRegressors::test_added_regressors[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetRegressors::test_constant_regressor[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetWarmStart::test_fit_warm_start[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_prophet.py::TestProphetWarmStart::test_sampling_warm_start[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_serialize.py::TestSerialize::test_simple_serialize[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_serialize.py::TestSerialize::test_full_serialize[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_serialize.py::TestSerialize::test_backwards_compatibility - AttributeError: 'Prophet' object has no attribute 'stan_backend'\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | FAILED prophet/tests/test_utilities.py::TestUtilities::test_regressor_coefficients[CMDSTANPY] - ValueError: no such file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/python/prophet/stan_model/prophet_model.bin\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   | =================== 61 failed, 6 passed, 2 skipped in 14.10s ===================\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python]   \u274c  Failure - Main Install and test\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python] exitcode '1': failure\n[78e8296b-f9f0-4671-ba24-17e8bf8d8163/build-and-test-python] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'build-and-test-r' failed\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/facebook-prophet/.github/workflows/build-and-test-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 441.47365522384644
    }
}