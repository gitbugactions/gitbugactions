{
    "repository": "luqasz/librouteros",
    "stars": 188,
    "language": "python",
    "size": 615,
    "clone_url": "https://github.com/luqasz/librouteros.git",
    "timestamp": "2023-06-28T10:05:56.331118Z",
    "clone_success": true,
    "number_of_actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [],
        "stdout": "[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check] \ud83d\ude80  Start image=lukaszkostka/librouteros:3.7\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   \ud83d\udc33  docker pull image=lukaszkostka/librouteros:3.7 platform= username= forcePull=false\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   \ud83d\udc33  docker create image=lukaszkostka/librouteros:3.7 platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   \ud83d\udc33  docker run image=lukaszkostka/librouteros:3.7 platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check] \u2b50 Run Pre Install Poetry\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   \u2705  Success - Pre Install Poetry\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check] \ud83e\uddea  Matrix: map[python-version:3.7]\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check] \u2b50 Run Main Checkout\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   \u2705  Success - Main Checkout\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check] \u2b50 Run Main Move images\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   \ud83d\udc33  docker exec cmd=[sh -e /var/run/act/workflow/1.sh] user= workdir=\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   \u2705  Success - Main Move images\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check] \u2b50 Run Main Install Poetry\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   \ud83d\udc33  docker cp src=/tmp/act-cache/890a2998-cec5-4264-bbd1-2a590ddd09ff/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check] \u2b50 Run Main Install and configure Poetry\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \u001b[33mSetting Poetry installation path as /root/.local\u001b[0m\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | Retrieving Poetry metadata\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | # Welcome to Poetry!\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | This will download and install the latest version of Poetry,\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | a dependency and package manager for Python.\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | /root/.local/bin\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | You can uninstall at any time by executing this script with the --uninstall option,\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | and these changes will be reverted.\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | Installing Poetry (1.5.1)\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | Installing Poetry (1.5.1): Creating environment\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | Installing Poetry (1.5.1): Installing Poetry\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | Installing Poetry (1.5.1): Creating script\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | Installing Poetry (1.5.1): Done\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | Poetry (1.5.1) is installed now. Great!\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | To get started you need Poetry's bin directory (/root/.local/bin) in your `PATH`\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | environment variable.\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | Add `export PATH=\"/root/.local/bin:$PATH\"` to your shell configuration file.\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | Alternatively, you can call Poetry explicitly with `/root/.local/bin/poetry`.\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | You can test that everything is set up by executing:\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | `poetry --version`\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \u001b[33mDone \u2705\u001b[0m\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   \u2705  Success - Main Install and configure Poetry\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   \u2699  ::add-path:: /root/.local/bin\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   \u2705  Success - Main Install Poetry\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   \u2699  ::add-path:: /root/.local/bin\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check] \u2b50 Run Main Load cache\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   \ud83d\udc33  docker cp src=/tmp/act-cache/890a2998-cec5-4264-bbd1-2a590ddd09ff/act/actions-cache@v3/ dst=/var/run/act/actions/actions-cache@v3/\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/restore/index.js] user= workdir=\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   | OCI runtime exec failed: exec failed: unable to start container process: exec: \"node\": executable file not found in $PATH: unknown\r\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   \u274c  Failure - Main Load cache\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check] exitcode '126': failure\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check] \u2b50 Run Post Install Poetry\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   \ud83d\udc33  docker cp src=/tmp/act-cache/890a2998-cec5-4264-bbd1-2a590ddd09ff/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check]   \u2705  Success - Post Install Poetry\n[0cb01fca-623a-4418-81bd-9776d595f3e5/Test, lint, format check] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'Test, lint, format check' failed\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/luqasz-librouteros/.github/workflows/test-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 82.2850022315979
    }
}