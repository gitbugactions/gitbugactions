{
    "repository": "google/fiddle",
    "stars": 271,
    "language": "python",
    "size": 1279,
    "clone_url": "https://github.com/google/fiddle.git",
    "timestamp": "2023-06-28T18:00:37.082035Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_accessing_functions_on_config",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_assign",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_assign_wrong_argument",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_build_error_path",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_build_inside_build",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_build_nested_structure",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_build_raises_exception_on_call",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_build_raises_nice_error_too_few_args",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_build_reraises_nice_error_multiple_tags",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_build_reraises_nice_error_with_tag_information",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_buildable_subclass",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_cast0",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_cast1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_cast2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_cast3",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_cast4",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_cast5",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_cast6",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_cast7",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_cast8",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_clear_tags",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_config_defaults_not_materialized",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_config_for_classes",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_config_for_dicts",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_config_for_fn_with_special_arg_names",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Enable this after dropping pyhon 3.7 support",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_config_for_functions",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_config_for_functions_with_var_args",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_config_for_functions_with_var_args_and_kwargs",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_config_for_functions_with_var_kwargs",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_config_with_default_args",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_config_with_non_comparable_values",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_convert_partial",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_convert_partial_nested",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_copy_constructor_errors",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_copy_constructor_with_updates_errors",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_copy_with",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_custom_location_history_tracking",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_dataclass_default_factory",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_deep_copy",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_deep_copy_no_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_deep_copy_partials",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_deep_copy_preserves_instance_sharing",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_default_value_equality",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_default_value_for_generic_classes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_dir_cls",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_dir_simple",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_dir_var_args_and_kwargs",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_equality_arguments",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_equality_arguments_nested",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_equality_buildable_type_mismatch",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_equality_classmethods",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_equality_fn_or_cls_mismatch",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_flatten_unflatten_histories",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_flatten_unflatten_tags",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_history_tracking",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_instance_sharing",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_instance_sharing_collections",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_multithreaded_build",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_nested_configs",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_nonexistent_attribute_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_nonexistent_parameter_error",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_nonexistent_var_args_parameter_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_partial_for_classes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_partial_for_functions",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_pickling_composition",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_pickling_config",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_pickling_non_serializable_default",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_pickling_partial",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_repr_class_config",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_repr_class_partial",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_repr_class_tags",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_repr_fn_config",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_repr_fn_partial",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_repr_nested_indentation",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_repr_varkwargs",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_set_tags",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_setting_tagged_values_with_daglish_traversal",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_shallow_copy",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_tag_annotations",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_tagging",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_tags_flattening_and_unflattening",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_typed_config",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_typed_partial",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_unhashable",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_unsetting_argument",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_unsupported_var_args_error",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_untyped_config",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle.config_test.ConfigTest",
                "name": "test_untyped_partial",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.ArgFactoryPartialTest",
                "name": "test_arg_factories_must_be_callable_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.ArgFactoryPartialTest",
                "name": "test_arg_factory_partial_wrap_functools_partial",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.ArgFactoryPartialTest",
                "name": "test_customized_dataclass_default_factory",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.ArgFactoryPartialTest",
                "name": "test_factory_is_not_run_when_overridden",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.ArgFactoryPartialTest",
                "name": "test_factory_keyword_arg",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.ArgFactoryPartialTest",
                "name": "test_factory_positional_arg",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.ArgFactoryPartialTest",
                "name": "test_functools_partial_wrap_arg_factory_partial",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.ArgFactoryPartialTest",
                "name": "test_is_a_factory_partial",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.ArgFactoryPartialTest",
                "name": "test_itertools_count_factory",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.ArgFactoryPartialTest",
                "name": "test_list_factory",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.ArgFactoryPartialTest",
                "name": "test_multiple_factories",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.ArgFactoryPartialTest",
                "name": "test_param_named_func",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.ArgFactoryPartialTest",
                "name": "test_param_named_self",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Enable this after dropping pyhon 3.7 support",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.ArgFactoryPartialTest",
                "name": "test_partial_cant_bind_positional_only_params_as_keywords",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.ArgFactoryPartialTest",
                "name": "test_partial_func_signature0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.ArgFactoryPartialTest",
                "name": "test_partial_func_signature1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.ArgFactoryPartialTest",
                "name": "test_partialmethod",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.ArgFactoryPartialTest",
                "name": "test_positional_only_args",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Enable this after dropping pyhon 3.7 support",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.ArgFactoryPartialTest",
                "name": "test_reused_factory",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.DefaultFactoryTest",
                "name": "test_arg_factory_copy_and_deepcopy",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.DefaultFactoryTest",
                "name": "test_arg_factory_equal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.DefaultFactoryTest",
                "name": "test_arg_factory_type_override",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.DefaultFactoryTest",
                "name": "test_customized_dataclass_default_factory",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.DefaultFactoryTest",
                "name": "test_default_factory_type_override",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.DefaultFactoryTest",
                "name": "test_default_for_keyword_only_param",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.DefaultFactoryTest",
                "name": "test_default_for_positional_only_param",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.DefaultFactoryTest",
                "name": "test_factory_arg",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.DefaultFactoryTest",
                "name": "test_factory_is_not_run_when_overridden",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.DefaultFactoryTest",
                "name": "test_factory_kwarg",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.DefaultFactoryTest",
                "name": "test_itertools_count_factory",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.DefaultFactoryTest",
                "name": "test_list_factory",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.DefaultFactoryTest",
                "name": "test_missing_decorator_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.DefaultFactoryTest",
                "name": "test_multiple_factories",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.DefaultFactoryTest",
                "name": "test_partialmethod",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.DefaultFactoryTest",
                "name": "test_posonly",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.DefaultFactoryTest",
                "name": "test_reused_factory",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.DefaultFactoryTest",
                "name": "test_supply_defaults",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.arg_factory_test.DefaultFactoryTest",
                "name": "test_supply_defaults_with_no_default_factory",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.building_test.NonBuildableLoggingTest",
                "name": "test_config",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.building_test.NonBuildableLoggingTest",
                "name": "test_empty_traversable",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.building_test.NonBuildableLoggingTest",
                "name": "test_non_traversable",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.building_test.NonBuildableLoggingTest",
                "name": "test_traversable_w_buildable",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.building_test.NonBuildableLoggingTest",
                "name": "test_traversable_wo_buildable",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_accessing_functions_on_config",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_assign",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_assign_wrong_argument",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_build_error_path",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_build_inside_build",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_build_nested_structure",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_build_raises_exception_on_call",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_build_raises_nice_error_too_few_args",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_build_reraises_nice_error_multiple_tags",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_build_reraises_nice_error_with_tag_information",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_buildable_subclass",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_cast0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_cast1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_cast2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_cast3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_cast4",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_cast5",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_cast6",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_cast7",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_cast8",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_clear_tags",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_config_defaults_not_materialized",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_config_for_classes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_config_for_dicts",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_config_for_fn_with_special_arg_names",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Enable this after dropping pyhon 3.7 support",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_config_for_functions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_config_for_functions_with_var_args",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_config_for_functions_with_var_args_and_kwargs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_config_for_functions_with_var_kwargs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_config_with_default_args",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_config_with_non_comparable_values",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_convert_partial",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_convert_partial_nested",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_copy_constructor_errors",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_copy_constructor_with_updates_errors",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_copy_with",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_custom_location_history_tracking",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_dataclass_default_factory",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_deep_copy",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_deep_copy_no_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_deep_copy_partials",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_deep_copy_preserves_instance_sharing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_default_value_equality",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_default_value_for_generic_classes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_dir_cls",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_dir_simple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_dir_var_args_and_kwargs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_equality_arguments",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_equality_arguments_nested",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_equality_buildable_type_mismatch",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_equality_classmethods",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_equality_fn_or_cls_mismatch",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_flatten_unflatten_histories",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_flatten_unflatten_tags",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_history_tracking",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_instance_sharing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_instance_sharing_collections",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_multithreaded_build",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_nested_configs",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_nonexistent_attribute_error",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_nonexistent_parameter_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_nonexistent_var_args_parameter_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_partial_for_classes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_partial_for_functions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_pickling_composition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_pickling_config",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_pickling_non_serializable_default",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_pickling_partial",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_repr_class_config",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_repr_class_partial",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_repr_class_tags",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_repr_fn_config",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_repr_fn_partial",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_repr_nested_indentation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_repr_varkwargs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_set_tags",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_setting_tagged_values_with_daglish_traversal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_shallow_copy",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_tag_annotations",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_tagging",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_tags_flattening_and_unflattening",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_typed_config",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_typed_partial",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_unhashable",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_unsetting_argument",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_unsupported_var_args_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_untyped_config",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ConfigTest",
                "name": "test_untyped_partial",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.CallableApisTest",
                "name": "test_get_callable",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.CallableApisTest",
                "name": "test_update_callable",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.CallableApisTest",
                "name": "test_update_callable_drop_invalid_arg",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.CallableApisTest",
                "name": "test_update_callable_invalid_arg",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.CallableApisTest",
                "name": "test_update_callable_new_kwargs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.CallableApisTest",
                "name": "test_update_callable_varargs",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.OrderedArgumentsTest",
                "name": "test_ordered_arguments",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.OrderedArgumentsTest",
                "name": "test_ordered_arguments_options0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.OrderedArgumentsTest",
                "name": "test_ordered_arguments_options1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.OrderedArgumentsTest",
                "name": "test_ordered_arguments_options2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.OrderedArgumentsTest",
                "name": "test_ordered_arguments_options3",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.OrderedArgumentsTest",
                "name": "test_ordered_arguments_options4",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.OrderedArgumentsTest",
                "name": "test_ordered_arguments_options5",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.OrderedArgumentsTest",
                "name": "test_ordered_arguments_options6",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.OrderedArgumentsTest",
                "name": "test_ordered_arguments_options7",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.OrderedArgumentsTest",
                "name": "test_ordered_arguments_options8",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.OrderedArgumentsTest",
                "name": "test_ordered_arguments_options9",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ArgFactoryTest",
                "name": "test_build_argfactory",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ArgFactoryTest",
                "name": "test_build_partial_argfactory",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ArgFactoryTest",
                "name": "test_build_partial_argfactory_argfactory",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ArgFactoryTest",
                "name": "test_build_partial_argfactory_config",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ArgFactoryTest",
                "name": "test_build_partial_tree_argfactory",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.config_test.ArgFactoryTest",
                "name": "test_build_varargs",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_extensions_test.IsImmutableTest",
                "name": "test_frozen_dataclass",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_extensions_test.IsImmutableTest",
                "name": "test_named_tuple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_extensions_test.DaglishExtensionsTest",
                "name": "test_register_function_with_immutable_return_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_extensions_test.DaglishExtensionsTest",
                "name": "test_register_immutable",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.PathTest",
                "name": "test_is_prefix_exact_match",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.PathTest",
                "name": "test_is_prefix_not_prefix",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.PathTest",
                "name": "test_is_prefix_not_prefix_with_index",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.PathTest",
                "name": "test_is_prefix_prefix",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.PathTest",
                "name": "test_is_prefix_prefix_with_index",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.PathElementTest",
                "name": "test_follow",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.PathElementTest",
                "name": "test_follow_path",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.PathElementTest",
                "name": "test_path_fragment",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.TraverserRegistryTest",
                "name": "test_custom_traverser_registries",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.TraverserRegistryTest",
                "name": "test_find_node_traverser_non_type_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.TraverserRegistryTest",
                "name": "test_namedtuple_special_casing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.TraverserRegistryTest",
                "name": "test_node_traverser_registry_with_fallback",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.TraverserRegistryTest",
                "name": "test_register_node_traverser_existing_registration_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.TraverserRegistryTest",
                "name": "test_register_node_traverser_non_type_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.TraverserRegistryTest",
                "name": "test_stacked_node_traverser_registry_with_fallback",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.TraverserRegistryTest",
                "name": "test_unflatten_flatten_config",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.TraverserRegistryTest",
                "name": "test_unflatten_flatten_defaultdict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.TraverserRegistryTest",
                "name": "test_unflatten_flatten_dict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.TraverserRegistryTest",
                "name": "test_unflatten_flatten_list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.TraverserRegistryTest",
                "name": "test_unflatten_flatten_namedtuple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.TraverserRegistryTest",
                "name": "test_unflatten_flatten_tagged_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.TraverserRegistryTest",
                "name": "test_unflatten_flatten_tuple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.TraverserRegistryTest",
                "name": "test_unknown_node_type",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.BasicStructuredMappingTest",
                "name": "test_all_paths_basic",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.BasicStructuredMappingTest",
                "name": "test_all_paths_shared",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.BasicStructuredMappingTest",
                "name": "test_all_paths_two_primitives",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.BasicStructuredMappingTest",
                "name": "test_argument_history",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.BasicStructuredMappingTest",
                "name": "test_memoizes_basic_diamond",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.BasicStructuredMappingTest",
                "name": "test_non_memoized_basic_diamond",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.ArgsSwitchingFuzzTest",
                "name": "test_fuzz",
                "time": 0.346,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.IterateTest",
                "name": "test_basic_walking",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.IterateTest",
                "name": "test_basic_walking_non_memoized",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.IterateTest",
                "name": "test_walk_dataclass_dataclass_aware_traverser",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.IterateTest",
                "name": "test_walk_dataclass_default_traverser",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.MemoizedTraversalTest",
                "name": "test_cycle_detection",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.MemoizedTraversalTest",
                "name": "test_cycle_detection_in_fdl_build",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.MemoizedTraversalTest",
                "name": "test_get_all_paths_dataclass_traverser",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.daglish_test.MemoizedTraversalTest",
                "name": "test_unique_traversals_for_different_ids",
                "time": 1.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffAlignmentTest",
                "name": "test_align",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffAlignmentTest",
                "name": "test_align_by_id",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffAlignmentTest",
                "name": "test_align_heuristically",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffAlignmentTest",
                "name": "test_align_heuristically_fails_if_roots_cant_be_aligned",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffAlignmentTest",
                "name": "test_alignment_errors",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffAlignmentTest",
                "name": "test_constructor",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffAlignmentTest",
                "name": "test_only_align_nontraversable_values_if_they_are_equal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ReferenceTest",
                "name": "test_repr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffTest",
                "name": "test_ignore_changes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffTest",
                "name": "test_ignore_fields",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffTest",
                "name": "test_str",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffFromAlignmentBuilderTest",
                "name": "test_add_shared_new_objects",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffFromAlignmentBuilderTest",
                "name": "test_aligned_or_equal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffFromAlignmentBuilderTest",
                "name": "test_delete_buildable_argument",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffFromAlignmentBuilderTest",
                "name": "test_delete_dict_item",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffFromAlignmentBuilderTest",
                "name": "test_diff_from_alignment_builder_can_only_build_once",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffFromAlignmentBuilderTest",
                "name": "test_modify_buildable_argument",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffFromAlignmentBuilderTest",
                "name": "test_modify_buildable_callable",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffFromAlignmentBuilderTest",
                "name": "test_modify_dict_item",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffFromAlignmentBuilderTest",
                "name": "test_modify_root_tag",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffFromAlignmentBuilderTest",
                "name": "test_modify_sequence_element",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffFromAlignmentBuilderTest",
                "name": "test_modify_tagged_values",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffFromAlignmentBuilderTest",
                "name": "test_modify_tags",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffFromAlignmentBuilderTest",
                "name": "test_multiple_modifications",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffFromAlignmentBuilderTest",
                "name": "test_replace_object_with_equal_value",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffFromAlignmentBuilderTest",
                "name": "test_replace_set",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffFromAlignmentBuilderTest",
                "name": "test_replace_value_with_tags",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffFromAlignmentBuilderTest",
                "name": "test_root_must_be_aligned",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffFromAlignmentBuilderTest",
                "name": "test_set_buildable_argument",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffFromAlignmentBuilderTest",
                "name": "test_set_dict_item",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.DiffFromAlignmentBuilderTest",
                "name": "test_shared_new_tags",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ResolveDiffReferencesTest",
                "name": "test_error_unexpected_reference_root",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ResolveDiffReferencesTest",
                "name": "test_resolve_diff_multiple_references",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ResolveDiffReferencesTest",
                "name": "test_resolve_ref_from_change_to_new_shared_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ResolveDiffReferencesTest",
                "name": "test_resolve_ref_from_change_to_old",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ResolveDiffReferencesTest",
                "name": "test_resolve_ref_from_new_shared_value_to_new_shared_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ResolveDiffReferencesTest",
                "name": "test_resolve_ref_from_new_shared_value_to_old",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ApplyDiffTest",
                "name": "test_apply_diff_with_multiple_references",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ApplyDiffTest",
                "name": "test_delete_buildable_argument",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ApplyDiffTest",
                "name": "test_delete_dict_item",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ApplyDiffTest",
                "name": "test_error_child_has_value_unsupported_path_elt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ApplyDiffTest",
                "name": "test_error_delete_index",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ApplyDiffTest",
                "name": "test_error_delete_value_not_found",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ApplyDiffTest",
                "name": "test_error_modify_root",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ApplyDiffTest",
                "name": "test_error_modify_unsupported_path_elt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ApplyDiffTest",
                "name": "test_error_modify_value_not_found",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ApplyDiffTest",
                "name": "test_error_multiple_errors",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ApplyDiffTest",
                "name": "test_error_parent_does_not_exist",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ApplyDiffTest",
                "name": "test_error_set_index",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ApplyDiffTest",
                "name": "test_error_set_value_already_has_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ApplyDiffTest",
                "name": "test_error_wrong_child_path_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ApplyDiffTest",
                "name": "test_modify_buildable_argument",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ApplyDiffTest",
                "name": "test_modify_buildable_callable",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ApplyDiffTest",
                "name": "test_modify_dict_item",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ApplyDiffTest",
                "name": "test_modify_list_item",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ApplyDiffTest",
                "name": "test_set_buildable_argument",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ApplyDiffTest",
                "name": "test_set_dict_item",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ApplyDiffTest",
                "name": "test_swap_child_and_parent",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.ApplyDiffTest",
                "name": "test_swap_siblings",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.SkeletonFromDiffTest",
                "name": "test_skeleton_from_diff0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.SkeletonFromDiffTest",
                "name": "test_skeleton_from_diff1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.SkeletonFromDiffTest",
                "name": "test_skeleton_from_diff10",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.SkeletonFromDiffTest",
                "name": "test_skeleton_from_diff11",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.SkeletonFromDiffTest",
                "name": "test_skeleton_from_diff12",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.SkeletonFromDiffTest",
                "name": "test_skeleton_from_diff13",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.SkeletonFromDiffTest",
                "name": "test_skeleton_from_diff14",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.SkeletonFromDiffTest",
                "name": "test_skeleton_from_diff15",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.SkeletonFromDiffTest",
                "name": "test_skeleton_from_diff2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.SkeletonFromDiffTest",
                "name": "test_skeleton_from_diff3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.SkeletonFromDiffTest",
                "name": "test_skeleton_from_diff4",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.SkeletonFromDiffTest",
                "name": "test_skeleton_from_diff5",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.SkeletonFromDiffTest",
                "name": "test_skeleton_from_diff6",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.SkeletonFromDiffTest",
                "name": "test_skeleton_from_diff7",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.SkeletonFromDiffTest",
                "name": "test_skeleton_from_diff8",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.diffing_test.SkeletonFromDiffTest",
                "name": "test_skeleton_from_diff9",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.history_test.HistoryTest",
                "name": "test_auto_config_history_location",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.history_test.HistoryTest",
                "name": "test_custom_location_provider",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.history_test.HistoryTest",
                "name": "test_deleted_repr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.history_test.HistoryTest",
                "name": "test_entry_deletion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.history_test.HistoryTest",
                "name": "test_entry_simple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.history_test.HistoryTest",
                "name": "test_location_formatting",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.history_test.HistoryTest",
                "name": "test_location_provider",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.history_test.HistoryTest",
                "name": "test_suspend_tracking_deleted_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.history_test.HistoryTest",
                "name": "test_suspend_tracking_new_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.history_test.HistoryTest",
                "name": "test_suspend_tracking_update_tags",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.history_test.HistoryTest",
                "name": "test_updating_tags",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.materialize_test.MaterializeTest",
                "name": "test_materialize_defaults",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.materialize_test.MaterializeTest",
                "name": "test_materialize_defaults_recursive",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.module_reflection_test.ModuleReflectionTest",
                "name": "test_auto_config_functions",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.module_reflection_test.ModuleReflectionTest",
                "name": "test_find_base_config_like_things",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.module_reflection_test.ModuleReflectionTest",
                "name": "test_find_base_config_like_things_module",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.module_reflection_test.ModuleReflectionTest",
                "name": "test_find_fiddler_like_things",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.module_reflection_test.ModuleReflectionTest",
                "name": "test_find_fiddler_like_things_module",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.mutate_buildable_test.MutateBuildableTest",
                "name": "test_move_buildable_internals_history",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.mutate_buildable_test.MutateBuildableTest",
                "name": "test_no_unexpected_attributes",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.PathStrTest",
                "name": "test_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.PathStrTest",
                "name": "test_list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.PathStrTest",
                "name": "test_nested_attr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.GetTypeAnnotationTest",
                "name": "test_get_type_annotation_root",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.AsStrFlattenedTests",
                "name": "test_advanced_type_annotations",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.AsStrFlattenedTests",
                "name": "test_annotated_kwargs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.AsStrFlattenedTests",
                "name": "test_argument_tags",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.AsStrFlattenedTests",
                "name": "test_argument_tags_multiple_tags",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.AsStrFlattenedTests",
                "name": "test_argument_tags_tagged_config",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.AsStrFlattenedTests",
                "name": "test_builtin_types_annotations",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.AsStrFlattenedTests",
                "name": "test_can_print_parameterized_generic",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "types.GenericAlias is 3.9+ only.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.AsStrFlattenedTests",
                "name": "test_can_print_union_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.AsStrFlattenedTests",
                "name": "test_class",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.AsStrFlattenedTests",
                "name": "test_default_values",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.AsStrFlattenedTests",
                "name": "test_disabling_type_annotations",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.AsStrFlattenedTests",
                "name": "test_kwargs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.AsStrFlattenedTests",
                "name": "test_materialized_default_values",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.AsStrFlattenedTests",
                "name": "test_multiple_nested_collections",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.AsStrFlattenedTests",
                "name": "test_nested",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.AsStrFlattenedTests",
                "name": "test_nested_collections",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.AsStrFlattenedTests",
                "name": "test_nested_kwargs",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.AsStrFlattenedTests",
                "name": "test_partial",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.AsStrFlattenedTests",
                "name": "test_simple_printing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.AsStrFlattenedTests",
                "name": "test_tagged_values",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.AsStrFlattenedTests",
                "name": "test_tagged_values_multiple_tags",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.AsStrFlattenedTests",
                "name": "test_unset_argument",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.HistoryPerLeafParamTests",
                "name": "test_collection_of_two_buildables_history",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.HistoryPerLeafParamTests",
                "name": "test_materialize_defaults_history",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.HistoryPerLeafParamTests",
                "name": "test_nested_in_collections",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.HistoryPerLeafParamTests",
                "name": "test_simple_history",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.printing_test.HistoryPerLeafParamTests",
                "name": "test_update_callable_history",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.reraised_exception_test.ReraisedExceptionTest",
                "name": "test_decorate_subclassing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.reraised_exception_test.ReraisedExceptionTest",
                "name": "test_decorate_subclassing_fails",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.reraised_exception_test.ReraisedExceptionTest",
                "name": "test_pickling",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.reraised_exception_test.ReraisedExceptionTest",
                "name": "test_reraise_value_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.selectors_test.SelectionTest",
                "name": "test_unsupported_select_arg_combinations",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.selectors_test.NodeSelectionTest",
                "name": "test___iter__",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.selectors_test.NodeSelectionTest",
                "name": "test_debug_get",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.selectors_test.NodeSelectionTest",
                "name": "test_matches_based_on_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.selectors_test.NodeSelectionTest",
                "name": "test_matches_everything",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.selectors_test.NodeSelectionTest",
                "name": "test_matches_function_call",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.selectors_test.NodeSelectionTest",
                "name": "test_replace_deep_copy",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.selectors_test.NodeSelectionTest",
                "name": "test_replace_doesnt_unlink",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.selectors_test.NodeSelectionTest",
                "name": "test_replace_fails_if_replacing_whole_tree",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.selectors_test.NodeSelectionTest",
                "name": "test_replace_shallow_copy",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.selectors_test.NodeSelectionTest",
                "name": "test_replace_sharing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.selectors_test.NodeSelectionTest",
                "name": "test_set",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.selectors_test.TagSelectionTest",
                "name": "test_colab_example",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.selectors_test.TagSelectionTest",
                "name": "test_iter_values",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.selectors_test.TagSelectionTest",
                "name": "test_replace_doesnt_infinitely_recurse",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.selectors_test.TagSelectionTest",
                "name": "test_select_tag_subclasses",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.signatures_test.SignatureCacheTest",
                "name": "test_can_get_dict_signature",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.signatures_test.SignatureCacheTest",
                "name": "test_can_get_signature_of_unhashable_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.signatures_test.SignatureCacheTest",
                "name": "test_defaults_and_kwargs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.signatures_test.SignatureCacheTest",
                "name": "test_nonexistent_signature_for_builtin",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.signatures_test.SignatureCacheTest",
                "name": "test_nonexistent_signature_for_uncallable_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.signatures_test.SignatureCacheTest",
                "name": "test_positional_and_kw_only",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.signatures_test.SignatureCacheTest",
                "name": "test_signature_is_cached",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.signatures_test.TypeHintsCacheTest",
                "name": "test_annotations_with_extras",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.signatures_test.TypeHintsCacheTest",
                "name": "test_annotations_without_extras",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.signatures_test.TypeHintsCacheTest",
                "name": "test_cross_module_dataclass_with_local_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.signatures_test.TypeHintsCacheTest",
                "name": "test_dataclass",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.signatures_test.TypeHintsCacheTest",
                "name": "test_int",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.signatures_test.TypeHintsCacheTest",
                "name": "test_invalid_types",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.signatures_test.TypeHintsCacheTest",
                "name": "test_namedtuple_class",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.signatures_test.TypeHintsCacheTest",
                "name": "test_namedtuple_function",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.signatures_test.TypeHintsCacheTest",
                "name": "test_object",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.signatures_test.TypeHintsCacheTest",
                "name": "test_regular_class",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_deepcopy_and_object_id",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_deepcopy_linked_value_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_double_set_tagged",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_inline_tag_definition_fails",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_list_tags",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_list_tags_multiple_tags",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_list_tags_superclasses",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_materialize_tags_ignores_tag_not_in_tags_list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_materialize_tags_keeps_tag_in_ignore_list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_materialize_tags_keeps_tag_when_no_default_provided",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_materialize_tags_materializes_tag_in_tags_list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_materialize_tags_removes_tag_when_default_provided",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_materialize_tags_removes_tag_when_value_supplied",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_missing_tag_description",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_multiple_keys",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_one_taggedvalue_unset_in_config",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_set_double_tags",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_set_only_placeholders_in_subtree",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_set_tagged",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_set_tagged_subclasses",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_set_two_taggedvalues",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_shallow_copy_tagged_values",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_tag_cloudpickle_main_module",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_tag_cloudpickle_other_module",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_tag_instantiation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_tag_pickle",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_tag_str",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_tagged_value_error_message",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_tagged_value_identity_fn_exception",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_tagged_value_identity_fn_none_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_taggedvalue_default_none",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TaggingTest",
                "name": "test_tagging_dataclass_field_defaults",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_deepcopy_and_object_id",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_deepcopy_linked_value_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_double_set_tagged",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_inline_tag_definition_fails",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_list_tags",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_list_tags_multiple_tags",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_list_tags_superclasses",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_materialize_tags_ignores_tag_not_in_tags_list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_materialize_tags_keeps_tag_in_ignore_list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_materialize_tags_keeps_tag_when_no_default_provided",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_materialize_tags_materializes_tag_in_tags_list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_materialize_tags_removes_tag_when_default_provided",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_materialize_tags_removes_tag_when_value_supplied",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_missing_tag_description",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_multiple_keys",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_one_taggedvalue_unset_in_config",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_set_double_tags",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_set_only_placeholders_in_subtree",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_set_tagged",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_set_tagged_subclasses",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_set_two_taggedvalues",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_shallow_copy_tagged_values",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_tag_cloudpickle_main_module",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_tag_cloudpickle_other_module",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_tag_instantiation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_tag_pickle",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_tag_str",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_tagged_value_error_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_tagged_value_identity_fn_exception",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_tagged_value_identity_fn_none_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_taggedvalue_default_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.tagging_test.TestWithSelectorMock",
                "name": "test_tagging_dataclass_field_defaults",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.codegen_test.CodegenTest",
                "name": "test_codegen_dot_syntax_shared",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.codegen_test.CodegenTest",
                "name": "test_codegen_import_and_exec",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.codegen_test.CodegenTest",
                "name": "test_codegen_inner_class_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.codegen_test.CodegenTest",
                "name": "test_codegen_multi_shared",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.codegen_test.CodegenTest",
                "name": "test_codegen_partial",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.codegen_test.CodegenTest",
                "name": "test_codegen_submodule",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.codegen_test.CodegenTest",
                "name": "test_codegen_unshared_child_of_shared",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.codegen_test.CodegenTest",
                "name": "test_deeply_nested_constant",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.codegen_test.CodegenTest",
                "name": "test_dict_value",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.import_manager_test.ImportManagerTest",
                "name": "test_change_alias0",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.import_manager_test.ImportManagerTest",
                "name": "test_change_alias1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.import_manager_test.ImportManagerTest",
                "name": "test_change_alias2",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.import_manager_test.ImportManagerTest",
                "name": "test_change_alias3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.import_manager_test.ImportManagerTest",
                "name": "test_change_alias4",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.import_manager_test.ImportManagerTest",
                "name": "test_change_alias5",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.import_manager_test.ImportManagerTest",
                "name": "test_dotted_special_import_conflicts",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.import_manager_test.ImportManagerTest",
                "name": "test_dotted_special_import_okay",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.import_manager_test.ImportManagerTest",
                "name": "test_get_import_name0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.import_manager_test.ImportManagerTest",
                "name": "test_get_import_name1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.import_manager_test.ImportManagerTest",
                "name": "test_get_import_name2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.import_manager_test.ImportManagerTest",
                "name": "test_get_import_name3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.import_manager_test.ImportManagerTest",
                "name": "test_get_import_name4",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.import_manager_test.ImportManagerTest",
                "name": "test_get_import_name5",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.import_manager_test.ImportManagerTest",
                "name": "test_import_manager_aliasing_builtin",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.import_manager_test.ImportManagerTest",
                "name": "test_import_manager_basic_use",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.import_manager_test.ImportManagerTest",
                "name": "test_import_manager_fiddle_and_fiddle_config",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.namespace_test.NamespaceTest",
                "name": "test_camel_to_snake",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.namespace_test.NamespaceTest",
                "name": "test_namespace_add",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.namespace_test.NamespaceTest",
                "name": "test_namespace_can_override_builtins",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.namespace_test.NamespaceTest",
                "name": "test_namespace_contains_builtins",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.namespace_test.NamespaceTest",
                "name": "test_namespace_double_add",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.namespace_test.NamespaceTest",
                "name": "test_namespace_get_new_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.namespace_test.NamespaceTest",
                "name": "test_py_var_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_additional_converters",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert10",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert11",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert12",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert13",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert14",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert15",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert16",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert17",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert18",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert19",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert20",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert21",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert22",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert23",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert24",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert25",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert26",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert27",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert28",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert29",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert3",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert30",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert31",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert32",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert33",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert34",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert35",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert4",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert5",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert6",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert7",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert8",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert9",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert_empty_set",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert_multiple_tags",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert_new_tags",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.py_val_to_cst_converter_test.PyValToCstConverterTest",
                "name": "test_convert_unsupported_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.code_ir_test.NameTest",
                "name": "test_replace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.code_ir_test.CodegenNodeTest",
                "name": "test_daglish_iteration",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.code_ir_test.CodegenNodeTest",
                "name": "test_smoke_traverse_fixtures_simple_ir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.code_ir_test.CodegenNodeTest",
                "name": "test_smoke_traverse_fixtures_simple_shared_variable_ir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.complex_to_variables_test.MoveComplexNodesToVariablesTest",
                "name": "test_doesnt_break_arg_factory_expressions",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.complex_to_variables_test.MoveComplexNodesToVariablesTest",
                "name": "test_doesnt_fail_if_cant_name",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.complex_to_variables_test.MoveComplexNodesToVariablesTest",
                "name": "test_extract_everything",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.complex_to_variables_test.MoveComplexNodesToVariablesTest",
                "name": "test_high_extraction",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.complex_to_variables_test.MoveComplexNodesToVariablesTest",
                "name": "test_medium_extraction",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.experimental_top_level_api_test.ExperimentalTopLevelApiTest",
                "name": "test_config_contains_tags_wo_default",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.experimental_top_level_api_test.ExperimentalTopLevelApiTest",
                "name": "test_fuzz_all_variables",
                "time": 0.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.experimental_top_level_api_test.ExperimentalTopLevelApiTest",
                "name": "test_fuzz_basic",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.experimental_top_level_api_test.ExperimentalTopLevelApiTest",
                "name": "test_fuzz_with_history",
                "time": 0.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.experimental_top_level_api_test.ExperimentalTopLevelApiTest",
                "name": "test_generates_equivalent_configs_arg_factory_config",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.experimental_top_level_api_test.ExperimentalTopLevelApiTest",
                "name": "test_generates_equivalent_configs_encoder_decoder_config",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.experimental_top_level_api_test.ExperimentalTopLevelApiTest",
                "name": "test_generates_equivalent_configs_shared_config",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.experimental_top_level_api_test.ExperimentalTopLevelApiTest",
                "name": "test_nested_sub_fixture",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.experimental_top_level_api_test.ExperimentalTopLevelApiTest",
                "name": "test_sub_fixture_has_sharing_nodes",
                "time": 0.126,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.experimental_top_level_api_test.ExperimentalTopLevelApiTest",
                "name": "test_sub_fixture_is_shared",
                "time": 0.117,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.experimental_top_level_api_test.ExperimentalTopLevelApiTest",
                "name": "test_sub_fixtures_interaction_w_move_complex_nodes_to_variables",
                "time": 0.133,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.experimental_top_level_api_test.ExperimentalTopLevelApiTest",
                "name": "test_sub_fixtures_interaction_w_move_shared_nodes_to_variables",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.experimental_top_level_api_test.ExperimentalTopLevelApiTest",
                "name": "test_sub_fixtures_with_shared_nodes",
                "time": 0.143,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.get_history_comments_test.AddHistoryCommentsTest",
                "name": "test_defunct_no_history",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.get_history_comments_test.AddHistoryCommentsTest",
                "name": "test_format_history_for_buildable",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.init_task_test.InitTaskTest",
                "name": "test_equal_to_fixture",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.ir_printer_test.IrPrinterTest",
                "name": "test_format_containers",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.ir_printer_test.IrPrinterTest",
                "name": "test_format_expr_primitives",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.ir_printer_test.IrPrinterTest",
                "name": "test_format_simple_ir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.ir_printer_test.IrPrinterTest",
                "name": "test_format_simple_shared_variable_ir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.ir_to_cst_test.IrToCstTest",
                "name": "test_basic_ir",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.ir_to_cst_test.IrToCstTest",
                "name": "test_complex_dict_node_generation",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.ir_to_cst_test.IrToCstTest",
                "name": "test_tags_generation_config",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.ir_to_cst_test.IrToCstTest",
                "name": "test_tags_generation_partial",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.ir_to_cst_test.IrToCstTest",
                "name": "test_two_shared_config",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.make_symbolic_references_test.MakeSymbolicReferencesTest",
                "name": "test_forget_to_lower_reasonable_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.make_symbolic_references_test.MakeSymbolicReferencesTest",
                "name": "test_import_symbols",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.make_symbolic_references_test.MakeSymbolicReferencesTest",
                "name": "test_import_symbols_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.make_symbolic_references_test.MakeSymbolicReferencesTest",
                "name": "test_nested_arg_factories",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.make_symbolic_references_test.MakeSymbolicReferencesTest",
                "name": "test_replace_config_callable",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.make_symbolic_references_test.MakeSymbolicReferencesTest",
                "name": "test_replaces_arg_factory_partial",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.make_symbolic_references_test.MakeSymbolicReferencesTest",
                "name": "test_two_arg_factories",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.naming_test.NamingTest",
                "name": "test_suffix_first_path_indices",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.naming_test.NamingTest",
                "name": "test_suffix_first_path_keys",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.naming_test.NamingTest",
                "name": "test_suffix_is_short_for_large_configs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.naming_test.NamerTest",
                "name": "test_name_from_candidates",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.naming_test.PathFirstNamerTest",
                "name": "test_can_get_names_for_every_element",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.naming_test.PathFirstNamerTest",
                "name": "test_name_for_doesnt_add_root_unnecessarily",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.naming_test.PathFirstNamerTest",
                "name": "test_name_for_encoder",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.naming_test.PathFirstNamerTest",
                "name": "test_name_for_falls_back_to_another_path",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.naming_test.PathFirstNamerTest",
                "name": "test_name_for_falls_back_to_root",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.naming_test.PathFirstNamerTest",
                "name": "test_names_as_documented_example_1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.naming_test.PathFirstNamerTest",
                "name": "test_names_as_documented_example_2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.naming_test.TypeFirstNamerTest",
                "name": "test_can_get_names_for_every_element",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.naming_test.TypeFirstNamerTest",
                "name": "test_name_for_doesnt_add_root_unnecessarily",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.naming_test.TypeFirstNamerTest",
                "name": "test_name_for_encoder",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.naming_test.TypeFirstNamerTest",
                "name": "test_name_for_falls_back_to_another_path",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.naming_test.TypeFirstNamerTest",
                "name": "test_name_for_falls_back_to_root",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.naming_test.TypeFirstNamerTest",
                "name": "test_names_as_documented_example_1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.naming_test.TypeFirstNamerTest",
                "name": "test_names_as_documented_example_2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.parents_first_traversal_test.ParentsFirstTraversalTest",
                "name": "test_can_traverse_all",
                "time": 0.751,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.parents_first_traversal_test.ParentsFirstTraversalTest",
                "name": "test_traverse_deferral_required",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.shared_to_variables_test.SharedToVariablesTest",
                "name": "test_avoids_name_collisions",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.shared_to_variables_test.SharedToVariablesTest",
                "name": "test_fake_encoder_decoder",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.shared_to_variables_test.SharedToVariablesTest",
                "name": "test_shared_node_w_one_attr_in_path",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.shared_to_variables_test.SharedToVariablesTest",
                "name": "test_works_on_toy_example",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.shared_to_variables_test.SharedToVariablesTest",
                "name": "test_works_on_toy_example_two_vars",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.split_arg_factories_test.SplitArgFactoriesTest",
                "name": "test_lower_arg_factories",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.split_arg_factories_test.SplitArgFactoriesTest",
                "name": "test_lower_nested_arg_factories",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.sub_fixture_test.SubFixtureTest",
                "name": "test_arg_factory_raises_errors",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.sub_fixture_test.SubFixtureTest",
                "name": "test_conflicting_name_raises_errors",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.sub_fixture_test.SubFixtureTest",
                "name": "test_fake_encoder_decoder",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.sub_fixture_test.SubFixtureTest",
                "name": "test_find_shared_nodes",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.codegen.auto_config.sub_fixture_test.SubFixtureTest",
                "name": "test_nested_sub_fixture",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.debug.grep_test.GrepTest",
                "name": "test_case_insensitive",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.debug.grep_test.GrepTest",
                "name": "test_config_matches_fn",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.debug.grep_test.GrepTest",
                "name": "test_excluding_case_insensitive",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.debug.grep_test.GrepTest",
                "name": "test_excluding_path",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.debug.grep_test.GrepTest",
                "name": "test_grep_matches_path_and_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.debug.grep_test.GrepTest",
                "name": "test_grep_matches_paths_or_values",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.debug.grep_test.GrepTest",
                "name": "test_shared_matchable_by_both_paths",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTransformerTest",
                "name": "test_attribute_save0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTransformerTest",
                "name": "test_attribute_save1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTransformerTest",
                "name": "test_attribute_save2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTransformerTest",
                "name": "test_attribute_save3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTransformerTest",
                "name": "test_attribute_save4",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTransformerTest",
                "name": "test_attribute_save5",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTransformerTest",
                "name": "test_attribute_save6",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTransformerTest",
                "name": "test_attribute_save7",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTransformerTest",
                "name": "test_attribute_save8",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTransformerTest",
                "name": "test_attribute_save9",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_access_autoconfig_method_via_class",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_allow_control_flow_decorator",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_arg_factory_counter",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_arg_factory_functools_partial_alternation",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_auto_config_eligibility",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_auto_configuring_non_function",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_autobuilders_in_auto_config",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_call_super",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_calling_auto_config",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_calling_builtins",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_calling_explicit_function",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_can_pass_self_as_keyword",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Enable this after dropping pyhon 3.7 support",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_classmethod",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_classmethod_on_top",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_classmethod_on_top_with_auto_config_arguments",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_closures_in_multi_level_nesting",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_control_flow_expression0",
                "time": 4.513,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_control_flow_expression1",
                "time": 3.195,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_control_flow_expression2",
                "time": 3.71,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_control_flow_expression3",
                "time": 2.91,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_control_flow_expression4",
                "time": 3.434,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_control_flow_for",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_control_flow_if",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_control_flow_while",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_copy",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_copy_classmethod",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_create_basic_arg_factory",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_create_basic_config",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_create_basic_config_parents",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_create_basic_partial",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_create_config_with_args",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_create_config_with_kwonly_args",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_custom_policy",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_dataclass_attribute_load",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_dataclass_attribute_save",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_disallow_async_function_definitions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_disallow_class_definitions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_disallow_function_definitions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_disallow_lambda_definitions",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_disallow_raise",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_disallow_try",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_disallow_with",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_disallow_yield",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_disallow_yield_from",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_experimental_config_cls",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_experimental_result_must_contain_buildable",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_function_metadata",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_globals",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_inline_exemption",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_lambda_supported_in_decorator",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_multiple_lambdas_on_one_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "multiple lambdas on one line not supported yet",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_nested_attribute_load",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_nested_attribute_save",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_nested_calls",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_nested_dataclass_attribute_save",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_nested_functools_partial",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_nested_functools_partial_unsupported_positional_args",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_non_dataclass_attribute_load",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_non_dataclass_attribute_save",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_reference_nonlocal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_require_buildable_in_return_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_return_structure",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_staticmethod_arguments",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_staticmethod_ctor",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_staticmethod_nullary",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_staticmethod_on_top",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_trailing_paren_after_lambda",
                "time": 2.416,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoConfigTest",
                "name": "test_unhashable_callable",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoUnconfigTest",
                "name": "test_arg_factory_counter",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoUnconfigTest",
                "name": "test_nested_python_execution",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoUnconfigTest",
                "name": "test_python_execution",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoUnconfigTest",
                "name": "test_simple_inline",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.AutoUnconfigTest",
                "name": "test_simple_not_inline",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.InlineTest",
                "name": "test_always_inline_default_is_true",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.InlineTest",
                "name": "test_bound_auto_config",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.InlineTest",
                "name": "test_inlined_func_returns_list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Cannot inline a function that returns a non-buildable.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.InlineTest",
                "name": "test_inlined_func_returns_partial",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Cannot inline a function that returns a partial currently.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.InlineTest",
                "name": "test_inlining_nested_config",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.auto_config_test.InlineTest",
                "name": "test_simple",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.daglish_legacy_test.TraverseWithPathTest",
                "name": "test_defaultdict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.daglish_legacy_test.TraverseWithPathTest",
                "name": "test_doc_example",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.daglish_legacy_test.TraverseWithPathTest",
                "name": "test_is_namedtuple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.daglish_legacy_test.TraverseWithPathTest",
                "name": "test_posttraversal_return",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.daglish_legacy_test.TraverseWithPathTest",
                "name": "test_pretraversal_return",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.daglish_legacy_test.TraverseWithPathTest",
                "name": "test_pretraversal_return_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.daglish_legacy_test.TraverseWithPathTest",
                "name": "test_yield_non_none_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.daglish_legacy_test.TraverseWithPathTest",
                "name": "test_yield_twice_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.daglish_legacy_test.TraverseWithAllPathsTest",
                "name": "test_collect_paths",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.daglish_legacy_test.TraverseWithAllPathsTest",
                "name": "test_posttraversal_return_new_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.daglish_legacy_test.TraverseWithAllPathsTest",
                "name": "test_posttraversal_return_old_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.daglish_legacy_test.MemoizedTraverseTest",
                "name": "test_memoizes_values",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.daglish_legacy_test.CollectPathsByIdTest",
                "name": "test_collect_paths_by_id",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.daglish_legacy_test.CollectPathsByIdTest",
                "name": "test_empty_structure",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.daglish_legacy_test.CollectPathsByIdTest",
                "name": "test_tagged_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.daglish_legacy_test.CollectValueByIdTest",
                "name": "test_collect_value_by_id",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.daglish_legacy_test.CollectValueByIdTest",
                "name": "test_empty_structure",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.daglish_legacy_test.CollectValueByIdTest",
                "name": "test_tagged_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.daglish_legacy_test.CollectValueByPathTest",
                "name": "test_collect_value_by_path",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.daglish_legacy_test.CollectValueByPathTest",
                "name": "test_empty_structure",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.daglish_legacy_test.CollectValueByPathTest",
                "name": "test_tagged_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dataclasses_test.DataclassesTest",
                "name": "test_auto_config_basic_equality",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dataclasses_test.DataclassesTest",
                "name": "test_auto_config_field_init",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dataclasses_test.DataclassesTest",
                "name": "test_auto_config_override_equality",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dataclasses_test.DataclassesTest",
                "name": "test_configurable_factory",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dataclasses_test.DataclassesTest",
                "name": "test_configurable_factory_autoconfig_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dataclasses_test.DataclassesTest",
                "name": "test_configurable_factory_can_be_configured",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dataclasses_test.DataclassesTest",
                "name": "test_configurable_factory_no_unintentional_aliasing",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dataclasses_test.DataclassesTest",
                "name": "test_convert_dataclasses_to_configs",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dataclasses_test.DataclassesTest",
                "name": "test_convert_reference_to_dataclass",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dataclasses_test.DataclassesTest",
                "name": "test_dataclass_tagging",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dataclasses_test.DataclassesTest",
                "name": "test_field_has_tag",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dataclasses_test.DataclassesTest",
                "name": "test_invalid_definition_with_defaults",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dataclasses_test.DataclassesTest",
                "name": "test_mandatory_fields",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dataclasses_test.DataclassesTest",
                "name": "test_metadata_passthrough",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dataclasses_test.DataclassesTest",
                "name": "test_name_set_in_both_cases",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dataclasses_test.DataclassesTest",
                "name": "test_nested_dataclass_default_factories",
                "time": 0.38,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dataclasses_test.DataclassesTest",
                "name": "test_post_init_dataclass_conversion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dataclasses_test.DataclassesTest",
                "name": "test_traverse_dataclass_values",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dataclasses_test.DataclassesTest",
                "name": "test_update_callable_for_configurable_factories",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dataclasses_test.DataclassesTest",
                "name": "test_update_callable_for_tagged_fields",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dict_config_test.DictConfigTest",
                "name": "test_copy",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dict_config_test.DictConfigTest",
                "name": "test_initialize_from_dict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dict_config_test.DictConfigTest",
                "name": "test_key_named_self",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Enable this after dropping pyhon 3.7 support",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dict_config_test.DictConfigTest",
                "name": "test_nesting",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.dict_config_test.DictConfigTest",
                "name": "test_simple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.fixture_node_test.FixtureTest",
                "name": "test_build_errors",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.fixture_node_test.FixtureTest",
                "name": "test_layer_fixture",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.fixture_node_test.FixtureTest",
                "name": "test_list_fixture",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.namespace_config_test.NamespaceConfigTest",
                "name": "test_copy",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.namespace_config_test.NamespaceConfigTest",
                "name": "test_initialize_from_dict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.namespace_config_test.NamespaceConfigTest",
                "name": "test_key_named_self",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Enable this after dropping pyhon 3.7 support",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.namespace_config_test.NamespaceConfigTest",
                "name": "test_nesting",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.namespace_config_test.NamespaceConfigTest",
                "name": "test_simple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.tied_value_test.TiedValueTest",
                "name": "test_basic_sharing",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.tied_value_test.TiedValueTest",
                "name": "test_basic_sharing_2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.tied_value_test.TiedValueTest",
                "name": "test_more_than_two_tied",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.tied_value_test.TiedValueTest",
                "name": "test_new_doesnt_rewrap",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.tied_value_test.TiedValueTest",
                "name": "test_overwrite_with_new_tied_value_breaks_ties",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.tied_value_test.TiedValueTest",
                "name": "test_overwrite_with_new_tied_value_during_copy_breaks_ties",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.tied_value_test.TiedValueTest",
                "name": "test_tagged_and_tied_iteraction_tagged_config",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.tied_value_test.TiedValueTest",
                "name": "test_tagged_and_tied_iteraction_tied_config",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.tied_value_test.TiedValueTest",
                "name": "test_tied_value_breaks_ties_during_deepcopy",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.tied_value_test.TiedValueTest",
                "name": "test_tied_value_preserves_ties_during_copy",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.tied_value_test.TiedValueTest",
                "name": "test_ties_object",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.tied_value_test.TiedValueTest",
                "name": "test_untie_and_set_tied",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.tied_value_test.TiedValueTest",
                "name": "test_untie_and_set_untied",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.tied_value_test.TiedValueTest",
                "name": "test_works_in_lists",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.transform_test.TransformTest",
                "name": "test_python_interns_tuples",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.transform_test.TransformTest",
                "name": "test_replace_unconfigured_partials_with_callables_ignores_partial_subclass",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.transform_test.TransformTest",
                "name": "test_replace_unconfigured_partials_with_callables_replace_if_only_defaults",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.transform_test.TransformTest",
                "name": "test_replace_unconfigured_partials_with_callables_replace_nested",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.transform_test.TransformTest",
                "name": "test_replace_unconfigured_partials_with_callables_replace_top_level",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.transform_test.TransformTest",
                "name": "test_unintern_tuple_of_literals",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.transform_test.TransformTest",
                "name": "test_unintern_tuple_of_literals_in_list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.transform_test.TransformTest",
                "name": "test_unintern_tuple_of_non_literals",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.with_tags_test.WithTagTest",
                "name": "test_multiple_tags",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.with_tags_test.WithTagTest",
                "name": "test_nested_call",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.yaml_serialization_test.YamlSerializationTest",
                "name": "test_dump_diamond",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.yaml_serialization_test.YamlSerializationTest",
                "name": "test_dump_fixture",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.yaml_serialization_test.YamlSerializationTest",
                "name": "test_dump_tagged_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.yaml_serialization_test.YamlSerializationTest",
                "name": "test_dump_yaml_config",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.yaml_serialization_test.YamlSerializationTest",
                "name": "test_dump_yaml_partial",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.yaml_serialization_test.YamlSerializationTest",
                "name": "test_various_python_collections",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.autobuilders.autobuilders_test.RegistryTest",
                "name": "test_auto_skeleton_allows_none_as_unconfigured_sentinel",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.autobuilders.autobuilders_test.RegistryTest",
                "name": "test_auto_skeleton_attribute_skeletons_required",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.autobuilders.autobuilders_test.RegistryTest",
                "name": "test_auto_skeleton_basic",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.autobuilders.autobuilders_test.RegistryTest",
                "name": "test_auto_skeleton_doesnt_configure_primitives",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.autobuilders.autobuilders_test.RegistryTest",
                "name": "test_auto_skeleton_subclasses_and_existing_skeletons",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.autobuilders.autobuilders_test.RegistryTest",
                "name": "test_auto_skeleton_unannotated_raises",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.autobuilders.autobuilders_test.RegistryTest",
                "name": "test_get_config_not_present",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.autobuilders.autobuilders_test.RegistryTest",
                "name": "test_recursive_skeleton",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.autobuilders.autobuilders_test.RegistryTest",
                "name": "test_skeleton_and_get_config",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.autobuilders.autobuilders_test.RegistryTest",
                "name": "test_skeleton_duplicate_class_registration_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.autobuilders.autobuilders_test.RegistryTest",
                "name": "test_skeleton_duplicate_function_registration_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.autobuilders.autobuilders_test.RegistryTest",
                "name": "test_skeleton_registers",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.experimental.autobuilders.autobuilders_test.RegistryTest",
                "name": "test_validator_registers",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.extensions.flax_test.FlaxTest",
                "name": "test_auto_config_classmethod",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.extensions.tf_test.TfTest",
                "name": "test_codegen",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.extensions.tf_test.TfTest",
                "name": "test_default_printing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.extensions.tf_test.TfTest",
                "name": "test_graphviz",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.extensions.tf_test.TfTest",
                "name": "test_history_printing",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.extensions.tf_test.TfTest",
                "name": "test_int_does_not_get_printed_as_dtype",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.extensions.tf_test.TfTest",
                "name": "test_py_val_to_cst_converter0",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.extensions.tf_test.TfTest",
                "name": "test_py_val_to_cst_converter1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.extensions.tf_test.TfTest",
                "name": "test_py_val_to_cst_converter2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.extensions.tf_test.TfTest",
                "name": "test_py_val_to_cst_converter3",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.extensions.tf_test.TfTest",
                "name": "test_py_val_to_cst_converter4",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.extensions.tf_test.TfTest",
                "name": "test_serialization",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.extensions.tf_test.TfTest",
                "name": "test_special_value_codegen",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.extensions.tf_test.TfTest",
                "name": "test_str_printing",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.nested_values_test.NestedValuesTest",
                "name": "test_calculate_nested_value_depth0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.nested_values_test.NestedValuesTest",
                "name": "test_calculate_nested_value_depth1",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.nested_values_test.NestedValuesTest",
                "name": "test_calculate_nested_value_depth2",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.nested_values_test.NestedValuesTest",
                "name": "test_calculate_nested_value_depth3",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.nested_values_test.NestedValuesTest",
                "name": "test_calculate_nested_value_depth4",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.nested_values_test.NestedValuesTest",
                "name": "test_generate_can_have_shared_values",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.nested_values_test.NestedValuesTest",
                "name": "test_generate_max_container_size0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.nested_values_test.NestedValuesTest",
                "name": "test_generate_max_container_size1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.nested_values_test.NestedValuesTest",
                "name": "test_generate_max_container_size2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.nested_values_test.NestedValuesTest",
                "name": "test_generate_max_container_size3",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.nested_values_test.NestedValuesTest",
                "name": "test_generate_max_depth_no_sharing0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.nested_values_test.NestedValuesTest",
                "name": "test_generate_max_depth_no_sharing1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.nested_values_test.NestedValuesTest",
                "name": "test_generate_max_depth_no_sharing2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.nested_values_test.NestedValuesTest",
                "name": "test_generate_max_depth_no_sharing3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.nested_values_test.NestedValuesTest",
                "name": "test_generate_shared_values_can_be_disabled",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.ParsePathTest",
                "name": "test_parse_path0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.ParsePathTest",
                "name": "test_parse_path1",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.ParsePathTest",
                "name": "test_parse_path2",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.ParsePathTest",
                "name": "test_parse_path3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.ParsePathTest",
                "name": "test_parse_path4",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.ParsePathTest",
                "name": "test_parse_path5",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.ParsePathTest",
                "name": "test_parse_path6",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.ParsePathTest",
                "name": "test_parse_path7",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.ParsePathTest",
                "name": "test_parse_path8",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.ParsePathTest",
                "name": "test_parse_path9",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.ParsePathTest",
                "name": "test_parse_path_error0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.ParsePathTest",
                "name": "test_parse_path_error1",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.ParsePathTest",
                "name": "test_parse_path_error2",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.ParsePathTest",
                "name": "test_parse_path_error3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.ParseReferenceTest",
                "name": "test_parse_reference0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.ParseReferenceTest",
                "name": "test_parse_reference1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.ParseReferenceTest",
                "name": "test_parse_reference2",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.ParseReferenceTest",
                "name": "test_parse_reference3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.DescribeDagDiffsTest",
                "name": "test_adding_and_removing_tags_is_equivalent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.DescribeDagDiffsTest",
                "name": "test_big_leaf_diff",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.DescribeDagDiffsTest",
                "name": "test_config_arg_names_diff",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.DescribeDagDiffsTest",
                "name": "test_config_callable_diff",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.DescribeDagDiffsTest",
                "name": "test_config_default_is_different",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.DescribeDagDiffsTest",
                "name": "test_dict_keys_diff",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.DescribeDagDiffsTest",
                "name": "test_leaf_diff",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.DescribeDagDiffsTest",
                "name": "test_list_len_diff",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.DescribeDagDiffsTest",
                "name": "test_multiple_difference",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.DescribeDagDiffsTest",
                "name": "test_no_diffs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.DescribeDagDiffsTest",
                "name": "test_no_sharing_diff_for_internable_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.DescribeDagDiffsTest",
                "name": "test_replace_value_with_copy",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.DescribeDagDiffsTest",
                "name": "test_replace_value_with_unrelated_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.DescribeDagDiffsTest",
                "name": "test_set_diff",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.DescribeDagDiffsTest",
                "name": "test_sharing_diff",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.DescribeDagDiffsTest",
                "name": "test_sharing_not_detected_in_non_traversable_object",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.DescribeDagDiffsTest",
                "name": "test_tuple_len_diff",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.DescribeDagDiffsTest",
                "name": "test_type_diff",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.TestCaseTest",
                "name": "test_dag_equal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.TestCaseTest",
                "name": "test_dag_not_equal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "fiddle._src.testing.test_util_test.TestCaseTest",
                "name": "test_dag_sharing_diff",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[81ca298f-73bc-487f-be04-e4aff3f23de6/build] \ud83d\ude80  Start image=crawlergpt:latest\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/google-fiddle] user=0 workdir=\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build] \ud83e\uddea  Matrix: map[python-version:3.8]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build] \u2b50 Run Main actions/checkout@v3\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \u2705  Success - Main actions/checkout@v3\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build] \u2b50 Run Main Set up Python 3.8\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/c16b7fc1-a9a3-4c53-b05d-fd8a0056c574/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \u2753  ::group::Installed versions\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udcac  ::debug::isExplicit: \n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udcac  ::debug::explicit? false\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udcac  ::debug::explicit? true\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udcac  ::debug::explicit? true\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udcac  ::debug::explicit? true\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udcac  ::debug::explicit? true\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udcac  ::debug::explicit? true\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udcac  ::debug::explicit? true\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udcac  ::debug::matched: 3.8.11\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Successfully set up CPython (3.8.11)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \u2753  ::endgroup::\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \u2705  Success - Main Set up Python 3.8\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib/pkgconfig\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \u2699  ::set-output:: python-version=3.8.11\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.8.11/x64/bin/python\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build] \u2b50 Run Main Install dependencies and package\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages (21.2.4)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting pip\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Installing collected packages: pip\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Attempting uninstall: pip\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |     Found existing installation: pip 21.2.4\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |     Uninstalling pip-21.2.4:\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |       Successfully uninstalled pip-21.2.4\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Successfully installed pip-23.1.2\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Obtaining file:///tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/google-fiddle\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Installing build dependencies: started\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Installing build dependencies: finished with status 'done'\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Checking if build backend supports build_editable: started\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Checking if build backend supports build_editable: finished with status 'done'\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Getting requirements to build editable: started\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Getting requirements to build editable: finished with status 'done'\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Preparing editable metadata (pyproject.toml): started\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Preparing editable metadata (pyproject.toml): finished with status 'done'\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting absl-py (from fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading absl_py-1.4.0-py3-none-any.whl (126 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 126.5/126.5 kB 9.3 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting graphviz (from fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading graphviz-0.20.1-py3-none-any.whl (47 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 47.0/47.0 kB 4.4 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting libcst (from fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading libcst-1.0.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.9 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.9/2.9 MB 17.3 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting typing-extensions (from fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading typing_extensions-4.6.3-py3-none-any.whl (31 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting cloudpickle (from fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading cloudpickle-2.2.1-py3-none-any.whl (25 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting flax (from fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading flax-0.6.11-py3-none-any.whl (227 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 227.2/227.2 kB 5.0 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting pytest (from fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading pytest-7.4.0-py3-none-any.whl (323 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 323.6/323.6 kB 11.6 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting pytype (from fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading pytype-2023.6.16-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.9 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.9/3.9 MB 8.9 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting seqio-nightly (from fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading seqio_nightly-0.0.15.dev20230628-py3-none-any.whl (347 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 347.2/347.2 kB 2.5 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting etils[epath] (from fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading etils-1.3.0-py3-none-any.whl (126 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 126.4/126.4 kB 5.3 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting numpy>=1.12 (from flax->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading numpy-1.24.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.3 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 17.3/17.3 MB 6.9 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting jax>=0.4.2 (from flax->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading jax-0.4.13.tar.gz (1.3 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.3/1.3 MB 5.8 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Installing build dependencies: started\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Installing build dependencies: finished with status 'done'\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Getting requirements to build wheel: started\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Getting requirements to build wheel: finished with status 'done'\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Preparing metadata (pyproject.toml): started\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting msgpack (from flax->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading msgpack-1.0.5-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (322 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 322.4/322.4 kB 4.8 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting optax (from flax->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading optax-0.1.5-py3-none-any.whl (164 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 164.6/164.6 kB 2.1 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting orbax-checkpoint (from flax->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading orbax_checkpoint-0.2.3-py3-none-any.whl (81 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 81.4/81.4 kB 1.7 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting tensorstore (from flax->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading tensorstore-0.1.39-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.1 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 12.1/12.1 MB 2.8 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting rich>=11.1 (from flax->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading rich-13.4.2-py3-none-any.whl (239 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 239.4/239.4 kB 8.1 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting PyYAML>=5.4.1 (from flax->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading PyYAML-6.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (701 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 701.2/701.2 kB 5.6 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting typing-inspect>=0.4.0 (from libcst->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading typing_inspect-0.9.0-py3-none-any.whl (8.8 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting iniconfig (from pytest->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting packaging (from pytest->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 223.5 kB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting pluggy<2.0,>=0.12 (from pytest->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting exceptiongroup>=1.0.0rc8 (from pytest->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting tomli>=1.0.0 (from pytest->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting attrs>=21.4.0 (from pytype->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.2/61.2 kB 488.6 kB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting importlab>=0.8 (from pytype->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading importlab-0.8-py2.py3-none-any.whl (21 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting jinja2>=3.1.2 (from pytype->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading Jinja2-3.1.2-py3-none-any.whl (133 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 133.1/133.1 kB 441.3 kB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting libcst (from fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading libcst-0.4.9-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.8 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.8/2.8 MB 14.3 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting networkx<3.2 (from pytype->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading networkx-3.1-py3-none-any.whl (2.1 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 16.4 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting ninja>=1.10.0.post2 (from pytype->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading ninja-1.11.1-py2.py3-none-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (145 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 146.0/146.0 kB 3.4 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting pydot>=1.4.2 (from pytype->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading pydot-1.4.2-py2.py3-none-any.whl (21 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting tabulate>=0.8.10 (from pytype->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading tabulate-0.9.0-py3-none-any.whl (35 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting toml>=0.10.2 (from pytype->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading toml-0.10.2-py2.py3-none-any.whl (16 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting clu (from seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading clu-0.0.9-py3-none-any.whl (98 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 98.2/98.2 kB 1.8 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting editdistance (from seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading editdistance-0.6.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (283 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 283.4/283.4 kB 4.4 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting jaxlib (from seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading jaxlib-0.4.13-cp38-cp38-manylinux2014_x86_64.whl (71.6 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 71.6/71.6 MB 8.4 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting pyglove (from seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading pyglove-0.3.0-py3-none-any.whl (505 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 505.6/505.6 kB 4.5 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting sentencepiece (from seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading sentencepiece-0.1.99-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.3 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.3/1.3 MB 10.9 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting tensorflow-text (from seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading tensorflow_text-2.12.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (6.0 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 6.0/6.0 MB 12.6 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting tfds-nightly (from seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading tfds_nightly-4.9.2.dev202306280046-py3-none-any.whl (5.0 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 5.0/5.0 MB 14.1 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting protobuf<=3.20.3 (from seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading protobuf-3.20.3-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl (1.0 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.0/1.0 MB 13.4 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting ml-dtypes>=0.1.0 (from jax>=0.4.2->flax->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading ml_dtypes-0.2.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.0 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.0/1.0 MB 6.2 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting opt-einsum (from jax>=0.4.2->flax->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading opt_einsum-3.3.0-py3-none-any.whl (65 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 65.5/65.5 kB 1.3 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting scipy>=1.7 (from jax>=0.4.2->flax->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading scipy-1.10.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (34.5 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 34.5/34.5 MB 9.6 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting importlib-metadata>=4.6 (from jax>=0.4.2->flax->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting MarkupSafe>=2.0 (from jinja2>=3.1.2->pytype->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading MarkupSafe-2.1.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting pyparsing>=2.1.4 (from pydot>=1.4.2->pytype->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading pyparsing-3.1.0-py3-none-any.whl (102 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 102.6/102.6 kB 3.4 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting markdown-it-py>=2.2.0 (from rich>=11.1->flax->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading markdown_it_py-3.0.0-py3-none-any.whl (87 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 87.5/87.5 kB 5.0 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting pygments<3.0.0,>=2.13.0 (from rich>=11.1->flax->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading Pygments-2.15.1-py3-none-any.whl (1.1 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.1/1.1 MB 13.7 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting mypy-extensions>=0.3.0 (from typing-inspect>=0.4.0->libcst->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting ml-collections (from clu->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading ml_collections-0.1.1.tar.gz (77 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 77.9/77.9 kB 8.7 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Installing build dependencies: started\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Installing build dependencies: finished with status 'done'\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Getting requirements to build wheel: started\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Getting requirements to build wheel: finished with status 'done'\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Preparing metadata (pyproject.toml): started\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting wrapt (from clu->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading wrapt-1.15.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (81 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 81.5/81.5 kB 1.9 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting importlib_resources (from etils[epath]->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading importlib_resources-5.12.0-py3-none-any.whl (36 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting zipp (from etils[epath]->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting chex>=0.1.5 (from optax->flax->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading chex-0.1.7-py3-none-any.whl (89 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 89.6/89.6 kB 1.6 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting cached_property (from orbax-checkpoint->flax->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading cached_property-1.5.2-py2.py3-none-any.whl (7.6 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting nest_asyncio (from orbax-checkpoint->flax->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading nest_asyncio-1.5.6-py3-none-any.whl (5.2 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting tensorflow-hub>=0.8.0 (from tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading tensorflow_hub-0.13.0-py2.py3-none-any.whl (100 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 100.6/100.6 kB 6.4 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting tensorflow<2.13,>=2.12.0 (from tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading tensorflow-2.12.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (585.9 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 585.9/585.9 MB 2.6 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting array-record (from tfds-nightly->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading array_record-0.4.0-py38-none-any.whl (3.0 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.0/3.0 MB 15.1 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting click (from tfds-nightly->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 96.6/96.6 kB 4.5 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting dm-tree (from tfds-nightly->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading dm_tree-0.1.8-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (152 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 152.9/152.9 kB 4.5 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting promise (from tfds-nightly->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading promise-2.3.tar.gz (19 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Installing build dependencies: started\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Installing build dependencies: finished with status 'done'\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Getting requirements to build wheel: started\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Getting requirements to build wheel: finished with status 'done'\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Preparing metadata (pyproject.toml): started\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting psutil (from tfds-nightly->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading psutil-5.9.5-cp36-abi3-manylinux_2_12_x86_64.manylinux2010_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (282 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 282.1/282.1 kB 25.5 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting requests>=2.19.0 (from tfds-nightly->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.6/62.6 kB 1.8 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting tensorflow-metadata (from tfds-nightly->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading tensorflow_metadata-1.13.1-py3-none-any.whl (28 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting termcolor (from tfds-nightly->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading termcolor-2.3.0-py3-none-any.whl (6.9 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting tqdm (from tfds-nightly->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading tqdm-4.65.0-py3-none-any.whl (77 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 77.1/77.1 kB 1.3 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting toolz>=0.9.0 (from chex>=0.1.5->optax->flax->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading toolz-0.12.0-py3-none-any.whl (55 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 55.8/55.8 kB 1.2 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting mdurl~=0.1 (from markdown-it-py>=2.2.0->rich>=11.1->flax->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading mdurl-0.1.2-py3-none-any.whl (10.0 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting charset-normalizer<4,>=2 (from requests>=2.19.0->tfds-nightly->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading charset_normalizer-3.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (195 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 195.9/195.9 kB 2.8 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting idna<4,>=2.5 (from requests>=2.19.0->tfds-nightly->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 1.8 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting urllib3<3,>=1.21.1 (from requests>=2.19.0->tfds-nightly->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 123.6/123.6 kB 4.4 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting certifi>=2017.4.17 (from requests>=2.19.0->tfds-nightly->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 2.5 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting astunparse>=1.6.0 (from tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading astunparse-1.6.3-py2.py3-none-any.whl (12 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting flatbuffers>=2.0 (from tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading flatbuffers-23.5.26-py2.py3-none-any.whl (26 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting gast<=0.4.0,>=0.2.1 (from tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading gast-0.4.0-py3-none-any.whl (9.8 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting google-pasta>=0.1.1 (from tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading google_pasta-0.2.0-py3-none-any.whl (57 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 57.5/57.5 kB 2.3 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting grpcio<2.0,>=1.24.3 (from tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading grpcio-1.56.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (5.2 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 5.2/5.2 MB 14.6 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting h5py>=2.9.0 (from tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading h5py-3.9.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (4.8 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4.8/4.8 MB 7.2 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting keras<2.13,>=2.12.0 (from tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading keras-2.12.0-py2.py3-none-any.whl (1.7 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.7/1.7 MB 8.6 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting libclang>=13.0.0 (from tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading libclang-16.0.0-py2.py3-none-manylinux2010_x86_64.whl (22.9 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 22.9/22.9 MB 10.0 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting numpy>=1.12 (from flax->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading numpy-1.23.5-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.1 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 17.1/17.1 MB 15.0 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages (from tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6) (56.0.0)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting six>=1.12.0 (from tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting tensorboard<2.13,>=2.12 (from tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading tensorboard-2.12.3-py3-none-any.whl (5.6 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 5.6/5.6 MB 10.5 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting tensorflow-estimator<2.13,>=2.12.0 (from tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading tensorflow_estimator-2.12.0-py2.py3-none-any.whl (440 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 440.7/440.7 kB 7.2 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting wrapt (from clu->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading wrapt-1.14.1-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (81 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 81.0/81.0 kB 8.5 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting tensorflow-io-gcs-filesystem>=0.23.1 (from tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading tensorflow_io_gcs_filesystem-0.32.0-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (2.4 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.4/2.4 MB 18.0 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting contextlib2 (from ml-collections->clu->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading contextlib2-21.6.0-py2.py3-none-any.whl (13 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting googleapis-common-protos<2,>=1.52.0 (from tensorflow-metadata->tfds-nightly->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading googleapis_common_protos-1.59.1-py2.py3-none-any.whl (224 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 224.5/224.5 kB 16.0 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting wheel<1.0,>=0.23.0 (from astunparse>=1.6.0->tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Using cached wheel-0.40.0-py3-none-any.whl (64 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting google-auth<3,>=1.6.3 (from tensorboard<2.13,>=2.12->tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading google_auth-2.21.0-py2.py3-none-any.whl (182 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 182.1/182.1 kB 2.0 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting google-auth-oauthlib<1.1,>=0.5 (from tensorboard<2.13,>=2.12->tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading google_auth_oauthlib-1.0.0-py2.py3-none-any.whl (18 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting markdown>=2.6.8 (from tensorboard<2.13,>=2.12->tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading Markdown-3.4.3-py3-none-any.whl (93 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 93.9/93.9 kB 1.7 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting tensorboard-data-server<0.8.0,>=0.7.0 (from tensorboard<2.13,>=2.12->tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading tensorboard_data_server-0.7.1-py3-none-manylinux2014_x86_64.whl (6.6 MB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 6.6/6.6 MB 13.9 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting werkzeug>=1.0.1 (from tensorboard<2.13,>=2.12->tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading Werkzeug-2.3.6-py3-none-any.whl (242 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 242.5/242.5 kB 2.6 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting cachetools<6.0,>=2.0.0 (from google-auth<3,>=1.6.3->tensorboard<2.13,>=2.12->tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading cachetools-5.3.1-py3-none-any.whl (9.3 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting pyasn1-modules>=0.2.1 (from google-auth<3,>=1.6.3->tensorboard<2.13,>=2.12->tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading pyasn1_modules-0.3.0-py2.py3-none-any.whl (181 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 181.3/181.3 kB 7.6 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting rsa<5,>=3.1.4 (from google-auth<3,>=1.6.3->tensorboard<2.13,>=2.12->tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading rsa-4.9-py3-none-any.whl (34 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting urllib3<3,>=1.21.1 (from requests>=2.19.0->tfds-nightly->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 143.1/143.1 kB 16.5 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting requests-oauthlib>=0.7.0 (from google-auth-oauthlib<1.1,>=0.5->tensorboard<2.13,>=2.12->tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading requests_oauthlib-1.3.1-py2.py3-none-any.whl (23 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting pyasn1<0.6.0,>=0.4.6 (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tensorboard<2.13,>=2.12->tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading pyasn1-0.5.0-py2.py3-none-any.whl (83 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 83.9/83.9 kB 7.9 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Collecting oauthlib>=3.0.0 (from requests-oauthlib>=0.7.0->google-auth-oauthlib<1.1,>=0.5->tensorboard<2.13,>=2.12->tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->fiddle==0.2.6)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Downloading oauthlib-3.2.2-py3-none-any.whl (151 kB)\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 151.7/151.7 kB 5.9 MB/s eta 0:00:00\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Building wheels for collected packages: fiddle, jax, ml-collections, promise\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Building editable for fiddle (pyproject.toml): started\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Building editable for fiddle (pyproject.toml): finished with status 'done'\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Created wheel for fiddle: filename=fiddle-0.2.6-0.editable-py3-none-any.whl size=7173 sha256=92367aa5bf23c365f8c56b5ddfe451534125eed59f18481a6ee4d89341528e75\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Stored in directory: /tmp/pip-ephem-wheel-cache-5n2inj5r/wheels/0e/f9/09/e15eb481a20a0565421058b74317ed4d0c59b9a733e2235bf4\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Building wheel for jax (pyproject.toml): started\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Building wheel for jax (pyproject.toml): finished with status 'done'\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Created wheel for jax: filename=jax-0.4.13-py3-none-any.whl size=1518707 sha256=614d9f6c99a9ca3754a5052d01c51c8a2ca5ecaa82e7dd9fa8b2eca46c972d2d\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/46/d9/15/d2800d4089dc4c77299ac7513c6aa1036f5491edbd2bf6ba16\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Building wheel for ml-collections (pyproject.toml): started\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Building wheel for ml-collections (pyproject.toml): finished with status 'done'\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Created wheel for ml-collections: filename=ml_collections-0.1.1-py3-none-any.whl size=94506 sha256=38c18db7dc5237895b62fcbf88eff216cdeedb17f3c80fce36a776c15813a11b\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/6d/9f/a9/9e8309035a5bf09ed9086bbca8c9b74cb6413d3eb203e2bc8c\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Building wheel for promise (pyproject.toml): started\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Building wheel for promise (pyproject.toml): finished with status 'done'\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Created wheel for promise: filename=promise-2.3-py3-none-any.whl size=21484 sha256=fca8ca7cb7871bfb5c72e7a078f0db4304957dc4b1c9ec30242b006c8ba27869\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/54/aa/01/724885182f93150035a2a91bce34a12877e8067a97baaf5dc8\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Successfully built fiddle jax ml-collections promise\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Installing collected packages: sentencepiece, pyglove, ninja, msgpack, libclang, flatbuffers, dm-tree, cached_property, zipp, wrapt, wheel, urllib3, typing-extensions, tqdm, toolz, tomli, toml, termcolor, tensorflow-io-gcs-filesystem, tensorflow-estimator, tensorboard-data-server, tabulate, six, PyYAML, pyparsing, pygments, pyasn1, psutil, protobuf, pluggy, packaging, oauthlib, numpy, networkx, nest_asyncio, mypy-extensions, mdurl, MarkupSafe, keras, iniconfig, idna, grpcio, graphviz, gast, exceptiongroup, etils, editdistance, contextlib2, cloudpickle, click, charset-normalizer, certifi, cachetools, attrs, absl-py, werkzeug, typing-inspect, tensorstore, tensorflow-hub, scipy, rsa, requests, pytest, pydot, pyasn1-modules, promise, opt-einsum, ml-dtypes, ml-collections, markdown-it-py, jinja2, importlib_resources, importlib-metadata, importlab, h5py, googleapis-common-protos, google-pasta, astunparse, tensorflow-metadata, rich, requests-oauthlib, markdown, libcst, jaxlib, jax, google-auth, pytype, orbax-checkpoint, google-auth-oauthlib, fiddle, chex, array-record, tensorboard, optax, tfds-nightly, tensorflow, flax, tensorflow-text, clu, seqio-nightly\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | Successfully installed MarkupSafe-2.1.3 PyYAML-6.0 absl-py-1.4.0 array-record-0.4.0 astunparse-1.6.3 attrs-23.1.0 cached_property-1.5.2 cachetools-5.3.1 certifi-2023.5.7 charset-normalizer-3.1.0 chex-0.1.7 click-8.1.3 cloudpickle-2.2.1 clu-0.0.9 contextlib2-21.6.0 dm-tree-0.1.8 editdistance-0.6.2 etils-1.3.0 exceptiongroup-1.1.1 fiddle-0.2.6 flatbuffers-23.5.26 flax-0.6.11 gast-0.4.0 google-auth-2.21.0 google-auth-oauthlib-1.0.0 google-pasta-0.2.0 googleapis-common-protos-1.59.1 graphviz-0.20.1 grpcio-1.56.0 h5py-3.9.0 idna-3.4 importlab-0.8 importlib-metadata-6.7.0 importlib_resources-5.12.0 iniconfig-2.0.0 jax-0.4.13 jaxlib-0.4.13 jinja2-3.1.2 keras-2.12.0 libclang-16.0.0 libcst-0.4.9 markdown-3.4.3 markdown-it-py-3.0.0 mdurl-0.1.2 ml-collections-0.1.1 ml-dtypes-0.2.0 msgpack-1.0.5 mypy-extensions-1.0.0 nest_asyncio-1.5.6 networkx-3.1 ninja-1.11.1 numpy-1.23.5 oauthlib-3.2.2 opt-einsum-3.3.0 optax-0.1.5 orbax-checkpoint-0.2.3 packaging-23.1 pluggy-1.2.0 promise-2.3 protobuf-3.20.3 psutil-5.9.5 pyasn1-0.5.0 pyasn1-modules-0.3.0 pydot-1.4.2 pyglove-0.3.0 pygments-2.15.1 pyparsing-3.1.0 pytest-7.4.0 pytype-2023.6.16 requests-2.31.0 requests-oauthlib-1.3.1 rich-13.4.2 rsa-4.9 scipy-1.10.1 sentencepiece-0.1.99 seqio-nightly-0.0.15.dev20230628 six-1.16.0 tabulate-0.9.0 tensorboard-2.12.3 tensorboard-data-server-0.7.1 tensorflow-2.12.0 tensorflow-estimator-2.12.0 tensorflow-hub-0.13.0 tensorflow-io-gcs-filesystem-0.32.0 tensorflow-metadata-1.13.1 tensorflow-text-2.12.1 tensorstore-0.1.39 termcolor-2.3.0 tfds-nightly-4.9.2.dev202306280046 toml-0.10.2 tomli-2.0.1 toolz-0.12.0 tqdm-4.65.0 typing-extensions-4.6.3 typing-inspect-0.9.0 urllib3-1.26.16 werkzeug-2.3.6 wheel-0.40.0 wrapt-1.14.1 zipp-3.15.0\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | \n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | [notice] A new release of pip is available: 21.1.1 -> 23.1.2\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | [notice] To update, run: pip install --upgrade pip\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \u2705  Success - Main Install dependencies and package\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build] \u2b50 Run Main Test with pytest\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | ============================= test session starts ==============================\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | platform linux -- Python 3.8.11, pytest-7.4.0, pluggy-1.2.0\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/google-fiddle\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | collected 919 items\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | \n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/config_test.py ........................s......................... [  5%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | ......................................                                   [  9%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/arg_factory_test.py ............s....s....................   [ 13%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/building_test.py .....                                       [ 14%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/config_test.py ........................s.................... [ 19%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | ..................................................................       [ 26%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/daglish_extensions_test.py ....                              [ 26%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/daglish_test.py ......................................       [ 30%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/diffing_test.py ............................................ [ 35%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | ...............................                                          [ 39%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/history_test.py ...........                                  [ 40%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/materialize_test.py ..                                       [ 40%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/module_reflection_test.py .....                              [ 41%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/mutate_buildable_test.py ..                                  [ 41%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/printing_test.py ..........s....................             [ 44%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/reraised_exception_test.py ....                              [ 45%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/selectors_test.py ................                           [ 46%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/signatures_test.py .................                         [ 48%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/tagging_test.py ............................................ [ 53%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | ....................                                                     [ 55%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/codegen/codegen_test.py .........                            [ 56%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/codegen/import_manager_test.py .................             [ 58%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/codegen/namespace_test.py .......                            [ 59%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/codegen/py_val_to_cst_converter_test.py .................... [ 61%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | .....................                                                    [ 63%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/codegen/auto_config/code_ir_test.py ....                     [ 64%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/codegen/auto_config/complex_to_variables_test.py .....       [ 64%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/codegen/auto_config/experimental_top_level_api_test.py ..... [ 65%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | ........                                                                 [ 66%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/codegen/auto_config/get_history_comments_test.py ..          [ 66%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/codegen/auto_config/init_task_test.py .                      [ 66%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/codegen/auto_config/ir_printer_test.py ....                  [ 66%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/codegen/auto_config/ir_to_cst_test.py .....                  [ 67%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/codegen/auto_config/make_symbolic_references_test.py ....... [ 68%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |                                                                          [ 68%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/codegen/auto_config/naming_test.py ..................        [ 70%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/codegen/auto_config/parents_first_traversal_test.py ..       [ 70%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/codegen/auto_config/shared_to_variables_test.py .....        [ 70%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/codegen/auto_config/split_arg_factories_test.py ..           [ 71%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/codegen/auto_config/sub_fixture_test.py .....                [ 71%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/debug/grep_test.py .......                                   [ 72%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/experimental/auto_config_test.py .....................s..... [ 75%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | .................................s........................ss..           [ 82%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/experimental/daglish_legacy_test.py .....................    [ 84%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/experimental/dataclasses_test.py ....................        [ 86%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/experimental/dict_config_test.py ..s..                       [ 87%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/experimental/fixture_node_test.py ...                        [ 87%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/experimental/namespace_config_test.py ..s..                  [ 87%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/experimental/tied_value_test.py ..............               [ 89%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/experimental/transform_test.py ........                      [ 90%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/experimental/with_tags_test.py ..                            [ 90%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/experimental/yaml_serialization_test.py ......               [ 91%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/experimental/autobuilders/autobuilders_test.py ............. [ 92%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   |                                                                          [ 92%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/extensions/flax_test.py .                                    [ 92%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/extensions/tf_test.py .............                          [ 94%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/testing/nested_values_test.py ...............                [ 95%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | fiddle/_src/testing/test_util_test.py .................................. [ 99%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | .....                                                                    [100%]\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | \n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/google-fiddle/report.xml -\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   | ======================= 908 passed, 11 skipped in 35.68s =======================\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \u2705  Success - Main Test with pytest\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build] \u2b50 Run Post Set up Python 3.8\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build]   \u2705  Success - Post Set up Python 3.8\n[81ca298f-73bc-487f-be04-e4aff3f23de6/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/google-fiddle/.github/workflows/testing-crawler.yaml",
        "build_tool": "pytest",
        "elapsed_time": 339.2187979221344
    }
}