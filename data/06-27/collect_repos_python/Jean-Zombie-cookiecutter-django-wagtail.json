{
    "repository": "Jean-Zombie/cookiecutter-django-wagtail",
    "stars": 57,
    "language": "python",
    "size": 5777,
    "clone_url": "https://github.com/Jean-Zombie/cookiecutter-django-wagtail.git",
    "timestamp": "2023-06-28T13:40:53.266026Z",
    "clone_success": true,
    "number_of_actions": 6,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "unknown",
        "unknown",
        "unknown",
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [],
        "stdout": "[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ] \ud83d\ude80  Start image=crawlergpt:latest\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest] \ud83d\ude80  Start image=crawlergpt:latest\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ] \ud83d\ude80  Start image=crawlergpt:latest\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Jean-Zombie-cookiecutter-django-wagtail] user=0 workdir=\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Jean-Zombie-cookiecutter-django-wagtail] user=0 workdir=\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Jean-Zombie-cookiecutter-django-wagtail] user=0 workdir=\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ] \ud83e\uddea  Matrix: map[script:map[args: name:Basic]]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ] \u2b50 Run Main actions/checkout@v3\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \u2705  Success - Main actions/checkout@v3\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ] \u2b50 Run Main actions/setup-python@v4\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udc33  docker cp src=/tmp/act-cache/5cd7d08f-7d8d-45fc-b1ef-57f7ce1004cd/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2601  git clone 'https://github.com/actions/setup-node' # ref=v3\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest] \ud83e\uddea  Matrix: map[os:ubuntu-latest]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest] \u2b50 Run Main actions/checkout@v3\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \u2705  Success - Main actions/checkout@v3\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest] \u2b50 Run Main actions/setup-python@v4\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udc33  docker cp src=/tmp/act-cache/5cd7d08f-7d8d-45fc-b1ef-57f7ce1004cd/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ] \ud83e\uddea  Matrix: map[script:map[args:use_celery=y frontend_pipeline='Django Compressor' name:Celery]]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ] \u2b50 Run Main actions/checkout@v3\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2705  Success - Main actions/checkout@v3\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ] \u2b50 Run Main actions/setup-python@v4\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udc33  docker cp src=/tmp/act-cache/5cd7d08f-7d8d-45fc-b1ef-57f7ce1004cd/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \u2753  ::group::Installed versions\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::Semantic version spec of 3.10 is 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::explicit? false\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::evaluating 6 versions\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::match not found\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Version 3.10 was not found in the local cache\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::Getting manifest from actions/python-versions@main\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::set auth\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \u2753  ::group::Installed versions\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::Semantic version spec of 3.10 is 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::isExplicit: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::explicit? false\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::match not found\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Version 3.10 was not found in the local cache\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::Getting manifest from actions/python-versions@main\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::set auth\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.12.0-beta.3 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.12.0-beta.2 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.12.0-beta.1 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.12.0-alpha.7 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.12.0-alpha.6 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.12.0-alpha.5 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.12.0-alpha.4 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.12.0-alpha.3 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.12.0-alpha.2 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.12.0-alpha.1 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.11.4 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.11.3 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.11.2 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.11.1 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.11.0 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.11.0-rc.2 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.11.0-rc.1 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.11.0-beta.5 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.11.0-beta.4 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.11.0-beta.3 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.11.0-beta.2 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.11.0-beta.1 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.11.0-alpha.7 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.11.0-alpha.6 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.11.0-alpha.5 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.11.0-alpha.4 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.11.0-alpha.3 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.11.0-alpha.2 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.11.0-alpha.1 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::check 3.10.12 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::matched 3.10.12\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Version 3.10 is available for downloading\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Download from \"https://github.com/actions/python-versions/releases/download/3.10.12-5200619051/python-3.10.12-linux-20.04-x64.tar.gz\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/python-versions/releases/download/3.10.12-5200619051/python-3.10.12-linux-20.04-x64.tar.gz\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::Destination /tmp/72b4ea12-e0fd-49de-9cc3-435980a362c4\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::set auth\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.12.0-beta.3 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.12.0-beta.2 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.12.0-beta.1 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.7 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.6 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.5 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.4 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.3 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.2 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.1 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.11.4 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.11.3 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.11.2 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.11.1 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.11.0 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.11.0-rc.2 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.11.0-rc.1 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.11.0-beta.5 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.11.0-beta.4 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.11.0-beta.3 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.11.0-beta.2 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.11.0-beta.1 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.7 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.6 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.5 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.4 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.3 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.2 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.1 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::check 3.10.12 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::matched 3.10.12\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Version 3.10 is available for downloading\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Download from \"https://github.com/actions/python-versions/releases/download/3.10.12-5200619051/python-3.10.12-linux-20.04-x64.tar.gz\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/python-versions/releases/download/3.10.12-5200619051/python-3.10.12-linux-20.04-x64.tar.gz\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::Destination /tmp/cab9af75-8888-4446-b09e-2db1b91241a8\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::set auth\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::download complete\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Extract downloaded archive\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::Checking tar --version\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/35de16d9-ea90-4c9a-aeaa-c68e1378dd95 -f /tmp/cab9af75-8888-4446-b09e-2db1b91241a8\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::download complete\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Extract downloaded archive\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::Checking tar --version\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/b72bcfc6-f260-435a-89aa-49a9d16b242f -f /tmp/72b4ea12-e0fd-49de-9cc3-435980a362c4\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Execute installation script\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Check if Python hostedtoolcache folder exist...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Create Python 3.10.12 folder\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Copy Python binaries to hostedtoolcache folder\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Execute installation script\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Check if Python hostedtoolcache folder exist...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Create Python 3.10.12 folder\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Copy Python binaries to hostedtoolcache folder\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Create additional symlinks (Required for the UsePythonVersion Azure Pipelines task and the setup-python GitHub Action)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Upgrading pip...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Create additional symlinks (Required for the UsePythonVersion Azure Pipelines task and the setup-python GitHub Action)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Upgrading pip...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Looking in links: /tmp/tmpsokn6pzw\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (65.5.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (23.0.1)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Looking in links: /tmp/tmp0hj0hcrr\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (65.5.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (23.0.1)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting pip\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 16.3 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Installing collected packages: pip\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting pip\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 18.6 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Installing collected packages: pip\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Successfully installed pip-23.1.2\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Create complete file\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::isExplicit: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::explicit? false\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::isExplicit: 3.10.12\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::evaluating 7 versions\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::matched: 3.10.12\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.10.12/x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.10.12 x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Successfully set up CPython (3.10.12)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \u2753  ::endgroup::\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::Search path '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Jean-Zombie-cookiecutter-django-wagtail'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Jean-Zombie-cookiecutter-django-wagtail/docs/requirements.txt\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Jean-Zombie-cookiecutter-django-wagtail/requirements.txt\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Jean-Zombie-cookiecutter-django-wagtail/{{cookiecutter.project_slug}}/requirements.txt\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::Found 3 files to hash.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::OS Name: Ubuntu, Version: 20.04\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [command]/opt/hostedtoolcache/Python/3.10.12/x64/bin/pip cache dir\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Successfully installed pip-23.1.2\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Create complete file\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::explicit? false\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: 3.10.12\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::evaluating 7 versions\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::matched: 3.10.12\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.10.12/x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::Found tool in cache Python 3.10.12 x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Successfully set up CPython (3.10.12)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \u2753  ::endgroup::\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::Search path '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Jean-Zombie-cookiecutter-django-wagtail'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Jean-Zombie-cookiecutter-django-wagtail/docs/requirements.txt\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Jean-Zombie-cookiecutter-django-wagtail/requirements.txt\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Jean-Zombie-cookiecutter-django-wagtail/{{cookiecutter.project_slug}}/requirements.txt\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::Found 3 files to hash.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | /home/runneradmin/.cache/pip\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::OS Name: Ubuntu, Version: 20.04\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | [command]/opt/hostedtoolcache/Python/3.10.12/x64/bin/pip cache dir\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::global cache directory path is /home/runneradmin/.cache/pip\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::Resolved Keys:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::[\"setup-python-Linux-20.04-Ubuntu-python-3.10.12-pip-f270947dc475b14133d02486981b1665ec1dc1bb1b921c906e8d5571fd107987\",\"setup-python-Linux-20.04-Ubuntu-python-3.10.12-pip\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::1.5.0\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:42495/_apis/artifactcache/cache?keys=setup-python-Linux-20.04-Ubuntu-python-3.10.12-pip-f270947dc475b14133d02486981b1665ec1dc1bb1b921c906e8d5571fd107987%252Csetup-python-Linux-20.04-Ubuntu-python-3.10.12-pip&version=79a244514713d0ea96d5d8aab70186082a897848df6e845ec8308965d2f82f4f\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | pip cache is not found\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \u2705  Success - Main actions/setup-python@v4\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.10.12/x64/lib/pkgconfig\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.12/x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.12/x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.12/x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.10.12/x64/lib\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.10.12/x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \u2699  ::set-output:: python-version=3.10.12\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.10.12/x64/bin/python\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \u2699  ::set-output:: cache-hit=false\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | /home/runneradmin/.cache/pip\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.12/x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.12/x64/bin\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::global cache directory path is /home/runneradmin/.cache/pip\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::Resolved Keys:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::[\"setup-python-Linux-20.04-Ubuntu-python-3.10.12-pip-f270947dc475b14133d02486981b1665ec1dc1bb1b921c906e8d5571fd107987\",\"setup-python-Linux-20.04-Ubuntu-python-3.10.12-pip\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::1.5.0\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:42495/_apis/artifactcache/cache?keys=setup-python-Linux-20.04-Ubuntu-python-3.10.12-pip-f270947dc475b14133d02486981b1665ec1dc1bb1b921c906e8d5571fd107987%252Csetup-python-Linux-20.04-Ubuntu-python-3.10.12-pip&version=79a244514713d0ea96d5d8aab70186082a897848df6e845ec8308965d2f82f4f\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | pip cache is not found\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \u2705  Success - Main actions/setup-python@v4\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ] \u2b50 Run Main Install dependencies\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.10.12/x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.10.12/x64/lib/pkgconfig\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.12/x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.12/x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.12/x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.10.12/x64/lib\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \u2699  ::set-output:: python-version=3.10.12\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.10.12/x64/bin/python\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \u2699  ::set-output:: cache-hit=false\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.12/x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.12/x64/bin\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest] \u2b50 Run Main Install dependencies\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2753  ::group::Installed versions\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::Semantic version spec of 3.10 is 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::isExplicit: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::explicit? false\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::match not found\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Version 3.10 was not found in the local cache\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::Getting manifest from actions/python-versions@main\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::set auth\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting cookiecutter==2.1.1 (from -r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting cookiecutter==2.1.1 (from -r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading cookiecutter-2.1.1-py2.py3-none-any.whl (36 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading cookiecutter-2.1.1-py2.py3-none-any.whl (36 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting sh==2.0.3 (from -r requirements.txt (line 2))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading sh-2.0.3-py3-none-any.whl (38 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting sh==2.0.3 (from -r requirements.txt (line 2))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading sh-2.0.3-py3-none-any.whl (38 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting binaryornot==0.4.4 (from -r requirements.txt (line 3))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading binaryornot-0.4.4-py2.py3-none-any.whl (9.0 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting binaryornot==0.4.4 (from -r requirements.txt (line 3))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading binaryornot-0.4.4-py2.py3-none-any.whl (9.0 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting black==23.3.0 (from -r requirements.txt (line 7))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading black-23.3.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.7 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting black==23.3.0 (from -r requirements.txt (line 7))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading black-23.3.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.7 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.7/1.7 MB 31.0 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.7/1.7 MB 12.9 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting isort==5.12.0 (from -r requirements.txt (line 8))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting isort==5.12.0 (from -r requirements.txt (line 8))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading isort-5.12.0-py3-none-any.whl (91 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading isort-5.12.0-py3-none-any.whl (91 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 91.2/91.2 kB 6.3 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 91.2/91.2 kB 6.1 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting flake8==6.0.0 (from -r requirements.txt (line 9))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading flake8-6.0.0-py2.py3-none-any.whl (57 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting flake8==6.0.0 (from -r requirements.txt (line 9))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading flake8-6.0.0-py2.py3-none-any.whl (57 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 57.8/57.8 kB 5.9 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 57.8/57.8 kB 7.2 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting flake8-isort==6.0.0 (from -r requirements.txt (line 10))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading flake8_isort-6.0.0-py3-none-any.whl (13 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting flake8-isort==6.0.0 (from -r requirements.txt (line 10))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading flake8_isort-6.0.0-py3-none-any.whl (13 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting pre-commit==3.2.2 (from -r requirements.txt (line 11))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading pre_commit-3.2.2-py2.py3-none-any.whl (202 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 202.7/202.7 kB 11.1 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting pre-commit==3.2.2 (from -r requirements.txt (line 11))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading pre_commit-3.2.2-py2.py3-none-any.whl (202 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 202.7/202.7 kB 5.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting tox==4.4.11 (from -r requirements.txt (line 15))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading tox-4.4.11-py3-none-any.whl (148 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 149.0/149.0 kB 10.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting tox==4.4.11 (from -r requirements.txt (line 15))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading tox-4.4.11-py3-none-any.whl (148 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 149.0/149.0 kB 3.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting pytest==7.2.2 (from -r requirements.txt (line 16))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading pytest-7.2.2-py3-none-any.whl (317 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 317.2/317.2 kB 3.9 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting pytest==7.2.2 (from -r requirements.txt (line 16))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading pytest-7.2.2-py3-none-any.whl (317 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 317.2/317.2 kB 3.1 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting pytest-cookies==0.7.0 (from -r requirements.txt (line 17))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading pytest_cookies-0.7.0-py3-none-any.whl (6.4 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting pytest-cookies==0.7.0 (from -r requirements.txt (line 17))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading pytest_cookies-0.7.0-py3-none-any.whl (6.4 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting pytest-instafail==0.5.0 (from -r requirements.txt (line 18))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading pytest_instafail-0.5.0-py3-none-any.whl (4.2 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting pytest-instafail==0.5.0 (from -r requirements.txt (line 18))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading pytest_instafail-0.5.0-py3-none-any.whl (4.2 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting pyyaml==6.0 (from -r requirements.txt (line 19))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading PyYAML-6.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (682 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting pyyaml==6.0 (from -r requirements.txt (line 19))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 682.2/682.2 kB 14.0 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading PyYAML-6.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (682 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 682.2/682.2 kB 40.8 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting PyGithub==1.58.1 (from -r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading PyGithub-1.58.1-py3-none-any.whl (312 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 312.5/312.5 kB 21.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting PyGithub==1.58.1 (from -r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading PyGithub-1.58.1-py3-none-any.whl (312 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 312.5/312.5 kB 21.0 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting gitpython==3.1.31 (from -r requirements.txt (line 24))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading GitPython-3.1.31-py3-none-any.whl (184 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting gitpython==3.1.31 (from -r requirements.txt (line 24))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading GitPython-3.1.31-py3-none-any.whl (184 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 184.3/184.3 kB 1.8 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 184.3/184.3 kB 5.4 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting jinja2==3.1.2 (from -r requirements.txt (line 25))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading Jinja2-3.1.2-py3-none-any.whl (133 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting jinja2==3.1.2 (from -r requirements.txt (line 25))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading Jinja2-3.1.2-py3-none-any.whl (133 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 133.1/133.1 kB 2.0 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 133.1/133.1 kB 4.1 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting requests==2.28.2 (from -r requirements.txt (line 26))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading requests-2.28.2-py3-none-any.whl (62 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting requests==2.28.2 (from -r requirements.txt (line 26))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading requests-2.28.2-py3-none-any.whl (62 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.8/62.8 kB 7.5 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.8/62.8 kB 7.6 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting click<9.0.0,>=7.0 (from cookiecutter==2.1.1->-r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting click<9.0.0,>=7.0 (from cookiecutter==2.1.1->-r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 96.6/96.6 kB 3.1 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 96.6/96.6 kB 2.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting jinja2-time>=0.2.0 (from cookiecutter==2.1.1->-r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting jinja2-time>=0.2.0 (from cookiecutter==2.1.1->-r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading jinja2_time-0.2.0-py2.py3-none-any.whl (6.4 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading jinja2_time-0.2.0-py2.py3-none-any.whl (6.4 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting python-slugify>=4.0.0 (from cookiecutter==2.1.1->-r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading python_slugify-8.0.1-py2.py3-none-any.whl (9.7 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting python-slugify>=4.0.0 (from cookiecutter==2.1.1->-r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading python_slugify-8.0.1-py2.py3-none-any.whl (9.7 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting chardet>=3.0.2 (from binaryornot==0.4.4->-r requirements.txt (line 3))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting chardet>=3.0.2 (from binaryornot==0.4.4->-r requirements.txt (line 3))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading chardet-5.1.0-py3-none-any.whl (199 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading chardet-5.1.0-py3-none-any.whl (199 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 199.1/199.1 kB 6.5 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 199.1/199.1 kB 5.2 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting mypy-extensions>=0.4.3 (from black==23.3.0->-r requirements.txt (line 7))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting mypy-extensions>=0.4.3 (from black==23.3.0->-r requirements.txt (line 7))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting packaging>=22.0 (from black==23.3.0->-r requirements.txt (line 7))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting packaging>=22.0 (from black==23.3.0->-r requirements.txt (line 7))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 5.6 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 5.5 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting pathspec>=0.9.0 (from black==23.3.0->-r requirements.txt (line 7))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting pathspec>=0.9.0 (from black==23.3.0->-r requirements.txt (line 7))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading pathspec-0.11.1-py3-none-any.whl (29 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading pathspec-0.11.1-py3-none-any.whl (29 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting platformdirs>=2 (from black==23.3.0->-r requirements.txt (line 7))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting platformdirs>=2 (from black==23.3.0->-r requirements.txt (line 7))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting tomli>=1.1.0 (from black==23.3.0->-r requirements.txt (line 7))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting tomli>=1.1.0 (from black==23.3.0->-r requirements.txt (line 7))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting mccabe<0.8.0,>=0.7.0 (from flake8==6.0.0->-r requirements.txt (line 9))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading mccabe-0.7.0-py2.py3-none-any.whl (7.3 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting mccabe<0.8.0,>=0.7.0 (from flake8==6.0.0->-r requirements.txt (line 9))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading mccabe-0.7.0-py2.py3-none-any.whl (7.3 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting pycodestyle<2.11.0,>=2.10.0 (from flake8==6.0.0->-r requirements.txt (line 9))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading pycodestyle-2.10.0-py2.py3-none-any.whl (41 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 41.3/41.3 kB 1.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting pycodestyle<2.11.0,>=2.10.0 (from flake8==6.0.0->-r requirements.txt (line 9))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading pycodestyle-2.10.0-py2.py3-none-any.whl (41 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 41.3/41.3 kB 669.0 kB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting pyflakes<3.1.0,>=3.0.0 (from flake8==6.0.0->-r requirements.txt (line 9))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading pyflakes-3.0.1-py2.py3-none-any.whl (62 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting pyflakes<3.1.0,>=3.0.0 (from flake8==6.0.0->-r requirements.txt (line 9))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading pyflakes-3.0.1-py2.py3-none-any.whl (62 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.8/62.8 kB 1.8 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.8/62.8 kB 5.1 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting cfgv>=2.0.0 (from pre-commit==3.2.2->-r requirements.txt (line 11))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading cfgv-3.3.1-py2.py3-none-any.whl (7.3 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting cfgv>=2.0.0 (from pre-commit==3.2.2->-r requirements.txt (line 11))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading cfgv-3.3.1-py2.py3-none-any.whl (7.3 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting identify>=1.0.0 (from pre-commit==3.2.2->-r requirements.txt (line 11))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading identify-2.5.24-py2.py3-none-any.whl (98 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 98.8/98.8 kB 4.1 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting identify>=1.0.0 (from pre-commit==3.2.2->-r requirements.txt (line 11))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading identify-2.5.24-py2.py3-none-any.whl (98 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 98.8/98.8 kB 9.8 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting nodeenv>=0.11.1 (from pre-commit==3.2.2->-r requirements.txt (line 11))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading nodeenv-1.8.0-py2.py3-none-any.whl (22 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting nodeenv>=0.11.1 (from pre-commit==3.2.2->-r requirements.txt (line 11))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading nodeenv-1.8.0-py2.py3-none-any.whl (22 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting virtualenv>=20.10.0 (from pre-commit==3.2.2->-r requirements.txt (line 11))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting virtualenv>=20.10.0 (from pre-commit==3.2.2->-r requirements.txt (line 11))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.3/3.3 MB 35.3 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.3/3.3 MB 34.5 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting cachetools>=5.3 (from tox==4.4.11->-r requirements.txt (line 15))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading cachetools-5.3.1-py3-none-any.whl (9.3 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting cachetools>=5.3 (from tox==4.4.11->-r requirements.txt (line 15))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading cachetools-5.3.1-py3-none-any.whl (9.3 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting colorama>=0.4.6 (from tox==4.4.11->-r requirements.txt (line 15))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting colorama>=0.4.6 (from tox==4.4.11->-r requirements.txt (line 15))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting filelock>=3.10.7 (from tox==4.4.11->-r requirements.txt (line 15))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading filelock-3.12.2-py3-none-any.whl (10 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting filelock>=3.10.7 (from tox==4.4.11->-r requirements.txt (line 15))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading filelock-3.12.2-py3-none-any.whl (10 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting pluggy>=1 (from tox==4.4.11->-r requirements.txt (line 15))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting pluggy>=1 (from tox==4.4.11->-r requirements.txt (line 15))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.12.0-beta.3 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.12.0-beta.2 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.12.0-beta.1 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.7 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.6 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.5 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.4 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.3 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.2 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.1 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.11.4 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.11.3 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.11.2 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.11.1 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.11.0 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.11.0-rc.2 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.11.0-rc.1 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.11.0-beta.5 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.11.0-beta.4 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.11.0-beta.3 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.11.0-beta.2 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.11.0-beta.1 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.7 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.6 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.5 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.4 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.3 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.2 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.1 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 3.10.12 satisfies 3.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::matched 3.10.12\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Version 3.10 is available for downloading\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Download from \"https://github.com/actions/python-versions/releases/download/3.10.12-5200619051/python-3.10.12-linux-20.04-x64.tar.gz\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/python-versions/releases/download/3.10.12-5200619051/python-3.10.12-linux-20.04-x64.tar.gz\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::Destination /tmp/cec1768f-b81c-4610-a02b-d328a5f75ffc\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::set auth\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting pyproject-api>=1.5.1 (from tox==4.4.11->-r requirements.txt (line 15))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting pyproject-api>=1.5.1 (from tox==4.4.11->-r requirements.txt (line 15))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading pyproject_api-1.5.2-py3-none-any.whl (12 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading pyproject_api-1.5.2-py3-none-any.whl (12 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting attrs>=19.2.0 (from pytest==7.2.2->-r requirements.txt (line 16))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting attrs>=19.2.0 (from pytest==7.2.2->-r requirements.txt (line 16))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.2/61.2 kB 1.9 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.2/61.2 kB 1.9 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting iniconfig (from pytest==7.2.2->-r requirements.txt (line 16))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting iniconfig (from pytest==7.2.2->-r requirements.txt (line 16))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting exceptiongroup>=1.0.0rc8 (from pytest==7.2.2->-r requirements.txt (line 16))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting exceptiongroup>=1.0.0rc8 (from pytest==7.2.2->-r requirements.txt (line 16))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting deprecated (from PyGithub==1.58.1->-r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting deprecated (from PyGithub==1.58.1->-r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading Deprecated-1.2.14-py2.py3-none-any.whl (9.6 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading Deprecated-1.2.14-py2.py3-none-any.whl (9.6 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting pyjwt[crypto]>=2.4.0 (from PyGithub==1.58.1->-r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading PyJWT-2.7.0-py3-none-any.whl (22 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting pyjwt[crypto]>=2.4.0 (from PyGithub==1.58.1->-r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading PyJWT-2.7.0-py3-none-any.whl (22 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting pynacl>=1.4.0 (from PyGithub==1.58.1->-r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading PyNaCl-1.5.0-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (856 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting pynacl>=1.4.0 (from PyGithub==1.58.1->-r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading PyNaCl-1.5.0-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (856 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 856.7/856.7 kB 10.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 856.7/856.7 kB 21.6 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting gitdb<5,>=4.0.1 (from gitpython==3.1.31->-r requirements.txt (line 24))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading gitdb-4.0.10-py3-none-any.whl (62 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting gitdb<5,>=4.0.1 (from gitpython==3.1.31->-r requirements.txt (line 24))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading gitdb-4.0.10-py3-none-any.whl (62 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.7/62.7 kB 3.5 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.7/62.7 kB 2.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting MarkupSafe>=2.0 (from jinja2==3.1.2->-r requirements.txt (line 25))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading MarkupSafe-2.1.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting MarkupSafe>=2.0 (from jinja2==3.1.2->-r requirements.txt (line 25))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading MarkupSafe-2.1.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting charset-normalizer<4,>=2 (from requests==2.28.2->-r requirements.txt (line 26))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading charset_normalizer-3.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (199 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting charset-normalizer<4,>=2 (from requests==2.28.2->-r requirements.txt (line 26))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading charset_normalizer-3.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (199 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 199.3/199.3 kB 3.8 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 199.3/199.3 kB 2.3 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting idna<4,>=2.5 (from requests==2.28.2->-r requirements.txt (line 26))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting idna<4,>=2.5 (from requests==2.28.2->-r requirements.txt (line 26))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 665.0 kB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 744.1 kB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting urllib3<1.27,>=1.21.1 (from requests==2.28.2->-r requirements.txt (line 26))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting urllib3<1.27,>=1.21.1 (from requests==2.28.2->-r requirements.txt (line 26))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 143.1/143.1 kB 2.4 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 143.1/143.1 kB 2.4 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting certifi>=2017.4.17 (from requests==2.28.2->-r requirements.txt (line 26))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting certifi>=2017.4.17 (from requests==2.28.2->-r requirements.txt (line 26))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 1.6 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 14.3 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting smmap<6,>=3.0.1 (from gitdb<5,>=4.0.1->gitpython==3.1.31->-r requirements.txt (line 24))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting smmap<6,>=3.0.1 (from gitdb<5,>=4.0.1->gitpython==3.1.31->-r requirements.txt (line 24))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading smmap-5.0.0-py3-none-any.whl (24 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading smmap-5.0.0-py3-none-any.whl (24 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting arrow (from jinja2-time>=0.2.0->cookiecutter==2.1.1->-r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading arrow-1.2.3-py3-none-any.whl (66 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting arrow (from jinja2-time>=0.2.0->cookiecutter==2.1.1->-r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading arrow-1.2.3-py3-none-any.whl (66 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 66.4/66.4 kB 2.2 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 66.4/66.4 kB 2.5 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from nodeenv>=0.11.1->pre-commit==3.2.2->-r requirements.txt (line 11)) (65.5.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from nodeenv>=0.11.1->pre-commit==3.2.2->-r requirements.txt (line 11)) (65.5.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::download complete\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Extract downloaded archive\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::Checking tar --version\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting cryptography>=3.4.0 (from pyjwt[crypto]>=2.4.0->PyGithub==1.58.1->-r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading cryptography-41.0.1-cp37-abi3-manylinux_2_28_x86_64.whl (4.3 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/c0a419f6-6fff-44e3-80dc-9e993dc48240 -f /tmp/cec1768f-b81c-4610-a02b-d328a5f75ffc\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting cryptography>=3.4.0 (from pyjwt[crypto]>=2.4.0->PyGithub==1.58.1->-r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading cryptography-41.0.1-cp37-abi3-manylinux_2_28_x86_64.whl (4.3 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4.3/4.3 MB 12.9 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4.3/4.3 MB 8.6 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting cffi>=1.4.1 (from pynacl>=1.4.0->PyGithub==1.58.1->-r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading cffi-1.15.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (441 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 441.8/441.8 kB 5.9 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting cffi>=1.4.1 (from pynacl>=1.4.0->PyGithub==1.58.1->-r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading cffi-1.15.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (441 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 441.8/441.8 kB 9.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting text-unidecode>=1.3 (from python-slugify>=4.0.0->cookiecutter==2.1.1->-r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading text_unidecode-1.3-py2.py3-none-any.whl (78 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 78.2/78.2 kB 2.6 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting text-unidecode>=1.3 (from python-slugify>=4.0.0->cookiecutter==2.1.1->-r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading text_unidecode-1.3-py2.py3-none-any.whl (78 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 78.2/78.2 kB 8.4 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting distlib<1,>=0.3.6 (from virtualenv>=20.10.0->pre-commit==3.2.2->-r requirements.txt (line 11))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 468.5/468.5 kB 5.1 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting distlib<1,>=0.3.6 (from virtualenv>=20.10.0->pre-commit==3.2.2->-r requirements.txt (line 11))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 468.5/468.5 kB 10.6 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting wrapt<2,>=1.10 (from deprecated->PyGithub==1.58.1->-r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading wrapt-1.15.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (78 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 78.4/78.4 kB 3.3 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting wrapt<2,>=1.10 (from deprecated->PyGithub==1.58.1->-r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading wrapt-1.15.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (78 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 78.4/78.4 kB 9.9 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting pycparser (from cffi>=1.4.1->pynacl>=1.4.0->PyGithub==1.58.1->-r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 118.7/118.7 kB 10.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting pycparser (from cffi>=1.4.1->pynacl>=1.4.0->PyGithub==1.58.1->-r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 118.7/118.7 kB 2.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting python-dateutil>=2.7.0 (from arrow->jinja2-time>=0.2.0->cookiecutter==2.1.1->-r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting python-dateutil>=2.7.0 (from arrow->jinja2-time>=0.2.0->cookiecutter==2.1.1->-r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 247.7/247.7 kB 6.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 247.7/247.7 kB 2.2 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Collecting six>=1.5 (from python-dateutil>=2.7.0->arrow->jinja2-time>=0.2.0->cookiecutter==2.1.1->-r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Collecting six>=1.5 (from python-dateutil>=2.7.0->arrow->jinja2-time>=0.2.0->cookiecutter==2.1.1->-r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Installing collected packages: text-unidecode, distlib, wrapt, urllib3, tomli, smmap, six, sh, pyyaml, python-slugify, pyjwt, pyflakes, pycparser, pycodestyle, pluggy, platformdirs, pathspec, packaging, nodeenv, mypy-extensions, mccabe, MarkupSafe, isort, iniconfig, idna, identify, filelock, exceptiongroup, colorama, click, charset-normalizer, chardet, cfgv, certifi, cachetools, attrs, virtualenv, requests, python-dateutil, pytest, pyproject-api, jinja2, gitdb, flake8, deprecated, cffi, black, binaryornot, tox, pytest-instafail, pynacl, pre-commit, gitpython, flake8-isort, cryptography, arrow, jinja2-time, PyGithub, cookiecutter, pytest-cookies\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Installing collected packages: text-unidecode, distlib, wrapt, urllib3, tomli, smmap, six, sh, pyyaml, python-slugify, pyjwt, pyflakes, pycparser, pycodestyle, pluggy, platformdirs, pathspec, packaging, nodeenv, mypy-extensions, mccabe, MarkupSafe, isort, iniconfig, idna, identify, filelock, exceptiongroup, colorama, click, charset-normalizer, chardet, cfgv, certifi, cachetools, attrs, virtualenv, requests, python-dateutil, pytest, pyproject-api, jinja2, gitdb, flake8, deprecated, cffi, black, binaryornot, tox, pytest-instafail, pynacl, pre-commit, gitpython, flake8-isort, cryptography, arrow, jinja2-time, PyGithub, cookiecutter, pytest-cookies\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Execute installation script\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Check if Python hostedtoolcache folder exist...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Create Python 3.10.12 folder\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Copy Python binaries to hostedtoolcache folder\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Create additional symlinks (Required for the UsePythonVersion Azure Pipelines task and the setup-python GitHub Action)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Upgrading pip...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Looking in links: /tmp/tmpg8dexs1k\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (65.5.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (23.0.1)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Successfully installed MarkupSafe-2.1.3 PyGithub-1.58.1 arrow-1.2.3 attrs-23.1.0 binaryornot-0.4.4 black-23.3.0 cachetools-5.3.1 certifi-2023.5.7 cffi-1.15.1 cfgv-3.3.1 chardet-5.1.0 charset-normalizer-3.1.0 click-8.1.3 colorama-0.4.6 cookiecutter-2.1.1 cryptography-41.0.1 deprecated-1.2.14 distlib-0.3.6 exceptiongroup-1.1.1 filelock-3.12.2 flake8-6.0.0 flake8-isort-6.0.0 gitdb-4.0.10 gitpython-3.1.31 identify-2.5.24 idna-3.4 iniconfig-2.0.0 isort-5.12.0 jinja2-3.1.2 jinja2-time-0.2.0 mccabe-0.7.0 mypy-extensions-1.0.0 nodeenv-1.8.0 packaging-23.1 pathspec-0.11.1 platformdirs-3.8.0 pluggy-1.2.0 pre-commit-3.2.2 pycodestyle-2.10.0 pycparser-2.21 pyflakes-3.0.1 pyjwt-2.7.0 pynacl-1.5.0 pyproject-api-1.5.2 pytest-7.2.2 pytest-cookies-0.7.0 pytest-instafail-0.5.0 python-dateutil-2.8.2 python-slugify-8.0.1 pyyaml-6.0 requests-2.28.2 sh-2.0.3 six-1.16.0 smmap-5.0.0 text-unidecode-1.3 tomli-2.0.1 tox-4.4.11 urllib3-1.26.16 virtualenv-20.23.1 wrapt-1.15.0\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [notice] A new release of pip is available: 23.0.1 -> 23.1.2\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [notice] To update, run: pip install --upgrade pip\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | Successfully installed MarkupSafe-2.1.3 PyGithub-1.58.1 arrow-1.2.3 attrs-23.1.0 binaryornot-0.4.4 black-23.3.0 cachetools-5.3.1 certifi-2023.5.7 cffi-1.15.1 cfgv-3.3.1 chardet-5.1.0 charset-normalizer-3.1.0 click-8.1.3 colorama-0.4.6 cookiecutter-2.1.1 cryptography-41.0.1 deprecated-1.2.14 distlib-0.3.6 exceptiongroup-1.1.1 filelock-3.12.2 flake8-6.0.0 flake8-isort-6.0.0 gitdb-4.0.10 gitpython-3.1.31 identify-2.5.24 idna-3.4 iniconfig-2.0.0 isort-5.12.0 jinja2-3.1.2 jinja2-time-0.2.0 mccabe-0.7.0 mypy-extensions-1.0.0 nodeenv-1.8.0 packaging-23.1 pathspec-0.11.1 platformdirs-3.8.0 pluggy-1.2.0 pre-commit-3.2.2 pycodestyle-2.10.0 pycparser-2.21 pyflakes-3.0.1 pyjwt-2.7.0 pynacl-1.5.0 pyproject-api-1.5.2 pytest-7.2.2 pytest-cookies-0.7.0 pytest-instafail-0.5.0 python-dateutil-2.8.2 python-slugify-8.0.1 pyyaml-6.0 requests-2.28.2 sh-2.0.3 six-1.16.0 smmap-5.0.0 text-unidecode-1.3 tomli-2.0.1 tox-4.4.11 urllib3-1.26.16 virtualenv-20.23.1 wrapt-1.15.0\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | [notice] A new release of pip is available: 23.0.1 -> 23.1.2\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | [notice] To update, run: pip install --upgrade pip\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \u2705  Success - Main Install dependencies\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \u2705  Success - Main Install dependencies\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ] \u2b50 Run Main Docker Basic\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest] \u2b50 Run Main Run tests\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pip\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 36.6 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Installing collected packages: pip\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Successfully installed pip-23.1.2\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Create complete file\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::isExplicit: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::explicit? false\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::isExplicit: 3.10.12\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::evaluating 7 versions\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::matched: 3.10.12\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.10.12/x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.10.12 x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Successfully set up CPython (3.10.12)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2753  ::endgroup::\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::Search path '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Jean-Zombie-cookiecutter-django-wagtail/requirements.txt'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::Search path '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Jean-Zombie-cookiecutter-django-wagtail/{{cookiecutter.project_slug}}/requirements/base.txt'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::Search path '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Jean-Zombie-cookiecutter-django-wagtail/{{cookiecutter.project_slug}}/requirements/local.txt'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Jean-Zombie-cookiecutter-django-wagtail/requirements.txt\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Jean-Zombie-cookiecutter-django-wagtail/{{cookiecutter.project_slug}}/requirements/base.txt\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Jean-Zombie-cookiecutter-django-wagtail/{{cookiecutter.project_slug}}/requirements/local.txt\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::Found 3 files to hash.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::OS Name: Ubuntu, Version: 20.04\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [command]/opt/hostedtoolcache/Python/3.10.12/x64/bin/pip cache dir\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /home/runneradmin/.cache/pip\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::global cache directory path is /home/runneradmin/.cache/pip\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::Resolved Keys:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::[\"setup-python-Linux-20.04-Ubuntu-python-3.10.12-pip-b7ecbc32463dc363721af13b4efe20d11fd0d331f254e4efa42994fb0c7dc016\",\"setup-python-Linux-20.04-Ubuntu-python-3.10.12-pip\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::1.5.0\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:42495/_apis/artifactcache/cache?keys=setup-python-Linux-20.04-Ubuntu-python-3.10.12-pip-b7ecbc32463dc363721af13b4efe20d11fd0d331f254e4efa42994fb0c7dc016%252Csetup-python-Linux-20.04-Ubuntu-python-3.10.12-pip&version=79a244514713d0ea96d5d8aab70186082a897848df6e845ec8308965d2f82f4f\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | pip cache is not found\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2705  Success - Main actions/setup-python@v4\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.10.12/x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.10.12/x64/lib/pkgconfig\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.12/x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.12/x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.12/x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.10.12/x64/lib\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2699  ::set-output:: python-version=3.10.12\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.10.12/x64/bin/python\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2699  ::set-output:: cache-hit=false\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.12/x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.12/x64/bin\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ] \u2b50 Run Main Install dependencies\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | + mkdir -p .cache/docker\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | + cd .cache/docker\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | + cookiecutter ../../ --no-input --overwrite-if-exists use_docker=y\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | ============================= test session starts ==============================\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | platform linux -- Python 3.10.12, pytest-7.2.2, pluggy-1.2.0 -- /opt/hostedtoolcache/Python/3.10.12/x64/bin/python\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | cachedir: .pytest_cache\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Jean-Zombie-cookiecutter-django-wagtail, configfile: pytest.ini\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | plugins: instafail-0.5.0, cookies-0.7.0\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | collecting ... collected 253 items\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | \u001b[1;32m [SUCCESS]: Project initialized, keep up the good work!\u001b[0m\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | + cd my_awesome_project\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | + git init\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | hint: Using 'master' as the name for the initial branch. This default branch name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | hint: is subject to change. To configure the initial branch name to use in all\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | hint: of your new repositories, which will suppress this warning, call:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | hint: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | hint: \tgit config --global init.defaultBranch <name>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | hint: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | hint: 'development'. The just-created branch can be renamed via this command:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | hint: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | hint: \tgit branch -m <name>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Initialized empty Git repository in /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Jean-Zombie-cookiecutter-django-wagtail/.cache/docker/my_awesome_project/.git/\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | + git add .\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | + pre-commit run --show-diff-on-failure -a\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [INFO] Initializing environment for https://github.com/pre-commit/pre-commit-hooks.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[open_source_license:MIT] PASSED [  0%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [INFO] Initializing environment for https://github.com/asottile/pyupgrade.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting cookiecutter==2.1.1 (from -r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading cookiecutter-2.1.1-py2.py3-none-any.whl (36 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting sh==2.0.3 (from -r requirements.txt (line 2))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading sh-2.0.3-py3-none-any.whl (38 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting binaryornot==0.4.4 (from -r requirements.txt (line 3))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading binaryornot-0.4.4-py2.py3-none-any.whl (9.0 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting black==23.3.0 (from -r requirements.txt (line 7))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading black-23.3.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.7 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.7/1.7 MB 28.4 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[open_source_license:BSD] PASSED [  0%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [INFO] Initializing environment for https://github.com/psf/black.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting isort==5.12.0 (from -r requirements.txt (line 8))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading isort-5.12.0-py3-none-any.whl (91 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 91.2/91.2 kB 3.0 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting flake8==6.0.0 (from -r requirements.txt (line 9))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading flake8-6.0.0-py2.py3-none-any.whl (57 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 57.8/57.8 kB 898.6 kB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting flake8-isort==6.0.0 (from -r requirements.txt (line 10))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading flake8_isort-6.0.0-py3-none-any.whl (13 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pre-commit==3.2.2 (from -r requirements.txt (line 11))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading pre_commit-3.2.2-py2.py3-none-any.whl (202 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 202.7/202.7 kB 2.5 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting tox==4.4.11 (from -r requirements.txt (line 15))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading tox-4.4.11-py3-none-any.whl (148 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 149.0/149.0 kB 1.3 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pytest==7.2.2 (from -r requirements.txt (line 16))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading pytest-7.2.2-py3-none-any.whl (317 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 317.2/317.2 kB 6.2 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pytest-cookies==0.7.0 (from -r requirements.txt (line 17))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading pytest_cookies-0.7.0-py3-none-any.whl (6.4 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[open_source_license:GPLv3] PASSED [  1%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pytest-instafail==0.5.0 (from -r requirements.txt (line 18))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading pytest_instafail-0.5.0-py3-none-any.whl (4.2 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [INFO] Initializing environment for https://github.com/PyCQA/isort.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pyyaml==6.0 (from -r requirements.txt (line 19))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading PyYAML-6.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (682 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 682.2/682.2 kB 9.1 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting PyGithub==1.58.1 (from -r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading PyGithub-1.58.1-py3-none-any.whl (312 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 312.5/312.5 kB 7.8 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting gitpython==3.1.31 (from -r requirements.txt (line 24))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading GitPython-3.1.31-py3-none-any.whl (184 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 184.3/184.3 kB 2.8 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting jinja2==3.1.2 (from -r requirements.txt (line 25))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading Jinja2-3.1.2-py3-none-any.whl (133 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 133.1/133.1 kB 2.1 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting requests==2.28.2 (from -r requirements.txt (line 26))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading requests-2.28.2-py3-none-any.whl (62 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.8/62.8 kB 651.6 kB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[open_source_license:Apache Software License 2.0] PASSED [  1%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting click<9.0.0,>=7.0 (from cookiecutter==2.1.1->-r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 96.6/96.6 kB 1.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting jinja2-time>=0.2.0 (from cookiecutter==2.1.1->-r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading jinja2_time-0.2.0-py2.py3-none-any.whl (6.4 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting python-slugify>=4.0.0 (from cookiecutter==2.1.1->-r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading python_slugify-8.0.1-py2.py3-none-any.whl (9.7 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting chardet>=3.0.2 (from binaryornot==0.4.4->-r requirements.txt (line 3))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading chardet-5.1.0-py3-none-any.whl (199 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 199.1/199.1 kB 894.3 kB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting mypy-extensions>=0.4.3 (from black==23.3.0->-r requirements.txt (line 7))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting packaging>=22.0 (from black==23.3.0->-r requirements.txt (line 7))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 536.0 kB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pathspec>=0.9.0 (from black==23.3.0->-r requirements.txt (line 7))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading pathspec-0.11.1-py3-none-any.whl (29 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [INFO] Initializing environment for https://github.com/PyCQA/flake8.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[open_source_license:Not open source] PASSED [  1%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting platformdirs>=2 (from black==23.3.0->-r requirements.txt (line 7))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting tomli>=1.1.0 (from black==23.3.0->-r requirements.txt (line 7))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting mccabe<0.8.0,>=0.7.0 (from flake8==6.0.0->-r requirements.txt (line 9))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading mccabe-0.7.0-py2.py3-none-any.whl (7.3 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pycodestyle<2.11.0,>=2.10.0 (from flake8==6.0.0->-r requirements.txt (line 9))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading pycodestyle-2.10.0-py2.py3-none-any.whl (41 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 41.3/41.3 kB 270.9 kB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pyflakes<3.1.0,>=3.0.0 (from flake8==6.0.0->-r requirements.txt (line 9))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading pyflakes-3.0.1-py2.py3-none-any.whl (62 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.8/62.8 kB 1.1 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting cfgv>=2.0.0 (from pre-commit==3.2.2->-r requirements.txt (line 11))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading cfgv-3.3.1-py2.py3-none-any.whl (7.3 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting identify>=1.0.0 (from pre-commit==3.2.2->-r requirements.txt (line 11))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading identify-2.5.24-py2.py3-none-any.whl (98 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 98.8/98.8 kB 594.4 kB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting nodeenv>=0.11.1 (from pre-commit==3.2.2->-r requirements.txt (line 11))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading nodeenv-1.8.0-py2.py3-none-any.whl (22 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[windows:y] PASSED [  2%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting virtualenv>=20.10.0 (from pre-commit==3.2.2->-r requirements.txt (line 11))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[windows:n] PASSED [  2%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.3/3.3 MB 1.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting cachetools>=5.3 (from tox==4.4.11->-r requirements.txt (line 15))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading cachetools-5.3.1-py3-none-any.whl (9.3 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[use_pycharm:y] PASSED [  3%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting colorama>=0.4.6 (from tox==4.4.11->-r requirements.txt (line 15))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting filelock>=3.10.7 (from tox==4.4.11->-r requirements.txt (line 15))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading filelock-3.12.2-py3-none-any.whl (10 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pluggy>=1 (from tox==4.4.11->-r requirements.txt (line 15))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pyproject-api>=1.5.1 (from tox==4.4.11->-r requirements.txt (line 15))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [INFO] Initializing environment for https://github.com/PyCQA/flake8:flake8-isort.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading pyproject_api-1.5.2-py3-none-any.whl (12 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting attrs>=19.2.0 (from pytest==7.2.2->-r requirements.txt (line 16))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.2/61.2 kB 724.9 kB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting iniconfig (from pytest==7.2.2->-r requirements.txt (line 16))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting exceptiongroup>=1.0.0rc8 (from pytest==7.2.2->-r requirements.txt (line 16))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[use_pycharm:n] PASSED [  3%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting deprecated (from PyGithub==1.58.1->-r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading Deprecated-1.2.14-py2.py3-none-any.whl (9.6 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pyjwt[crypto]>=2.4.0 (from PyGithub==1.58.1->-r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading PyJWT-2.7.0-py3-none-any.whl (22 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [INFO] Installing environment for https://github.com/pre-commit/pre-commit-hooks.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [INFO] Once installed this environment will be reused.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [INFO] This may take a few minutes...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pynacl>=1.4.0 (from PyGithub==1.58.1->-r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading PyNaCl-1.5.0-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (856 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 856.7/856.7 kB 4.1 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting gitdb<5,>=4.0.1 (from gitpython==3.1.31->-r requirements.txt (line 24))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading gitdb-4.0.10-py3-none-any.whl (62 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.7/62.7 kB 837.5 kB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting MarkupSafe>=2.0 (from jinja2==3.1.2->-r requirements.txt (line 25))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading MarkupSafe-2.1.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[use_docker:y] PASSED [  3%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting charset-normalizer<4,>=2 (from requests==2.28.2->-r requirements.txt (line 26))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading charset_normalizer-3.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (199 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 199.3/199.3 kB 2.2 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting idna<4,>=2.5 (from requests==2.28.2->-r requirements.txt (line 26))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 952.0 kB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting urllib3<1.27,>=1.21.1 (from requests==2.28.2->-r requirements.txt (line 26))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 143.1/143.1 kB 2.1 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting certifi>=2017.4.17 (from requests==2.28.2->-r requirements.txt (line 26))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 1.9 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting smmap<6,>=3.0.1 (from gitdb<5,>=4.0.1->gitpython==3.1.31->-r requirements.txt (line 24))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading smmap-5.0.0-py3-none-any.whl (24 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[use_docker:n] PASSED [  4%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting arrow (from jinja2-time>=0.2.0->cookiecutter==2.1.1->-r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading arrow-1.2.3-py3-none-any.whl (66 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 66.4/66.4 kB 806.5 kB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from nodeenv>=0.11.1->pre-commit==3.2.2->-r requirements.txt (line 11)) (65.5.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting cryptography>=3.4.0 (from pyjwt[crypto]>=2.4.0->PyGithub==1.58.1->-r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading cryptography-41.0.1-cp37-abi3-manylinux_2_28_x86_64.whl (4.3 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[postgresql_version:14] PASSED [  4%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4.3/4.3 MB 8.9 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting cffi>=1.4.1 (from pynacl>=1.4.0->PyGithub==1.58.1->-r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading cffi-1.15.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (441 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 441.8/441.8 kB 6.0 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting text-unidecode>=1.3 (from python-slugify>=4.0.0->cookiecutter==2.1.1->-r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading text_unidecode-1.3-py2.py3-none-any.whl (78 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 78.2/78.2 kB 780.5 kB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting distlib<1,>=0.3.6 (from virtualenv>=20.10.0->pre-commit==3.2.2->-r requirements.txt (line 11))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 468.5/468.5 kB 3.0 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[postgresql_version:13] PASSED [  5%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting wrapt<2,>=1.10 (from deprecated->PyGithub==1.58.1->-r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading wrapt-1.15.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (78 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 78.4/78.4 kB 1.3 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pycparser (from cffi>=1.4.1->pynacl>=1.4.0->PyGithub==1.58.1->-r requirements.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 118.7/118.7 kB 2.1 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting python-dateutil>=2.7.0 (from arrow->jinja2-time>=0.2.0->cookiecutter==2.1.1->-r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 247.7/247.7 kB 2.5 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting six>=1.5 (from python-dateutil>=2.7.0->arrow->jinja2-time>=0.2.0->cookiecutter==2.1.1->-r requirements.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Installing collected packages: text-unidecode, distlib, wrapt, urllib3, tomli, smmap, six, sh, pyyaml, python-slugify, pyjwt, pyflakes, pycparser, pycodestyle, pluggy, platformdirs, pathspec, packaging, nodeenv, mypy-extensions, mccabe, MarkupSafe, isort, iniconfig, idna, identify, filelock, exceptiongroup, colorama, click, charset-normalizer, chardet, cfgv, certifi, cachetools, attrs, virtualenv, requests, python-dateutil, pytest, pyproject-api, jinja2, gitdb, flake8, deprecated, cffi, black, binaryornot, tox, pytest-instafail, pynacl, pre-commit, gitpython, flake8-isort, cryptography, arrow, jinja2-time, PyGithub, cookiecutter, pytest-cookies\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[postgresql_version:12] PASSED [  5%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [INFO] Installing environment for https://github.com/asottile/pyupgrade.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [INFO] Once installed this environment will be reused.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [INFO] This may take a few minutes...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[postgresql_version:11] PASSED [  5%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[postgresql_version:10] PASSED [  6%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:AWS-use_whitenoise:y] PASSED [  6%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [INFO] Installing environment for https://github.com/psf/black.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [INFO] Once installed this environment will be reused.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [INFO] This may take a few minutes...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:AWS-use_whitenoise:n] PASSED [  7%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:GCP-use_whitenoise:y] PASSED [  7%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Successfully installed MarkupSafe-2.1.3 PyGithub-1.58.1 arrow-1.2.3 attrs-23.1.0 binaryornot-0.4.4 black-23.3.0 cachetools-5.3.1 certifi-2023.5.7 cffi-1.15.1 cfgv-3.3.1 chardet-5.1.0 charset-normalizer-3.1.0 click-8.1.3 colorama-0.4.6 cookiecutter-2.1.1 cryptography-41.0.1 deprecated-1.2.14 distlib-0.3.6 exceptiongroup-1.1.1 filelock-3.12.2 flake8-6.0.0 flake8-isort-6.0.0 gitdb-4.0.10 gitpython-3.1.31 identify-2.5.24 idna-3.4 iniconfig-2.0.0 isort-5.12.0 jinja2-3.1.2 jinja2-time-0.2.0 mccabe-0.7.0 mypy-extensions-1.0.0 nodeenv-1.8.0 packaging-23.1 pathspec-0.11.1 platformdirs-3.8.0 pluggy-1.2.0 pre-commit-3.2.2 pycodestyle-2.10.0 pycparser-2.21 pyflakes-3.0.1 pyjwt-2.7.0 pynacl-1.5.0 pyproject-api-1.5.2 pytest-7.2.2 pytest-cookies-0.7.0 pytest-instafail-0.5.0 python-dateutil-2.8.2 python-slugify-8.0.1 pyyaml-6.0 requests-2.28.2 sh-2.0.3 six-1.16.0 smmap-5.0.0 text-unidecode-1.3 tomli-2.0.1 tox-4.4.11 urllib3-1.26.16 virtualenv-20.23.1 wrapt-1.15.0\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [notice] A new release of pip is available: 23.0.1 -> 23.1.2\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [notice] To update, run: pip install --upgrade pip\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:GCP-use_whitenoise:n] PASSED [  7%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2705  Success - Main Install dependencies\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ] \u2b50 Run Main actions/setup-node@v3\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udc33  docker cp src=/tmp/act-cache/5cd7d08f-7d8d-45fc-b1ef-57f7ce1004cd/act/actions-setup-node@v3/ dst=/var/run/act/actions/actions-setup-node@v3/\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-node@v3/] user=0 workdir=\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:Azure-use_whitenoise:y] PASSED [  8%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:Azure-use_whitenoise:n] PASSED [  8%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:None-use_whitenoise:y-mail_service:Mailgun] PASSED [  9%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:None-use_whitenoise:y-mail_service:Mailjet] PASSED [  9%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [INFO] Installing environment for https://github.com/PyCQA/isort.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [INFO] Once installed this environment will be reused.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [INFO] This may take a few minutes...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:None-use_whitenoise:y-mail_service:Mandrill] PASSED [  9%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:None-use_whitenoise:y-mail_service:Postmark] PASSED [ 10%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:None-use_whitenoise:y-mail_service:Sendgrid] PASSED [ 10%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-node@v3/dist/setup/index.js] user= workdir=\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:None-use_whitenoise:y-mail_service:SendinBlue] PASSED [ 11%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:None-use_whitenoise:y-mail_service:SparkPost] PASSED [ 11%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [INFO] Installing environment for https://github.com/PyCQA/flake8.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [INFO] Once installed this environment will be reused.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [INFO] This may take a few minutes...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:None-use_whitenoise:y-mail_service:Other SMTP] PASSED [ 11%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:AWS-mail_service:Mailgun] PASSED [ 12%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:AWS-mail_service:Amazon SES] PASSED [ 12%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:AWS-mail_service:Mailjet] PASSED [ 13%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | trim trailing whitespace.................................................Passed\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | fix end of files.........................................................Passed\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | check yaml...............................................................Passed\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:AWS-mail_service:Mandrill] PASSED [ 13%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | pyupgrade................................................................Passed\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | black....................................................................Passed\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | isort....................................................................Passed\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:AWS-mail_service:Postmark] PASSED [ 13%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | flake8...................................................................Passed\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | + docker-compose -f local.yml build\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:AWS-mail_service:Sendgrid] PASSED [ 14%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | [998] Failed to execute script docker-compose\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Traceback (most recent call last):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"urllib3/connectionpool.py\", line 677, in urlopen\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"urllib3/connectionpool.py\", line 392, in _make_request\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"http/client.py\", line 1277, in request\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"http/client.py\", line 1323, in _send_request\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"http/client.py\", line 1272, in endheaders\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"http/client.py\", line 1032, in _send_output\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"http/client.py\", line 972, in send\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"docker/transport/unixconn.py\", line 43, in connect\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | PermissionError: [Errno 13] Permission denied\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | During handling of the above exception, another exception occurred:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Traceback (most recent call last):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"requests/adapters.py\", line 449, in send\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"urllib3/connectionpool.py\", line 727, in urlopen\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"urllib3/util/retry.py\", line 410, in increment\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"urllib3/packages/six.py\", line 734, in reraise\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"urllib3/connectionpool.py\", line 677, in urlopen\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"urllib3/connectionpool.py\", line 392, in _make_request\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"http/client.py\", line 1277, in request\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"http/client.py\", line 1323, in _send_request\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"http/client.py\", line 1272, in endheaders\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"http/client.py\", line 1032, in _send_output\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"http/client.py\", line 972, in send\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"docker/transport/unixconn.py\", line 43, in connect\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | urllib3.exceptions.ProtocolError: ('Connection aborted.', PermissionError(13, 'Permission denied'))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | During handling of the above exception, another exception occurred:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Traceback (most recent call last):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"docker/api/client.py\", line 214, in _retrieve_server_version\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"docker/api/daemon.py\", line 181, in version\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"docker/utils/decorators.py\", line 46, in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"docker/api/client.py\", line 237, in _get\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"requests/sessions.py\", line 543, in get\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"requests/sessions.py\", line 530, in request\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"requests/sessions.py\", line 643, in send\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"requests/adapters.py\", line 498, in send\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | requests.exceptions.ConnectionError: ('Connection aborted.', PermissionError(13, 'Permission denied'))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | During handling of the above exception, another exception occurred:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | Traceback (most recent call last):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"docker-compose\", line 3, in <module>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"compose/cli/main.py\", line 81, in main\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"compose/cli/main.py\", line 200, in perform_command\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"compose/cli/command.py\", line 70, in project_from_options\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"compose/cli/command.py\", line 153, in get_project\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"compose/cli/docker_client.py\", line 43, in get_client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"compose/cli/docker_client.py\", line 170, in docker_client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"docker/api/client.py\", line 197, in __init__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   |   File \"docker/api/client.py\", line 222, in _retrieve_server_version\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   | docker.errors.DockerException: Error while fetching server API version: ('Connection aborted.', PermissionError(13, 'Permission denied'))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ]   \u274c  Failure - Main Docker Basic\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ] exitcode '255': failure\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:AWS-mail_service:SendinBlue] PASSED [ 14%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:AWS-mail_service:SparkPost] PASSED [ 15%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::isExplicit: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::explicit? false\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::isExplicit: 10.24.1\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::isExplicit: 12.22.6\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::isExplicit: 14.17.5\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::isExplicit: 14.17.6\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::explicit? true\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::evaluating 3 versions\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::match not found\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Attempting to download 16...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::No manifest cached\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::Getting manifest from actions/node-versions@main\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::set auth\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:AWS-mail_service:Other SMTP] PASSED [ 15%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 20.3.1 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 20.3.0 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 20.2.0 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 20.1.0 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 20.0.0 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 18.16.1 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 18.16.0 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 18.15.0 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 18.14.2 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 18.14.1 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 18.14.0 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 18.13.0 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 18.12.1 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 18.12.0 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 18.11.0 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 18.10.0 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 18.9.1 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 18.9.0 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 18.8.0 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 18.7.0 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 18.6.0 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 18.5.0 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 18.4.0 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 18.3.0 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 18.2.0 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 18.1.0 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 18.0.0 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::check 16.20.1 satisfies 16\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::matched 16.20.1\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Acquiring 16.20.1 - x64 from https://github.com/actions/node-versions/releases/download/16.20.1-5342959204/node-16.20.1-linux-x64.tar.gz\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/node-versions/releases/download/16.20.1-5342959204/node-16.20.1-linux-x64.tar.gz\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::Destination /tmp/7669e8d6-6db9-4beb-9478-2ee27e5ca43c\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::set auth\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:GCP-mail_service:Mailgun] PASSED [ 15%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:GCP-mail_service:Mailjet] PASSED [ 16%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::download complete\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Extracting ...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::Checking tar --version\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [command]/usr/bin/tar xz --strip 1 --warning=no-unknown-keyword -C /tmp/7513495a-6de5-423c-bb31-142c8dd004ea -f /tmp/7669e8d6-6db9-4beb-9478-2ee27e5ca43c\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:GCP-mail_service:Mandrill] PASSED [ 16%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Adding to the cache ...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::Caching tool node 16.20.1 x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::source dir: /tmp/7513495a-6de5-423c-bb31-142c8dd004ea\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/node/16.20.1/x64\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Docker Basic        ] \ud83c\udfc1  Job failed\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:GCP-mail_service:Postmark] PASSED [ 16%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:GCP-mail_service:Sendgrid] PASSED [ 17%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:GCP-mail_service:SendinBlue] PASSED [ 17%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:GCP-mail_service:SparkPost] PASSED [ 18%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:GCP-mail_service:Other SMTP] PASSED [ 18%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:Azure-mail_service:Mailgun] PASSED [ 18%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:Azure-mail_service:Mailjet] PASSED [ 19%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udcac  ::debug::finished caching tool\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2753  ::group::Environment details\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | node: v16.20.1\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | npm: 8.19.4\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | yarn: 1.22.11\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2753  ::endgroup::\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2753 add-matcher /run/act/actions/actions-setup-node@v3/.github/tsc.json\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2753 add-matcher /run/act/actions/actions-setup-node@v3/.github/eslint-stylish.json\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2753 add-matcher /run/act/actions/actions-setup-node@v3/.github/eslint-compact.json\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2705  Success - Main actions/setup-node@v3\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2699  ::set-output:: node-version=v16.20.1\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u2699  ::add-path:: /opt/hostedtoolcache/node/16.20.1/x64/bin\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ] \u2b50 Run Main Bare Metal Celery\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:Azure-mail_service:Mandrill] PASSED [ 19%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:Azure-mail_service:Postmark] PASSED [ 20%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:Azure-mail_service:Sendgrid] PASSED [ 20%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:Azure-mail_service:SendinBlue] PASSED [ 20%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | + mkdir -p .cache/bare\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | + cd .cache/bare\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | + cookiecutter ../../ --no-input --overwrite-if-exists use_docker=n use_celery=y frontend_pipeline=Django Compressor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:Azure-mail_service:SparkPost] PASSED [ 21%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \u001b[1;33m [INFO]: .env(s) are only utilized when Docker Compose and/or Heroku support is enabled so keeping them does not make sense given your current setup.\u001b[0m\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \u001b[1;32m [SUCCESS]: Project initialized, keep up the good work!\u001b[0m\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | + cd my_awesome_project\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | + sudo utility/install_os_dependencies.sh install\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Ign:1 https://dl.hhvm.com/ubuntu focal InRelease\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:2 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ InRelease [3622 B]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Err:3 https://dl.hhvm.com/ubuntu focal Release\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Certificate verification failed: The certificate is NOT trusted. The certificate issuer is unknown.  Could not handshake: Error in the certificate verification. [IP: 108.157.214.111 443]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Hit:4 http://archive.ubuntu.com/ubuntu focal InRelease\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Hit:5 http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu focal InRelease\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:7 http://dl.google.com/linux/chrome/deb stable InRelease [1825 B]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:8 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:9 https://packages.microsoft.com/ubuntu/20.04/prod focal InRelease [3611 B]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:10 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Hit:11 https://adoptopenjdk.jfrog.io/adoptopenjdk/deb focal InRelease\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:12 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ Packages [79.8 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[cloud_provider:Azure-mail_service:Other SMTP] PASSED [ 21%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Err:7 http://dl.google.com/linux/chrome/deb stable InRelease\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [3333 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [2618 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:15 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [2416 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:16 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [31.2 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1362 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:18 https://packages.microsoft.com/ubuntu/20.04/prod focal/main all Packages [2521 B]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:19 http://security.ubuntu.com/ubuntu focal-security/multiverse i386 Packages [8141 B]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:20 https://packages.microsoft.com/ubuntu/20.04/prod focal/main amd64 Packages [210 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [2820 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:22 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [28.5 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:23 http://security.ubuntu.com/ubuntu focal-security/main i386 Packages [758 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[use_async:y] PASSED [ 22%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:24 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [744 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted i386 Packages [36.9 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:26 http://archive.ubuntu.com/ubuntu focal-backports/main amd64 Packages [55.2 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:27 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [1064 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:28 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [28.6 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[use_async:n] PASSED [ 22%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Reading package lists...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E: The repository 'https://dl.hhvm.com/ubuntu focal Release' no longer has a Release file.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | W: An error occurred during the signature verification. The repository is not updated and the previous index files will be used. GPG error: http://dl.google.com/linux/chrome/deb stable InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[frontend_pipeline:None] PASSED [ 22%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Reading package lists...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Building dependency tree...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Reading state information...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Skipping libjpeg8-dev, it is already installed and upgrade is not set.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | libjpeg8-dev set to manually installed.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Skipping liblcms2-dev, it is already installed and upgrade is not set.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | liblcms2-dev set to manually installed.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Skipping python3-dev, it is already installed and upgrade is not set.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Skipping build-essential, it is already installed and upgrade is not set.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Skipping libfreetype6-dev, it is already installed and upgrade is not set.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Skipping libwebp-dev, it is already installed and upgrade is not set.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Skipping zlib1g-dev, it is already installed and upgrade is not set.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Skipping libpq-dev, it is already installed and upgrade is not set.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | The following additional packages will be installed:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   gettext-base libcdt5 libcgraph6 libcroco3 libgail-common libgail18\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   libgtk2.0-0 libgtk2.0-bin libgtk2.0-common libgts-0.7-5 libgts-bin libgvc6\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   libgvc6-plugins-gtk libgvpr2 liblab-gamut1 libpathplan4 libxdot4\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Suggested packages:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   gettext-doc autopoint libasprintf-dev libgettextpo-dev gvfs\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | The following NEW packages will be installed:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   gettext gettext-base libcdt5 libcgraph6 libcroco3 libgail-common libgail18\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   libgraphviz-dev libgtk2.0-0 libgtk2.0-bin libgtk2.0-common libgts-0.7-5\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   libgts-bin libgvc6 libgvc6-plugins-gtk libgvpr2 liblab-gamut1 libpathplan4\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   libtiff5-dev libxdot4\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | 0 upgraded, 20 newly installed, 0 to remove and 407 not upgraded.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Need to get 4442 kB of archives.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | After this operation, 17.9 MB of additional disk space will be used.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 gettext-base amd64 0.19.8.1-10build1 [50.2 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 libcroco3 amd64 0.6.13-1 [82.5 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 gettext amd64 0.19.8.1-10build1 [895 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:4 http://archive.ubuntu.com/ubuntu focal/universe amd64 libcdt5 amd64 2.42.2-3build2 [18.7 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:5 http://archive.ubuntu.com/ubuntu focal/universe amd64 libcgraph6 amd64 2.42.2-3build2 [41.3 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:6 http://archive.ubuntu.com/ubuntu focal/main amd64 libgtk2.0-common all 2.24.32-4ubuntu4 [126 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:7 http://archive.ubuntu.com/ubuntu focal/main amd64 libgtk2.0-0 amd64 2.24.32-4ubuntu4 [1791 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[frontend_pipeline:Django Compressor] PASSED [ 23%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:8 http://archive.ubuntu.com/ubuntu focal/main amd64 libgail18 amd64 2.24.32-4ubuntu4 [14.7 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:9 http://archive.ubuntu.com/ubuntu focal/main amd64 libgail-common amd64 2.24.32-4ubuntu4 [116 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:10 http://archive.ubuntu.com/ubuntu focal/universe amd64 libgts-0.7-5 amd64 0.7.6+darcs121130-4 [150 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:11 http://archive.ubuntu.com/ubuntu focal/universe amd64 libpathplan4 amd64 2.42.2-3build2 [21.9 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:12 http://archive.ubuntu.com/ubuntu focal/universe amd64 libgvc6 amd64 2.42.2-3build2 [647 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:13 http://archive.ubuntu.com/ubuntu focal/universe amd64 libgvpr2 amd64 2.42.2-3build2 [167 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:14 http://archive.ubuntu.com/ubuntu focal/universe amd64 libxdot4 amd64 2.42.2-3build2 [15.4 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:15 http://archive.ubuntu.com/ubuntu focal/universe amd64 liblab-gamut1 amd64 2.42.2-3build2 [177 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:16 http://archive.ubuntu.com/ubuntu focal/universe amd64 libgvc6-plugins-gtk amd64 2.42.2-3build2 [20.6 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:17 http://archive.ubuntu.com/ubuntu focal/universe amd64 libgraphviz-dev amd64 2.42.2-3build2 [57.2 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:18 http://archive.ubuntu.com/ubuntu focal/main amd64 libgtk2.0-bin amd64 2.24.32-4ubuntu4 [7728 B]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:19 http://archive.ubuntu.com/ubuntu focal/universe amd64 libgts-bin amd64 0.7.6+darcs121130-4 [41.3 kB]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Get:20 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libtiff5-dev amd64 4.1.0+git191117-2ubuntu0.20.04.8 [2260 B]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[frontend_pipeline:Gulp] PASSED [ 23%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Fetched 4442 kB in 1s (6573 kB/s)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Selecting previously unselected package gettext-base.\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 193678 files and directories currently installed.)\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Preparing to unpack .../00-gettext-base_0.19.8.1-10build1_amd64.deb ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Unpacking gettext-base (0.19.8.1-10build1) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[frontend_pipeline:Webpack] PASSED [ 24%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Selecting previously unselected package libcroco3:amd64.\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Preparing to unpack .../01-libcroco3_0.6.13-1_amd64.deb ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Unpacking libcroco3:amd64 (0.6.13-1) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Selecting previously unselected package gettext.\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Preparing to unpack .../02-gettext_0.19.8.1-10build1_amd64.deb ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Unpacking gettext (0.19.8.1-10build1) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Selecting previously unselected package libcdt5:amd64.\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Preparing to unpack .../03-libcdt5_2.42.2-3build2_amd64.deb ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Unpacking libcdt5:amd64 (2.42.2-3build2) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Selecting previously unselected package libcgraph6:amd64.\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Preparing to unpack .../04-libcgraph6_2.42.2-3build2_amd64.deb ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Unpacking libcgraph6:amd64 (2.42.2-3build2) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Selecting previously unselected package libgtk2.0-common.\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Preparing to unpack .../05-libgtk2.0-common_2.24.32-4ubuntu4_all.deb ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Unpacking libgtk2.0-common (2.24.32-4ubuntu4) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[use_celery:y] PASSED [ 24%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Selecting previously unselected package libgtk2.0-0:amd64.\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Preparing to unpack .../06-libgtk2.0-0_2.24.32-4ubuntu4_amd64.deb ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Unpacking libgtk2.0-0:amd64 (2.24.32-4ubuntu4) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Selecting previously unselected package libgail18:amd64.\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Preparing to unpack .../07-libgail18_2.24.32-4ubuntu4_amd64.deb ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Unpacking libgail18:amd64 (2.24.32-4ubuntu4) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Selecting previously unselected package libgail-common:amd64.\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Preparing to unpack .../08-libgail-common_2.24.32-4ubuntu4_amd64.deb ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Unpacking libgail-common:amd64 (2.24.32-4ubuntu4) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Selecting previously unselected package libgts-0.7-5:amd64.\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Preparing to unpack .../09-libgts-0.7-5_0.7.6+darcs121130-4_amd64.deb ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Unpacking libgts-0.7-5:amd64 (0.7.6+darcs121130-4) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[use_celery:n] PASSED [ 24%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Selecting previously unselected package libpathplan4:amd64.\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Preparing to unpack .../10-libpathplan4_2.42.2-3build2_amd64.deb ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Unpacking libpathplan4:amd64 (2.42.2-3build2) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Selecting previously unselected package libgvc6.\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Preparing to unpack .../11-libgvc6_2.42.2-3build2_amd64.deb ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Unpacking libgvc6 (2.42.2-3build2) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Selecting previously unselected package libgvpr2:amd64.\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Preparing to unpack .../12-libgvpr2_2.42.2-3build2_amd64.deb ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Unpacking libgvpr2:amd64 (2.42.2-3build2) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Selecting previously unselected package libxdot4:amd64.\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Preparing to unpack .../13-libxdot4_2.42.2-3build2_amd64.deb ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Unpacking libxdot4:amd64 (2.42.2-3build2) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[use_mailhog:y] PASSED [ 25%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Selecting previously unselected package liblab-gamut1:amd64.\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Preparing to unpack .../14-liblab-gamut1_2.42.2-3build2_amd64.deb ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Unpacking liblab-gamut1:amd64 (2.42.2-3build2) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Selecting previously unselected package libgvc6-plugins-gtk.\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Preparing to unpack .../15-libgvc6-plugins-gtk_2.42.2-3build2_amd64.deb ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Unpacking libgvc6-plugins-gtk (2.42.2-3build2) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Selecting previously unselected package libgraphviz-dev:amd64.\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Preparing to unpack .../16-libgraphviz-dev_2.42.2-3build2_amd64.deb ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Unpacking libgraphviz-dev:amd64 (2.42.2-3build2) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Selecting previously unselected package libgtk2.0-bin.\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Preparing to unpack .../17-libgtk2.0-bin_2.24.32-4ubuntu4_amd64.deb ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Unpacking libgtk2.0-bin (2.24.32-4ubuntu4) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Selecting previously unselected package libgts-bin.\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Preparing to unpack .../18-libgts-bin_0.7.6+darcs121130-4_amd64.deb ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Unpacking libgts-bin (0.7.6+darcs121130-4) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[use_mailhog:n] PASSED [ 25%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Selecting previously unselected package libtiff5-dev.\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Preparing to unpack .../19-libtiff5-dev_4.1.0+git191117-2ubuntu0.20.04.8_amd64.deb ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Unpacking libtiff5-dev (4.1.0+git191117-2ubuntu0.20.04.8) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Setting up libxdot4:amd64 (2.42.2-3build2) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Setting up liblab-gamut1:amd64 (2.42.2-3build2) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Setting up libtiff5-dev (4.1.0+git191117-2ubuntu0.20.04.8) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Setting up gettext-base (0.19.8.1-10build1) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Setting up libgts-0.7-5:amd64 (0.7.6+darcs121130-4) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Setting up libpathplan4:amd64 (2.42.2-3build2) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Setting up libcroco3:amd64 (0.6.13-1) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Setting up libgtk2.0-common (2.24.32-4ubuntu4) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Setting up libcdt5:amd64 (2.42.2-3build2) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Setting up libcgraph6:amd64 (2.42.2-3build2) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Setting up libgts-bin (0.7.6+darcs121130-4) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Setting up gettext (0.19.8.1-10build1) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Setting up libgtk2.0-0:amd64 (2.24.32-4ubuntu4) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[use_sentry:y] PASSED [ 26%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Setting up libgvc6 (2.42.2-3build2) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Setting up libgvc6-plugins-gtk (2.42.2-3build2) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Setting up libgail18:amd64 (2.24.32-4ubuntu4) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Setting up libgvpr2:amd64 (2.42.2-3build2) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Setting up libgtk2.0-bin (2.24.32-4ubuntu4) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Setting up libgail-common:amd64 (2.24.32-4ubuntu4) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Setting up libgraphviz-dev:amd64 (2.42.2-3build2) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Processing triggers for libc-bin (2.31-0ubuntu9.2) ...\r\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | + pip install -r requirements/local.txt\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pytz==2023.3 (from -r requirements/base.txt (line 1))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 502.3/502.3 kB 18.0 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: python-slugify==8.0.1 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from -r requirements/base.txt (line 2)) (8.0.1)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[use_sentry:n] PASSED [ 26%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting Pillow==9.5.0 (from -r requirements/base.txt (line 3))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading Pillow-9.5.0-cp310-cp310-manylinux_2_28_x86_64.whl (3.4 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.4/3.4 MB 36.2 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting rcssmin==1.1.1 (from -r requirements/base.txt (line 4))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading rcssmin-1.1.1-cp310-cp310-manylinux1_x86_64.whl (49 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 49.8/49.8 kB 4.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting argon2-cffi==21.3.0 (from -r requirements/base.txt (line 5))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading argon2_cffi-21.3.0-py3-none-any.whl (14 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting redis==4.5.4 (from -r requirements/base.txt (line 6))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading redis-4.5.4-py3-none-any.whl (238 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 238.9/238.9 kB 7.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting hiredis==2.2.2 (from -r requirements/base.txt (line 7))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading hiredis-2.2.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (165 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 165.4/165.4 kB 1.3 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting celery==5.2.7 (from -r requirements/base.txt (line 8))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading celery-5.2.7-py3-none-any.whl (405 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 405.6/405.6 kB 26.0 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting django-celery-beat==2.5.0 (from -r requirements/base.txt (line 9))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading django_celery_beat-2.5.0-py3-none-any.whl (97 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 97.2/97.2 kB 1.8 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[use_whitenoise:y] PASSED [ 26%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting django==4.1.8 (from -r requirements/base.txt (line 13))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading Django-4.1.8-py3-none-any.whl (8.1 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 8.1/8.1 MB 26.8 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting django-environ==0.10.0 (from -r requirements/base.txt (line 14))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading django_environ-0.10.0-py2.py3-none-any.whl (19 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting django-model-utils==4.3.1 (from -r requirements/base.txt (line 15))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading django_model_utils-4.3.1-py3-none-any.whl (36 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting django-allauth==0.54.0 (from -r requirements/base.txt (line 16))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading django-allauth-0.54.0.tar.gz (737 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 737.1/737.1 kB 10.0 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Installing build dependencies: started\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[use_whitenoise:n] PASSED [ 27%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[use_heroku:y] PASSED [ 27%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[use_heroku:n] PASSED [ 28%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Installing build dependencies: finished with status 'done'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Getting requirements to build wheel: started\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Getting requirements to build wheel: finished with status 'done'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Preparing metadata (pyproject.toml): started\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[ci_tool:None] PASSED [ 28%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting django-crispy-forms==2.0 (from -r requirements/base.txt (line 17))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading django_crispy_forms-2.0-py3-none-any.whl (31 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting crispy-bootstrap5==0.7 (from -r requirements/base.txt (line 18))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading crispy_bootstrap5-0.7-py3-none-any.whl (22 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting django-compressor==4.3.1 (from -r requirements/base.txt (line 19))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading django_compressor-4.3.1-py2.py3-none-any.whl (148 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 149.0/149.0 kB 3.1 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting django-redis==5.2.0 (from -r requirements/base.txt (line 20))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading django_redis-5.2.0-py3-none-any.whl (30 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[ci_tool:Travis] PASSED [ 28%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting djangorestframework==3.14.0 (from -r requirements/base.txt (line 23))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading djangorestframework-3.14.0-py3-none-any.whl (1.1 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.1/1.1 MB 41.3 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting django-cors-headers==3.14.0 (from -r requirements/base.txt (line 24))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading django_cors_headers-3.14.0-py3-none-any.whl (13 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting wagtail==4.2.2 (from -r requirements/base.txt (line 28))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading wagtail-4.2.2-py3-none-any.whl (8.7 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 8.7/8.7 MB 12.6 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[ci_tool:Gitlab] PASSED [ 29%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting Werkzeug[watchdog]==2.2.3 (from -r requirements/local.txt (line 3))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading Werkzeug-2.2.3-py3-none-any.whl (233 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 233.6/233.6 kB 4.4 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting ipdb==0.13.13 (from -r requirements/local.txt (line 4))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading ipdb-0.13.13-py3-none-any.whl (12 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting psycopg2-binary==2.9.6 (from -r requirements/local.txt (line 5))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading psycopg2_binary-2.9.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[ci_tool:Github] PASSED [ 29%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.0/3.0 MB 3.5 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting watchfiles==0.19.0 (from -r requirements/local.txt (line 6))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading watchfiles-0.19.0-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.3 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.3/1.3 MB 15.5 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting mypy==1.1.1 (from -r requirements/local.txt (line 10))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading mypy-1.1.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.1 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[keep_local_envs_in_vcs:y] PASSED [ 30%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 12.1/12.1 MB 19.6 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting django-stubs==1.16.0 (from -r requirements/local.txt (line 11))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading django_stubs-1.16.0-py3-none-any.whl (432 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 432.7/432.7 kB 12.5 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: pytest==7.2.2 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from -r requirements/local.txt (line 12)) (7.2.2)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pytest-sugar==0.9.6 (from -r requirements/local.txt (line 13))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading pytest_sugar-0.9.6-py2.py3-none-any.whl (9.1 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting sphinx==6.1.3 (from -r requirements/local.txt (line 17))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading sphinx-6.1.3-py3-none-any.whl (3.0 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[keep_local_envs_in_vcs:n] PASSED [ 30%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.0/3.0 MB 2.3 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting sphinx-autobuild==2021.3.14 (from -r requirements/local.txt (line 18))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading sphinx_autobuild-2021.3.14-py3-none-any.whl (9.9 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[debug:y] PASSED [ 30%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: flake8==6.0.0 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from -r requirements/local.txt (line 22)) (6.0.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: flake8-isort==6.0.0 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from -r requirements/local.txt (line 23)) (6.0.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting coverage==7.2.2 (from -r requirements/local.txt (line 24))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading coverage-7.2.2-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (227 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 227.5/227.5 kB 2.4 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: black==23.3.0 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from -r requirements/local.txt (line 25)) (23.3.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pylint-django==2.5.3 (from -r requirements/local.txt (line 26))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading pylint_django-2.5.3-py3-none-any.whl (81 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 81.2/81.2 kB 765.0 kB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_project_generation[debug:n] PASSED [ 31%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pylint-celery==0.3 (from -r requirements/local.txt (line 27))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading pylint-celery-0.3.tar.gz (1.9 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Installing build dependencies: started\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[open_source_license:MIT] PASSED [ 31%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Installing build dependencies: finished with status 'done'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Getting requirements to build wheel: started\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Getting requirements to build wheel: finished with status 'done'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Preparing metadata (pyproject.toml): started\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: pre-commit==3.2.2 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from -r requirements/local.txt (line 28)) (3.2.2)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting factory-boy==3.2.1 (from -r requirements/local.txt (line 32))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading factory_boy-3.2.1-py2.py3-none-any.whl (35 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting django-debug-toolbar==4.0.0 (from -r requirements/local.txt (line 34))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading django_debug_toolbar-4.0.0-py3-none-any.whl (221 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 221.4/221.4 kB 5.0 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting django-extensions==3.2.1 (from -r requirements/local.txt (line 35))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading django_extensions-3.2.1-py3-none-any.whl (229 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 229.4/229.4 kB 3.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting django-coverage-plugin==3.0.0 (from -r requirements/local.txt (line 36))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading django_coverage_plugin-3.0.0-py3-none-any.whl (14 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[open_source_license:BSD] PASSED [ 32%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pytest-django==4.5.2 (from -r requirements/local.txt (line 37))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading pytest_django-4.5.2-py3-none-any.whl (20 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: text-unidecode>=1.3 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from python-slugify==8.0.1->-r requirements/base.txt (line 2)) (1.3)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting argon2-cffi-bindings (from argon2-cffi==21.3.0->-r requirements/base.txt (line 5))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading argon2_cffi_bindings-21.2.0-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (86 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 86.2/86.2 kB 4.1 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting async-timeout>=4.0.2 (from redis==4.5.4->-r requirements/base.txt (line 6))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading async_timeout-4.0.2-py3-none-any.whl (5.8 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting billiard<4.0,>=3.6.4.0 (from celery==5.2.7->-r requirements/base.txt (line 8))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading billiard-3.6.4.0-py3-none-any.whl (89 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 89.5/89.5 kB 9.4 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting kombu<6.0,>=5.2.3 (from celery==5.2.7->-r requirements/base.txt (line 8))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading kombu-5.3.1-py3-none-any.whl (198 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 198.5/198.5 kB 22.8 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting vine<6.0,>=5.0.0 (from celery==5.2.7->-r requirements/base.txt (line 8))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading vine-5.0.0-py2.py3-none-any.whl (9.4 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: click<9.0,>=8.0.3 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from celery==5.2.7->-r requirements/base.txt (line 8)) (8.1.3)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting click-didyoumean>=0.0.3 (from celery==5.2.7->-r requirements/base.txt (line 8))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading click_didyoumean-0.3.0-py3-none-any.whl (2.7 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting click-repl>=0.2.0 (from celery==5.2.7->-r requirements/base.txt (line 8))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading click_repl-0.3.0-py3-none-any.whl (10 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting click-plugins>=1.1.1 (from celery==5.2.7->-r requirements/base.txt (line 8))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading click_plugins-1.1.1-py2.py3-none-any.whl (7.5 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting cron-descriptor>=1.2.32 (from django-celery-beat==2.5.0->-r requirements/base.txt (line 9))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading cron_descriptor-1.4.0.tar.gz (29 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Installing build dependencies: started\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[open_source_license:GPLv3] PASSED [ 32%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[open_source_license:Apache Software License 2.0] PASSED [ 32%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Installing build dependencies: finished with status 'done'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Getting requirements to build wheel: started\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Getting requirements to build wheel: finished with status 'done'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Preparing metadata (pyproject.toml): started\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting django-timezone-field>=5.0 (from django-celery-beat==2.5.0->-r requirements/base.txt (line 9))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading django_timezone_field-5.1-py3-none-any.whl (10 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting python-crontab>=2.3.4 (from django-celery-beat==2.5.0->-r requirements/base.txt (line 9))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading python_crontab-2.7.1-py3-none-any.whl (26 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting tzdata (from django-celery-beat==2.5.0->-r requirements/base.txt (line 9))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading tzdata-2023.3-py2.py3-none-any.whl (341 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 341.8/341.8 kB 3.8 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting asgiref<4,>=3.5.2 (from django==4.1.8->-r requirements/base.txt (line 13))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading asgiref-3.7.2-py3-none-any.whl (24 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting sqlparse>=0.2.2 (from django==4.1.8->-r requirements/base.txt (line 13))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading sqlparse-0.4.4-py3-none-any.whl (41 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[open_source_license:Not open source] PASSED [ 33%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 41.2/41.2 kB 738.0 kB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting python3-openid>=3.0.8 (from django-allauth==0.54.0->-r requirements/base.txt (line 16))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading python3_openid-3.2.0-py3-none-any.whl (133 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 133.7/133.7 kB 6.9 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting requests-oauthlib>=0.3.0 (from django-allauth==0.54.0->-r requirements/base.txt (line 16))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading requests_oauthlib-1.3.1-py2.py3-none-any.whl (23 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: requests in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from django-allauth==0.54.0->-r requirements/base.txt (line 16)) (2.28.2)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: pyjwt[crypto]>=1.7 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from django-allauth==0.54.0->-r requirements/base.txt (line 16)) (2.7.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting django-appconf>=1.0.3 (from django-compressor==4.3.1->-r requirements/base.txt (line 19))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading django_appconf-1.0.5-py3-none-any.whl (6.4 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting rjsmin==1.2.1 (from django-compressor==4.3.1->-r requirements/base.txt (line 19))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading rjsmin-1.2.1-cp310-cp310-manylinux1_x86_64.whl (34 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting django-modelcluster<7.0,>=6.0 (from wagtail==4.2.2->-r requirements/base.txt (line 28))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading django_modelcluster-6.0-py2.py3-none-any.whl (26 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting django-permissionedforms<1.0,>=0.1 (from wagtail==4.2.2->-r requirements/base.txt (line 28))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading django_permissionedforms-0.1-py2.py3-none-any.whl (5.7 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting django-taggit<4.0,>=2.0 (from wagtail==4.2.2->-r requirements/base.txt (line 28))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading django_taggit-3.1.0-py3-none-any.whl (60 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 60.2/60.2 kB 1.5 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting django-treebeard<5.0,>=4.5.1 (from wagtail==4.2.2->-r requirements/base.txt (line 28))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading django_treebeard-4.7-py3-none-any.whl (93 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 93.5/93.5 kB 4.4 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting django-filter<23,>=2.2 (from wagtail==4.2.2->-r requirements/base.txt (line 28))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading django_filter-22.1-py3-none-any.whl (80 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 80.9/80.9 kB 3.5 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting draftjs-exporter<3.0,>=2.1.5 (from wagtail==4.2.2->-r requirements/base.txt (line 28))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading draftjs_exporter-2.1.7-py3-none-any.whl (43 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 43.7/43.7 kB 7.0 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting beautifulsoup4<4.12,>=4.8 (from wagtail==4.2.2->-r requirements/base.txt (line 28))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading beautifulsoup4-4.11.2-py3-none-any.whl (129 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 129.4/129.4 kB 2.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting html5lib<2,>=0.999 (from wagtail==4.2.2->-r requirements/base.txt (line 28))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading html5lib-1.1-py2.py3-none-any.whl (112 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 112.2/112.2 kB 3.4 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting Willow<1.5,>=1.4 (from wagtail==4.2.2->-r requirements/base.txt (line 28))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading Willow-1.4.1-py2.py3-none-any.whl (106 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[windows:y] PASSED [ 33%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 106.9/106.9 kB 2.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting l18n>=2018.5 (from wagtail==4.2.2->-r requirements/base.txt (line 28))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading l18n-2021.3-py3-none-any.whl (51 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 51.5/51.5 kB 1.2 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting openpyxl<4.0,>=3.0.10 (from wagtail==4.2.2->-r requirements/base.txt (line 28))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading openpyxl-3.1.2-py2.py3-none-any.whl (249 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 250.0/250.0 kB 10.6 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting anyascii>=0.1.5 (from wagtail==4.2.2->-r requirements/base.txt (line 28))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading anyascii-0.3.2-py3-none-any.whl (289 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 289.9/289.9 kB 17.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting telepath<1,>=0.1.1 (from wagtail==4.2.2->-r requirements/base.txt (line 28))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading telepath-0.3.1-py38-none-any.whl (10 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: MarkupSafe>=2.1.1 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from Werkzeug[watchdog]==2.2.3->-r requirements/local.txt (line 3)) (2.1.3)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting watchdog (from Werkzeug[watchdog]==2.2.3->-r requirements/local.txt (line 3))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading watchdog-3.0.0-py3-none-manylinux2014_x86_64.whl (82 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 82.1/82.1 kB 2.2 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting ipython>=7.31.1 (from ipdb==0.13.13->-r requirements/local.txt (line 4))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading ipython-8.14.0-py3-none-any.whl (798 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 798.7/798.7 kB 4.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: tomli in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from ipdb==0.13.13->-r requirements/local.txt (line 4)) (2.0.1)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting decorator (from ipdb==0.13.13->-r requirements/local.txt (line 4))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading decorator-5.1.1-py3-none-any.whl (9.1 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting anyio>=3.0.0 (from watchfiles==0.19.0->-r requirements/local.txt (line 6))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading anyio-3.7.0-py3-none-any.whl (80 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 80.9/80.9 kB 1.5 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[windows:n] PASSED [ 33%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting typing-extensions>=3.10 (from mypy==1.1.1->-r requirements/local.txt (line 10))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading typing_extensions-4.6.3-py3-none-any.whl (31 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: mypy-extensions>=1.0.0 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from mypy==1.1.1->-r requirements/local.txt (line 10)) (1.0.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting django-stubs-ext>=0.8.0 (from django-stubs==1.16.0->-r requirements/local.txt (line 11))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading django_stubs_ext-4.2.2-py3-none-any.whl (8.3 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting types-pytz (from django-stubs==1.16.0->-r requirements/local.txt (line 11))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading types_pytz-2023.3.0.0-py3-none-any.whl (4.7 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting types-PyYAML (from django-stubs==1.16.0->-r requirements/local.txt (line 11))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading types_PyYAML-6.0.12.10-py3-none-any.whl (14 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: attrs>=19.2.0 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from pytest==7.2.2->-r requirements/local.txt (line 12)) (23.1.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: iniconfig in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from pytest==7.2.2->-r requirements/local.txt (line 12)) (2.0.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: packaging in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from pytest==7.2.2->-r requirements/local.txt (line 12)) (23.1)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: pluggy<2.0,>=0.12 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from pytest==7.2.2->-r requirements/local.txt (line 12)) (1.2.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: exceptiongroup>=1.0.0rc8 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from pytest==7.2.2->-r requirements/local.txt (line 12)) (1.1.1)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting termcolor>=1.1.0 (from pytest-sugar==0.9.6->-r requirements/local.txt (line 13))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading termcolor-2.3.0-py3-none-any.whl (6.9 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting sphinxcontrib-applehelp (from sphinx==6.1.3->-r requirements/local.txt (line 17))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading sphinxcontrib_applehelp-1.0.4-py3-none-any.whl (120 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 120.6/120.6 kB 6.9 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting sphinxcontrib-devhelp (from sphinx==6.1.3->-r requirements/local.txt (line 17))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading sphinxcontrib_devhelp-1.0.2-py2.py3-none-any.whl (84 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 84.7/84.7 kB 4.1 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting sphinxcontrib-jsmath (from sphinx==6.1.3->-r requirements/local.txt (line 17))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading sphinxcontrib_jsmath-1.0.1-py2.py3-none-any.whl (5.1 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting sphinxcontrib-htmlhelp>=2.0.0 (from sphinx==6.1.3->-r requirements/local.txt (line 17))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading sphinxcontrib_htmlhelp-2.0.1-py3-none-any.whl (99 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 99.8/99.8 kB 4.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting sphinxcontrib-serializinghtml>=1.1.5 (from sphinx==6.1.3->-r requirements/local.txt (line 17))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading sphinxcontrib_serializinghtml-1.1.5-py2.py3-none-any.whl (94 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 94.0/94.0 kB 1.6 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting sphinxcontrib-qthelp (from sphinx==6.1.3->-r requirements/local.txt (line 17))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading sphinxcontrib_qthelp-1.0.3-py2.py3-none-any.whl (90 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 90.6/90.6 kB 4.2 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: Jinja2>=3.0 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from sphinx==6.1.3->-r requirements/local.txt (line 17)) (3.1.2)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting Pygments>=2.13 (from sphinx==6.1.3->-r requirements/local.txt (line 17))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading Pygments-2.15.1-py3-none-any.whl (1.1 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[use_pycharm:y] PASSED [ 34%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.1/1.1 MB 4.4 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting docutils<0.20,>=0.18 (from sphinx==6.1.3->-r requirements/local.txt (line 17))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading docutils-0.19-py3-none-any.whl (570 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 570.5/570.5 kB 7.1 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting snowballstemmer>=2.0 (from sphinx==6.1.3->-r requirements/local.txt (line 17))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading snowballstemmer-2.2.0-py2.py3-none-any.whl (93 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 93.0/93.0 kB 2.2 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting babel>=2.9 (from sphinx==6.1.3->-r requirements/local.txt (line 17))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading Babel-2.12.1-py3-none-any.whl (10.1 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 10.1/10.1 MB 23.1 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting alabaster<0.8,>=0.7 (from sphinx==6.1.3->-r requirements/local.txt (line 17))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading alabaster-0.7.13-py3-none-any.whl (13 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting imagesize>=1.3 (from sphinx==6.1.3->-r requirements/local.txt (line 17))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading imagesize-1.4.1-py2.py3-none-any.whl (8.8 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting livereload (from sphinx-autobuild==2021.3.14->-r requirements/local.txt (line 18))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading livereload-2.6.3-py2.py3-none-any.whl (24 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: colorama in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from sphinx-autobuild==2021.3.14->-r requirements/local.txt (line 18)) (0.4.6)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: mccabe<0.8.0,>=0.7.0 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from flake8==6.0.0->-r requirements/local.txt (line 22)) (0.7.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: pycodestyle<2.11.0,>=2.10.0 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from flake8==6.0.0->-r requirements/local.txt (line 22)) (2.10.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: pyflakes<3.1.0,>=3.0.0 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from flake8==6.0.0->-r requirements/local.txt (line 22)) (3.0.1)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: isort<6,>=5.0.0 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from flake8-isort==6.0.0->-r requirements/local.txt (line 23)) (5.12.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: pathspec>=0.9.0 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from black==23.3.0->-r requirements/local.txt (line 25)) (0.11.1)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: platformdirs>=2 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from black==23.3.0->-r requirements/local.txt (line 25)) (3.8.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pylint-plugin-utils>=0.7 (from pylint-django==2.5.3->-r requirements/local.txt (line 26))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading pylint_plugin_utils-0.8.2-py3-none-any.whl (11 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[use_pycharm:n] PASSED [ 34%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pylint<3,>=2.0 (from pylint-django==2.5.3->-r requirements/local.txt (line 26))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading pylint-2.17.4-py3-none-any.whl (536 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 536.6/536.6 kB 12.2 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting astroid>=1.0 (from pylint-celery==0.3->-r requirements/local.txt (line 27))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading astroid-2.15.5-py3-none-any.whl (278 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 278.1/278.1 kB 6.1 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: cfgv>=2.0.0 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from pre-commit==3.2.2->-r requirements/local.txt (line 28)) (3.3.1)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: identify>=1.0.0 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from pre-commit==3.2.2->-r requirements/local.txt (line 28)) (2.5.24)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: nodeenv>=0.11.1 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from pre-commit==3.2.2->-r requirements/local.txt (line 28)) (1.8.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: pyyaml>=5.1 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from pre-commit==3.2.2->-r requirements/local.txt (line 28)) (6.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: virtualenv>=20.10.0 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from pre-commit==3.2.2->-r requirements/local.txt (line 28)) (20.23.1)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting Faker>=0.7.0 (from factory-boy==3.2.1->-r requirements/local.txt (line 32))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading Faker-18.11.2-py3-none-any.whl (1.7 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.7/1.7 MB 19.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: idna>=2.8 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from anyio>=3.0.0->watchfiles==0.19.0->-r requirements/local.txt (line 6)) (3.4)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting sniffio>=1.1 (from anyio>=3.0.0->watchfiles==0.19.0->-r requirements/local.txt (line 6))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading sniffio-1.3.0-py3-none-any.whl (10 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting lazy-object-proxy>=1.4.0 (from astroid>=1.0->pylint-celery==0.3->-r requirements/local.txt (line 27))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading lazy_object_proxy-1.9.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (63 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 63.3/63.3 kB 5.5 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: wrapt<2,>=1.11 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from astroid>=1.0->pylint-celery==0.3->-r requirements/local.txt (line 27)) (1.15.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting soupsieve>1.2 (from beautifulsoup4<4.12,>=4.8->wagtail==4.2.2->-r requirements/base.txt (line 28))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading soupsieve-2.4.1-py3-none-any.whl (36 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting prompt-toolkit>=3.0.36 (from click-repl>=0.2.0->celery==5.2.7->-r requirements/base.txt (line 8))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading prompt_toolkit-3.0.38-py3-none-any.whl (385 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 385.8/385.8 kB 14.4 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[use_docker:y] PASSED [ 35%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: python-dateutil>=2.4 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from Faker>=0.7.0->factory-boy==3.2.1->-r requirements/local.txt (line 32)) (2.8.2)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: six>=1.9 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from html5lib<2,>=0.999->wagtail==4.2.2->-r requirements/base.txt (line 28)) (1.16.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting webencodings (from html5lib<2,>=0.999->wagtail==4.2.2->-r requirements/base.txt (line 28))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting backcall (from ipython>=7.31.1->ipdb==0.13.13->-r requirements/local.txt (line 4))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading backcall-0.2.0-py2.py3-none-any.whl (11 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting jedi>=0.16 (from ipython>=7.31.1->ipdb==0.13.13->-r requirements/local.txt (line 4))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading jedi-0.18.2-py2.py3-none-any.whl (1.6 MB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.6/1.6 MB 18.2 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting matplotlib-inline (from ipython>=7.31.1->ipdb==0.13.13->-r requirements/local.txt (line 4))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading matplotlib_inline-0.1.6-py3-none-any.whl (9.4 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pickleshare (from ipython>=7.31.1->ipdb==0.13.13->-r requirements/local.txt (line 4))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading pickleshare-0.7.5-py2.py3-none-any.whl (6.9 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting stack-data (from ipython>=7.31.1->ipdb==0.13.13->-r requirements/local.txt (line 4))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading stack_data-0.6.2-py3-none-any.whl (24 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting traitlets>=5 (from ipython>=7.31.1->ipdb==0.13.13->-r requirements/local.txt (line 4))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading traitlets-5.9.0-py3-none-any.whl (117 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 117.4/117.4 kB 3.3 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pexpect>4.3 (from ipython>=7.31.1->ipdb==0.13.13->-r requirements/local.txt (line 4))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading pexpect-4.8.0-py2.py3-none-any.whl (59 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 59.0/59.0 kB 900.3 kB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting amqp<6.0.0,>=5.1.1 (from kombu<6.0,>=5.2.3->celery==5.2.7->-r requirements/base.txt (line 8))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading amqp-5.1.1-py3-none-any.whl (50 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 50.8/50.8 kB 4.1 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from nodeenv>=0.11.1->pre-commit==3.2.2->-r requirements/local.txt (line 28)) (65.5.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting et-xmlfile (from openpyxl<4.0,>=3.0.10->wagtail==4.2.2->-r requirements/base.txt (line 28))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading et_xmlfile-1.1.0-py3-none-any.whl (4.7 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[use_docker:n] PASSED [ 35%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: cryptography>=3.4.0 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from pyjwt[crypto]>=1.7->django-allauth==0.54.0->-r requirements/base.txt (line 16)) (41.0.1)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting tomlkit>=0.10.1 (from pylint<3,>=2.0->pylint-django==2.5.3->-r requirements/local.txt (line 26))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading tomlkit-0.11.8-py3-none-any.whl (35 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting dill>=0.2 (from pylint<3,>=2.0->pylint-django==2.5.3->-r requirements/local.txt (line 26))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading dill-0.3.6-py3-none-any.whl (110 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 110.5/110.5 kB 2.7 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting defusedxml (from python3-openid>=3.0.8->django-allauth==0.54.0->-r requirements/base.txt (line 16))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading defusedxml-0.7.1-py2.py3-none-any.whl (25 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: charset-normalizer<4,>=2 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from requests->django-allauth==0.54.0->-r requirements/base.txt (line 16)) (3.1.0)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: urllib3<1.27,>=1.21.1 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from requests->django-allauth==0.54.0->-r requirements/base.txt (line 16)) (1.26.16)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: certifi>=2017.4.17 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from requests->django-allauth==0.54.0->-r requirements/base.txt (line 16)) (2023.5.7)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting oauthlib>=3.0.0 (from requests-oauthlib>=0.3.0->django-allauth==0.54.0->-r requirements/base.txt (line 16))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading oauthlib-3.2.2-py3-none-any.whl (151 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 151.7/151.7 kB 8.5 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: distlib<1,>=0.3.6 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from virtualenv>=20.10.0->pre-commit==3.2.2->-r requirements/local.txt (line 28)) (0.3.6)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: filelock<4,>=3.12 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from virtualenv>=20.10.0->pre-commit==3.2.2->-r requirements/local.txt (line 28)) (3.12.2)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: cffi>=1.0.1 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from argon2-cffi-bindings->argon2-cffi==21.3.0->-r requirements/base.txt (line 5)) (1.15.1)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[postgresql_version:14] PASSED [ 35%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting tornado (from livereload->sphinx-autobuild==2021.3.14->-r requirements/local.txt (line 18))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading tornado-6.3.2-cp38-abi3-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (426 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 426.9/426.9 kB 17.9 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi==21.3.0->-r requirements/base.txt (line 5)) (2.21)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting parso<0.9.0,>=0.8.0 (from jedi>=0.16->ipython>=7.31.1->ipdb==0.13.13->-r requirements/local.txt (line 4))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading parso-0.8.3-py2.py3-none-any.whl (100 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 100.8/100.8 kB 4.1 MB/s eta 0:00:00\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting ptyprocess>=0.5 (from pexpect>4.3->ipython>=7.31.1->ipdb==0.13.13->-r requirements/local.txt (line 4))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting wcwidth (from prompt-toolkit>=3.0.36->click-repl>=0.2.0->celery==5.2.7->-r requirements/base.txt (line 8))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading wcwidth-0.2.6-py2.py3-none-any.whl (29 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[postgresql_version:13] PASSED [ 36%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting executing>=1.2.0 (from stack-data->ipython>=7.31.1->ipdb==0.13.13->-r requirements/local.txt (line 4))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading executing-1.2.0-py2.py3-none-any.whl (24 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting asttokens>=2.1.0 (from stack-data->ipython>=7.31.1->ipdb==0.13.13->-r requirements/local.txt (line 4))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading asttokens-2.2.1-py2.py3-none-any.whl (26 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Collecting pure-eval (from stack-data->ipython>=7.31.1->ipdb==0.13.13->-r requirements/local.txt (line 4))\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Downloading pure_eval-0.2.2-py3-none-any.whl (11 kB)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Building wheels for collected packages: django-allauth, pylint-celery, cron-descriptor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Building wheel for django-allauth (pyproject.toml): started\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[postgresql_version:12] PASSED [ 36%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Building wheel for django-allauth (pyproject.toml): finished with status 'done'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Created wheel for django-allauth: filename=django_allauth-0.54.0-py3-none-any.whl size=1068969 sha256=48be0126c6f69b361a5ffc9d1345969e5e2b0950c455540f9381e818785c6278\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/c1/0e/93/3c8d7272a68b90d9ac2dafaac48e6bb1153b98451330f879f7\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Building wheel for pylint-celery (pyproject.toml): started\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Building wheel for pylint-celery (pyproject.toml): finished with status 'done'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Created wheel for pylint-celery: filename=pylint_celery-0.3-py3-none-any.whl size=1717 sha256=f991452de6ca078ba2d195fa1e23b58af432271dcde119e6373960dd7c7ab1e8\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/03/fd/99/dbd1baf3613760f1a78dea2e59a0c06a1cd0101214398dee2c\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Building wheel for cron-descriptor (pyproject.toml): started\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Building wheel for cron-descriptor (pyproject.toml): finished with status 'done'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Created wheel for cron-descriptor: filename=cron_descriptor-1.4.0-py3-none-any.whl size=49837 sha256=2453a73bf13fd8e3d6d71f685e69bf033aa15b6d4b0229d45870971cbd8b2355\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/98/ff/fb/d908f229155ad6b65c7a34e9d35774fd1f40579241c3a5f924\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Successfully built django-allauth pylint-celery cron-descriptor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[postgresql_version:11] PASSED [ 37%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Installing collected packages: webencodings, wcwidth, types-PyYAML, types-pytz, snowballstemmer, rjsmin, rcssmin, pytz, pure-eval, ptyprocess, pickleshare, executing, draftjs-exporter, cron-descriptor, billiard, backcall, Willow, Werkzeug, watchdog, vine, tzdata, typing-extensions, traitlets, tornado, tomlkit, termcolor, telepath, sqlparse, sphinxcontrib-serializinghtml, sphinxcontrib-qthelp, sphinxcontrib-jsmath, sphinxcontrib-htmlhelp, sphinxcontrib-devhelp, sphinxcontrib-applehelp, soupsieve, sniffio, Pygments, psycopg2-binary, prompt-toolkit, Pillow, pexpect, parso, oauthlib, lazy-object-proxy, l18n, imagesize, html5lib, hiredis, et-xmlfile, docutils, django-environ, dill, defusedxml, decorator, coverage, click-plugins, click-didyoumean, babel, async-timeout, asttokens, anyascii, alabaster, stack-data, sphinx, requests-oauthlib, redis, python3-openid, python-crontab, pytest-sugar, pytest-django, openpyxl, mypy, matplotlib-inline, livereload, jedi, Faker, django-coverage-plugin, click-repl, beautifulsoup4, astroid, asgiref, argon2-cffi-bindings, anyio, amqp, watchfiles, sphinx-autobuild, pylint, kombu, ipython, factory-boy, django, argon2-cffi, pylint-plugin-utils, ipdb, djangorestframework, django-treebeard, django-timezone-field, django-taggit, django-stubs-ext, django-redis, django-permissionedforms, django-modelcluster, django-model-utils, django-filter, django-extensions, django-debug-toolbar, django-crispy-forms, django-cors-headers, django-appconf, django-allauth, celery, wagtail, pylint-django, pylint-celery, django-stubs, django-compressor, django-celery-beat, crispy-bootstrap5\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[postgresql_version:10] PASSED [ 37%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:AWS-use_whitenoise:y] PASSED [ 37%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:AWS-use_whitenoise:n] PASSED [ 38%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:GCP-use_whitenoise:y] PASSED [ 38%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:GCP-use_whitenoise:n] PASSED [ 39%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:Azure-use_whitenoise:y] PASSED [ 39%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:Azure-use_whitenoise:n] PASSED [ 39%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:None-use_whitenoise:y-mail_service:Mailgun] PASSED [ 40%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:None-use_whitenoise:y-mail_service:Mailjet] PASSED [ 40%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:None-use_whitenoise:y-mail_service:Mandrill] PASSED [ 41%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:None-use_whitenoise:y-mail_service:Postmark] PASSED [ 41%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:None-use_whitenoise:y-mail_service:Sendgrid] PASSED [ 41%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:None-use_whitenoise:y-mail_service:SendinBlue] PASSED [ 42%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:None-use_whitenoise:y-mail_service:SparkPost] PASSED [ 42%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:None-use_whitenoise:y-mail_service:Other SMTP] PASSED [ 43%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:AWS-mail_service:Mailgun] PASSED [ 43%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:AWS-mail_service:Amazon SES] PASSED [ 43%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Successfully installed Faker-18.11.2 Pillow-9.5.0 Pygments-2.15.1 Werkzeug-2.2.3 Willow-1.4.1 alabaster-0.7.13 amqp-5.1.1 anyascii-0.3.2 anyio-3.7.0 argon2-cffi-21.3.0 argon2-cffi-bindings-21.2.0 asgiref-3.7.2 astroid-2.15.5 asttokens-2.2.1 async-timeout-4.0.2 babel-2.12.1 backcall-0.2.0 beautifulsoup4-4.11.2 billiard-3.6.4.0 celery-5.2.7 click-didyoumean-0.3.0 click-plugins-1.1.1 click-repl-0.3.0 coverage-7.2.2 crispy-bootstrap5-0.7 cron-descriptor-1.4.0 decorator-5.1.1 defusedxml-0.7.1 dill-0.3.6 django-4.1.8 django-allauth-0.54.0 django-appconf-1.0.5 django-celery-beat-2.5.0 django-compressor-4.3.1 django-cors-headers-3.14.0 django-coverage-plugin-3.0.0 django-crispy-forms-2.0 django-debug-toolbar-4.0.0 django-environ-0.10.0 django-extensions-3.2.1 django-filter-22.1 django-model-utils-4.3.1 django-modelcluster-6.0 django-permissionedforms-0.1 django-redis-5.2.0 django-stubs-1.16.0 django-stubs-ext-4.2.2 django-taggit-3.1.0 django-timezone-field-5.1 django-treebeard-4.7 djangorestframework-3.14.0 docutils-0.19 draftjs-exporter-2.1.7 et-xmlfile-1.1.0 executing-1.2.0 factory-boy-3.2.1 hiredis-2.2.2 html5lib-1.1 imagesize-1.4.1 ipdb-0.13.13 ipython-8.14.0 jedi-0.18.2 kombu-5.3.1 l18n-2021.3 lazy-object-proxy-1.9.0 livereload-2.6.3 matplotlib-inline-0.1.6 mypy-1.1.1 oauthlib-3.2.2 openpyxl-3.1.2 parso-0.8.3 pexpect-4.8.0 pickleshare-0.7.5 prompt-toolkit-3.0.38 psycopg2-binary-2.9.6 ptyprocess-0.7.0 pure-eval-0.2.2 pylint-2.17.4 pylint-celery-0.3 pylint-django-2.5.3 pylint-plugin-utils-0.8.2 pytest-django-4.5.2 pytest-sugar-0.9.6 python-crontab-2.7.1 python3-openid-3.2.0 pytz-2023.3 rcssmin-1.1.1 redis-4.5.4 requests-oauthlib-1.3.1 rjsmin-1.2.1 sniffio-1.3.0 snowballstemmer-2.2.0 soupsieve-2.4.1 sphinx-6.1.3 sphinx-autobuild-2021.3.14 sphinxcontrib-applehelp-1.0.4 sphinxcontrib-devhelp-1.0.2 sphinxcontrib-htmlhelp-2.0.1 sphinxcontrib-jsmath-1.0.1 sphinxcontrib-qthelp-1.0.3 sphinxcontrib-serializinghtml-1.1.5 sqlparse-0.4.4 stack-data-0.6.2 telepath-0.3.1 termcolor-2.3.0 tomlkit-0.11.8 tornado-6.3.2 traitlets-5.9.0 types-PyYAML-6.0.12.10 types-pytz-2023.3.0.0 typing-extensions-4.6.3 tzdata-2023.3 vine-5.0.0 wagtail-4.2.2 watchdog-3.0.0 watchfiles-0.19.0 wcwidth-0.2.6 webencodings-0.5.1\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [notice] A new release of pip is available: 23.0.1 -> 23.1.2\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [notice] To update, run: pip install --upgrade pip\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:AWS-mail_service:Mailjet] PASSED [ 44%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | + git init\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | hint: Using 'master' as the name for the initial branch. This default branch name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | hint: is subject to change. To configure the initial branch name to use in all\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | hint: of your new repositories, which will suppress this warning, call:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | hint: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | hint: \tgit config --global init.defaultBranch <name>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | hint: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | hint: 'development'. The just-created branch can be renamed via this command:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | hint: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | hint: \tgit branch -m <name>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | Initialized empty Git repository in /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Jean-Zombie-cookiecutter-django-wagtail/.cache/bare/my_awesome_project/.git/\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | + git add .\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | + pre-commit run --show-diff-on-failure -a\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [INFO] Initializing environment for https://github.com/pre-commit/pre-commit-hooks.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:AWS-mail_service:Mandrill] PASSED [ 44%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [INFO] Initializing environment for https://github.com/asottile/pyupgrade.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [INFO] Initializing environment for https://github.com/psf/black.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:AWS-mail_service:Postmark] PASSED [ 45%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [INFO] Initializing environment for https://github.com/PyCQA/isort.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:AWS-mail_service:Sendgrid] PASSED [ 45%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:AWS-mail_service:SendinBlue] PASSED [ 45%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [INFO] Initializing environment for https://github.com/PyCQA/flake8.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [INFO] Initializing environment for https://github.com/PyCQA/flake8:flake8-isort.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:AWS-mail_service:SparkPost] PASSED [ 46%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [INFO] Installing environment for https://github.com/pre-commit/pre-commit-hooks.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [INFO] Once installed this environment will be reused.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [INFO] This may take a few minutes...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:AWS-mail_service:Other SMTP] PASSED [ 46%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:GCP-mail_service:Mailgun] PASSED [ 47%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:GCP-mail_service:Mailjet] PASSED [ 47%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [INFO] Installing environment for https://github.com/asottile/pyupgrade.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [INFO] Once installed this environment will be reused.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [INFO] This may take a few minutes...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:GCP-mail_service:Mandrill] PASSED [ 47%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:GCP-mail_service:Postmark] PASSED [ 48%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [INFO] Installing environment for https://github.com/psf/black.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [INFO] Once installed this environment will be reused.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [INFO] This may take a few minutes...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:GCP-mail_service:Sendgrid] PASSED [ 48%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:GCP-mail_service:SendinBlue] PASSED [ 49%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:GCP-mail_service:SparkPost] PASSED [ 49%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:GCP-mail_service:Other SMTP] PASSED [ 49%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:Azure-mail_service:Mailgun] PASSED [ 50%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [INFO] Installing environment for https://github.com/PyCQA/isort.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [INFO] Once installed this environment will be reused.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [INFO] This may take a few minutes...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:Azure-mail_service:Mailjet] PASSED [ 50%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:Azure-mail_service:Mandrill] PASSED [ 50%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:Azure-mail_service:Postmark] PASSED [ 51%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [INFO] Installing environment for https://github.com/PyCQA/flake8.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [INFO] Once installed this environment will be reused.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | [INFO] This may take a few minutes...\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:Azure-mail_service:Sendgrid] PASSED [ 51%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:Azure-mail_service:SendinBlue] PASSED [ 52%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:Azure-mail_service:SparkPost] PASSED [ 52%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | trim trailing whitespace.................................................Passed\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | fix end of files.........................................................Passed\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | check yaml...............................................................Passed\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | pyupgrade................................................................Passed\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | black....................................................................Passed\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[cloud_provider:Azure-mail_service:Other SMTP] PASSED [ 52%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | isort....................................................................Passed\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | flake8...................................................................Passed\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | + pytest\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[use_async:y] PASSED [ 53%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[use_async:n] PASSED [ 53%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | ============================= test session starts ==============================\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | platform linux -- Python 3.10.12, pytest-7.2.2, pluggy-1.2.0\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django: settings: config.settings.test (from option)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Jean-Zombie-cookiecutter-django-wagtail/.cache/bare/my_awesome_project, configfile: pytest.ini\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | plugins: sugar-0.9.6, django-4.5.2, instafail-0.5.0, anyio-3.7.0, cookies-0.7.0, Faker-18.11.2\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | collected 16 items\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | my_awesome_project/users/tests/test_admin.py EEEE                        [ 25%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | my_awesome_project/users/tests/test_forms.py E                           [ 31%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | my_awesome_project/users/tests/test_models.py E                          [ 37%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | my_awesome_project/users/tests/test_tasks.py E                           [ 43%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | my_awesome_project/users/tests/test_urls.py E                            [ 50%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[frontend_pipeline:None] PASSED [ 54%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | my_awesome_project/users/tests/test_views.py EEEEEE                      [ 87%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | my_awesome_project/users/tests/test_urls.py ..                           [100%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | ==================================== ERRORS ====================================\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _______________ ERROR at setup of TestUserAdmin.test_changelist ________________\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def ensure_connection(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Guarantee that a connection to the database is established.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if self.connection is None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >               self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>,), kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Connect to the database. Assume that the connection is closed.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Check for invalid configurations.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.check_settings()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # In case the previous connection was closed while in an atomic block\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.in_atomic_block = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.savepoint_ids = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.atomic_blocks = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.needs_rollback = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Reset parameters defining when to close/health-check the connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_enabled = self.settings_dict[\"CONN_HEALTH_CHECKS\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         max_age = self.settings_dict[\"CONN_MAX_AGE\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.close_at = None if max_age is None else time.monotonic() + max_age\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.closed_in_transaction = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.errors_occurred = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # New connections are healthy.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_done = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Establish the connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         conn_params = self.get_connection_params()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>, {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...})\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | conn_params = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def get_new_connection(self, conn_params):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | The above exception was the direct cause of the following exception:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | request = <SubRequest 'django_db_setup' for <Function test_changelist>>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_test_environment = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_blocker = <pytest_django.plugin._DatabaseBlocker object at 0x7fe4bf69d570>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_use_migrations = True, django_db_keepdb = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_createdb = False, django_db_modify_db_settings = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @pytest.fixture(scope=\"session\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def django_db_setup(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         request,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_test_environment: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_blocker,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_use_migrations: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_keepdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_createdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_modify_db_settings: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     ) -> None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Top level fixture to ensure test databases are available\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         from django.test.utils import setup_databases, teardown_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         setup_databases_args = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if not django_db_use_migrations:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             _disable_migrations()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if django_db_keepdb and not django_db_createdb:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             setup_databases_args[\"keepdb\"] = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         with django_db_blocker.unblock():\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >           db_cfg = setup_databases(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 verbosity=request.config.option.verbose,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 interactive=False,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 **setup_databases_args\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             )\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/pytest_django/fixtures.py:122: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/test/utils.py:220: in setup_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection.creation.create_test_db(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:62: in create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self._create_test_db(verbosity, autoclobber, keepdb)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:199: in _create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:331: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with super()._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:711: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with conn.cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:323: in cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return self._cursor()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:299: in _cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.ensure_connection()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:281: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/utils.py:91: in __exit__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     raise dj_exc_value.with_traceback(traceback) from exc_value\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: in connect\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: in get_new_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _________________ ERROR at setup of TestUserAdmin.test_search __________________\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def ensure_connection(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Guarantee that a connection to the database is established.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if self.connection is None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >               self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>,), kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Connect to the database. Assume that the connection is closed.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Check for invalid configurations.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.check_settings()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # In case the previous connection was closed while in an atomic block\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.in_atomic_block = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.savepoint_ids = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.atomic_blocks = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.needs_rollback = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Reset parameters defining when to close/health-check the connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_enabled = self.settings_dict[\"CONN_HEALTH_CHECKS\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         max_age = self.settings_dict[\"CONN_MAX_AGE\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.close_at = None if max_age is None else time.monotonic() + max_age\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.closed_in_transaction = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.errors_occurred = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # New connections are healthy.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_done = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Establish the connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         conn_params = self.get_connection_params()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>, {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...})\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | conn_params = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def get_new_connection(self, conn_params):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | The above exception was the direct cause of the following exception:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | request = <SubRequest 'django_db_setup' for <Function test_changelist>>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_test_environment = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_blocker = <pytest_django.plugin._DatabaseBlocker object at 0x7fe4bf69d570>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_use_migrations = True, django_db_keepdb = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_createdb = False, django_db_modify_db_settings = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @pytest.fixture(scope=\"session\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def django_db_setup(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         request,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_test_environment: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_blocker,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_use_migrations: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_keepdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_createdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_modify_db_settings: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     ) -> None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Top level fixture to ensure test databases are available\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         from django.test.utils import setup_databases, teardown_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         setup_databases_args = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if not django_db_use_migrations:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             _disable_migrations()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if django_db_keepdb and not django_db_createdb:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             setup_databases_args[\"keepdb\"] = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         with django_db_blocker.unblock():\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >           db_cfg = setup_databases(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 verbosity=request.config.option.verbose,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 interactive=False,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 **setup_databases_args\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             )\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/pytest_django/fixtures.py:122: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/test/utils.py:220: in setup_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection.creation.create_test_db(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:62: in create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self._create_test_db(verbosity, autoclobber, keepdb)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:199: in _create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:331: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with super()._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:711: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with conn.cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:323: in cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return self._cursor()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:299: in _cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.ensure_connection()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:281: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/utils.py:91: in __exit__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     raise dj_exc_value.with_traceback(traceback) from exc_value\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: in connect\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: in get_new_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | ___________________ ERROR at setup of TestUserAdmin.test_add ___________________\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def ensure_connection(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Guarantee that a connection to the database is established.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if self.connection is None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >               self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>,), kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Connect to the database. Assume that the connection is closed.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Check for invalid configurations.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.check_settings()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # In case the previous connection was closed while in an atomic block\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.in_atomic_block = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.savepoint_ids = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.atomic_blocks = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.needs_rollback = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Reset parameters defining when to close/health-check the connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_enabled = self.settings_dict[\"CONN_HEALTH_CHECKS\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         max_age = self.settings_dict[\"CONN_MAX_AGE\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.close_at = None if max_age is None else time.monotonic() + max_age\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.closed_in_transaction = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.errors_occurred = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # New connections are healthy.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_done = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Establish the connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         conn_params = self.get_connection_params()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>, {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...})\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | conn_params = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def get_new_connection(self, conn_params):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | The above exception was the direct cause of the following exception:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | request = <SubRequest 'django_db_setup' for <Function test_changelist>>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_test_environment = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_blocker = <pytest_django.plugin._DatabaseBlocker object at 0x7fe4bf69d570>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_use_migrations = True, django_db_keepdb = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_createdb = False, django_db_modify_db_settings = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @pytest.fixture(scope=\"session\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def django_db_setup(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         request,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_test_environment: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_blocker,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_use_migrations: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_keepdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_createdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_modify_db_settings: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     ) -> None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Top level fixture to ensure test databases are available\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         from django.test.utils import setup_databases, teardown_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         setup_databases_args = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if not django_db_use_migrations:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             _disable_migrations()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if django_db_keepdb and not django_db_createdb:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             setup_databases_args[\"keepdb\"] = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         with django_db_blocker.unblock():\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >           db_cfg = setup_databases(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 verbosity=request.config.option.verbose,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 interactive=False,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 **setup_databases_args\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             )\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/pytest_django/fixtures.py:122: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/test/utils.py:220: in setup_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection.creation.create_test_db(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:62: in create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self._create_test_db(verbosity, autoclobber, keepdb)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:199: in _create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:331: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with super()._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:711: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with conn.cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:323: in cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return self._cursor()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:299: in _cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.ensure_connection()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:281: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/utils.py:91: in __exit__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     raise dj_exc_value.with_traceback(traceback) from exc_value\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: in connect\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: in get_new_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | ________________ ERROR at setup of TestUserAdmin.test_view_user ________________\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def ensure_connection(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Guarantee that a connection to the database is established.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if self.connection is None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >               self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>,), kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Connect to the database. Assume that the connection is closed.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Check for invalid configurations.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.check_settings()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # In case the previous connection was closed while in an atomic block\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.in_atomic_block = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.savepoint_ids = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.atomic_blocks = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.needs_rollback = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Reset parameters defining when to close/health-check the connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_enabled = self.settings_dict[\"CONN_HEALTH_CHECKS\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         max_age = self.settings_dict[\"CONN_MAX_AGE\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.close_at = None if max_age is None else time.monotonic() + max_age\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.closed_in_transaction = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.errors_occurred = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # New connections are healthy.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_done = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Establish the connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         conn_params = self.get_connection_params()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>, {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...})\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | conn_params = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def get_new_connection(self, conn_params):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | The above exception was the direct cause of the following exception:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | request = <SubRequest 'django_db_setup' for <Function test_changelist>>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_test_environment = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_blocker = <pytest_django.plugin._DatabaseBlocker object at 0x7fe4bf69d570>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_use_migrations = True, django_db_keepdb = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_createdb = False, django_db_modify_db_settings = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @pytest.fixture(scope=\"session\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def django_db_setup(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         request,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_test_environment: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_blocker,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_use_migrations: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_keepdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_createdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_modify_db_settings: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     ) -> None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Top level fixture to ensure test databases are available\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         from django.test.utils import setup_databases, teardown_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         setup_databases_args = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if not django_db_use_migrations:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             _disable_migrations()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if django_db_keepdb and not django_db_createdb:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             setup_databases_args[\"keepdb\"] = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         with django_db_blocker.unblock():\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >           db_cfg = setup_databases(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 verbosity=request.config.option.verbose,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 interactive=False,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 **setup_databases_args\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             )\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/pytest_django/fixtures.py:122: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/test/utils.py:220: in setup_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection.creation.create_test_db(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:62: in create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self._create_test_db(verbosity, autoclobber, keepdb)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:199: in _create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:331: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with super()._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:711: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with conn.cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:323: in cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return self._cursor()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:299: in _cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.ensure_connection()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:281: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/utils.py:91: in __exit__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     raise dj_exc_value.with_traceback(traceback) from exc_value\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: in connect\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: in get_new_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ ERROR at setup of TestUserAdminCreationForm.test_username_validation_error_msg _\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def ensure_connection(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Guarantee that a connection to the database is established.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if self.connection is None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >               self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>,), kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Connect to the database. Assume that the connection is closed.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Check for invalid configurations.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.check_settings()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # In case the previous connection was closed while in an atomic block\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.in_atomic_block = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.savepoint_ids = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.atomic_blocks = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.needs_rollback = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Reset parameters defining when to close/health-check the connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_enabled = self.settings_dict[\"CONN_HEALTH_CHECKS\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         max_age = self.settings_dict[\"CONN_MAX_AGE\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.close_at = None if max_age is None else time.monotonic() + max_age\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.closed_in_transaction = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.errors_occurred = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # New connections are healthy.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_done = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Establish the connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         conn_params = self.get_connection_params()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>, {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...})\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | conn_params = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def get_new_connection(self, conn_params):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | The above exception was the direct cause of the following exception:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | request = <SubRequest 'django_db_setup' for <Function test_changelist>>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_test_environment = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_blocker = <pytest_django.plugin._DatabaseBlocker object at 0x7fe4bf69d570>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_use_migrations = True, django_db_keepdb = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_createdb = False, django_db_modify_db_settings = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @pytest.fixture(scope=\"session\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def django_db_setup(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         request,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_test_environment: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_blocker,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_use_migrations: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_keepdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_createdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_modify_db_settings: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     ) -> None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Top level fixture to ensure test databases are available\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         from django.test.utils import setup_databases, teardown_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         setup_databases_args = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if not django_db_use_migrations:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             _disable_migrations()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if django_db_keepdb and not django_db_createdb:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             setup_databases_args[\"keepdb\"] = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         with django_db_blocker.unblock():\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >           db_cfg = setup_databases(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 verbosity=request.config.option.verbose,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 interactive=False,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 **setup_databases_args\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             )\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/pytest_django/fixtures.py:122: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/test/utils.py:220: in setup_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection.creation.create_test_db(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:62: in create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self._create_test_db(verbosity, autoclobber, keepdb)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:199: in _create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:331: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with super()._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:711: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with conn.cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:323: in cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return self._cursor()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:299: in _cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.ensure_connection()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:281: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/utils.py:91: in __exit__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     raise dj_exc_value.with_traceback(traceback) from exc_value\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: in connect\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: in get_new_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _________________ ERROR at setup of test_user_get_absolute_url _________________\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def ensure_connection(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Guarantee that a connection to the database is established.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if self.connection is None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >               self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>,), kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Connect to the database. Assume that the connection is closed.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Check for invalid configurations.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.check_settings()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # In case the previous connection was closed while in an atomic block\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.in_atomic_block = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.savepoint_ids = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.atomic_blocks = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.needs_rollback = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Reset parameters defining when to close/health-check the connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_enabled = self.settings_dict[\"CONN_HEALTH_CHECKS\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         max_age = self.settings_dict[\"CONN_MAX_AGE\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.close_at = None if max_age is None else time.monotonic() + max_age\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.closed_in_transaction = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.errors_occurred = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # New connections are healthy.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_done = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Establish the connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         conn_params = self.get_connection_params()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>, {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...})\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | conn_params = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def get_new_connection(self, conn_params):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | The above exception was the direct cause of the following exception:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | request = <SubRequest 'django_db_setup' for <Function test_changelist>>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_test_environment = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_blocker = <pytest_django.plugin._DatabaseBlocker object at 0x7fe4bf69d570>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_use_migrations = True, django_db_keepdb = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_createdb = False, django_db_modify_db_settings = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @pytest.fixture(scope=\"session\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def django_db_setup(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         request,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_test_environment: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_blocker,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_use_migrations: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_keepdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_createdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_modify_db_settings: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     ) -> None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Top level fixture to ensure test databases are available\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         from django.test.utils import setup_databases, teardown_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         setup_databases_args = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if not django_db_use_migrations:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             _disable_migrations()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if django_db_keepdb and not django_db_createdb:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             setup_databases_args[\"keepdb\"] = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         with django_db_blocker.unblock():\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >           db_cfg = setup_databases(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 verbosity=request.config.option.verbose,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 interactive=False,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 **setup_databases_args\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             )\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/pytest_django/fixtures.py:122: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/test/utils.py:220: in setup_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection.creation.create_test_db(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:62: in create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self._create_test_db(verbosity, autoclobber, keepdb)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:199: in _create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:331: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with super()._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:711: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with conn.cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:323: in cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return self._cursor()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:299: in _cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.ensure_connection()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:281: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/utils.py:91: in __exit__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     raise dj_exc_value.with_traceback(traceback) from exc_value\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: in connect\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: in get_new_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | ______________________ ERROR at setup of test_user_count _______________________\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def ensure_connection(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Guarantee that a connection to the database is established.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if self.connection is None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >               self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>,), kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Connect to the database. Assume that the connection is closed.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Check for invalid configurations.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.check_settings()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # In case the previous connection was closed while in an atomic block\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.in_atomic_block = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.savepoint_ids = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.atomic_blocks = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.needs_rollback = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Reset parameters defining when to close/health-check the connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_enabled = self.settings_dict[\"CONN_HEALTH_CHECKS\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         max_age = self.settings_dict[\"CONN_MAX_AGE\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.close_at = None if max_age is None else time.monotonic() + max_age\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.closed_in_transaction = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.errors_occurred = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # New connections are healthy.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_done = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Establish the connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         conn_params = self.get_connection_params()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>, {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...})\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | conn_params = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def get_new_connection(self, conn_params):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | The above exception was the direct cause of the following exception:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | request = <SubRequest '_django_db_marker' for <Function test_user_count>>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @pytest.fixture(autouse=True)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def _django_db_marker(request) -> None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Implement the django_db marker, internal to pytest-django.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         marker = request.node.get_closest_marker(\"django_db\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if marker:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >           request.getfixturevalue(\"_django_db_helper\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/pytest_django/plugin.py:465: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/pytest_django/fixtures.py:122: in django_db_setup\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     db_cfg = setup_databases(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/test/utils.py:220: in setup_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection.creation.create_test_db(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:62: in create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self._create_test_db(verbosity, autoclobber, keepdb)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:199: in _create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:331: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with super()._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:711: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with conn.cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:323: in cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return self._cursor()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:299: in _cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.ensure_connection()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:281: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/utils.py:91: in __exit__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     raise dj_exc_value.with_traceback(traceback) from exc_value\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: in connect\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: in get_new_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | ________________________ ERROR at setup of test_detail _________________________\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def ensure_connection(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Guarantee that a connection to the database is established.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if self.connection is None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >               self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>,), kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Connect to the database. Assume that the connection is closed.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Check for invalid configurations.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.check_settings()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # In case the previous connection was closed while in an atomic block\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.in_atomic_block = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.savepoint_ids = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.atomic_blocks = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.needs_rollback = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Reset parameters defining when to close/health-check the connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_enabled = self.settings_dict[\"CONN_HEALTH_CHECKS\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         max_age = self.settings_dict[\"CONN_MAX_AGE\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.close_at = None if max_age is None else time.monotonic() + max_age\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.closed_in_transaction = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.errors_occurred = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # New connections are healthy.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_done = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Establish the connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         conn_params = self.get_connection_params()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>, {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...})\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | conn_params = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def get_new_connection(self, conn_params):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | The above exception was the direct cause of the following exception:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | request = <SubRequest 'django_db_setup' for <Function test_changelist>>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_test_environment = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_blocker = <pytest_django.plugin._DatabaseBlocker object at 0x7fe4bf69d570>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_use_migrations = True, django_db_keepdb = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_createdb = False, django_db_modify_db_settings = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @pytest.fixture(scope=\"session\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def django_db_setup(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         request,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_test_environment: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_blocker,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_use_migrations: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_keepdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_createdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_modify_db_settings: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     ) -> None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Top level fixture to ensure test databases are available\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         from django.test.utils import setup_databases, teardown_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         setup_databases_args = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if not django_db_use_migrations:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             _disable_migrations()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if django_db_keepdb and not django_db_createdb:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             setup_databases_args[\"keepdb\"] = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         with django_db_blocker.unblock():\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >           db_cfg = setup_databases(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 verbosity=request.config.option.verbose,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 interactive=False,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 **setup_databases_args\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             )\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/pytest_django/fixtures.py:122: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/test/utils.py:220: in setup_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection.creation.create_test_db(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:62: in create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self._create_test_db(verbosity, autoclobber, keepdb)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:199: in _create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:331: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with super()._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:711: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with conn.cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:323: in cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return self._cursor()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:299: in _cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.ensure_connection()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:281: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/utils.py:91: in __exit__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     raise dj_exc_value.with_traceback(traceback) from exc_value\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: in connect\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: in get_new_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | __________ ERROR at setup of TestUserUpdateView.test_get_success_url ___________\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def ensure_connection(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Guarantee that a connection to the database is established.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if self.connection is None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >               self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>,), kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Connect to the database. Assume that the connection is closed.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Check for invalid configurations.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.check_settings()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # In case the previous connection was closed while in an atomic block\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.in_atomic_block = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.savepoint_ids = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.atomic_blocks = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.needs_rollback = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Reset parameters defining when to close/health-check the connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_enabled = self.settings_dict[\"CONN_HEALTH_CHECKS\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         max_age = self.settings_dict[\"CONN_MAX_AGE\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.close_at = None if max_age is None else time.monotonic() + max_age\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.closed_in_transaction = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.errors_occurred = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # New connections are healthy.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_done = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Establish the connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         conn_params = self.get_connection_params()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>, {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...})\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | conn_params = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def get_new_connection(self, conn_params):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | The above exception was the direct cause of the following exception:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | request = <SubRequest 'django_db_setup' for <Function test_changelist>>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_test_environment = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_blocker = <pytest_django.plugin._DatabaseBlocker object at 0x7fe4bf69d570>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_use_migrations = True, django_db_keepdb = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_createdb = False, django_db_modify_db_settings = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @pytest.fixture(scope=\"session\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def django_db_setup(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         request,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_test_environment: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_blocker,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_use_migrations: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_keepdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_createdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_modify_db_settings: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     ) -> None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Top level fixture to ensure test databases are available\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         from django.test.utils import setup_databases, teardown_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         setup_databases_args = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if not django_db_use_migrations:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             _disable_migrations()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if django_db_keepdb and not django_db_createdb:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             setup_databases_args[\"keepdb\"] = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         with django_db_blocker.unblock():\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >           db_cfg = setup_databases(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 verbosity=request.config.option.verbose,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 interactive=False,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 **setup_databases_args\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             )\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/pytest_django/fixtures.py:122: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/test/utils.py:220: in setup_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection.creation.create_test_db(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:62: in create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self._create_test_db(verbosity, autoclobber, keepdb)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:199: in _create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:331: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with super()._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:711: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with conn.cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:323: in cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return self._cursor()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:299: in _cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.ensure_connection()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:281: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/utils.py:91: in __exit__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     raise dj_exc_value.with_traceback(traceback) from exc_value\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: in connect\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: in get_new_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _____________ ERROR at setup of TestUserUpdateView.test_get_object _____________\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def ensure_connection(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Guarantee that a connection to the database is established.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if self.connection is None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >               self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>,), kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Connect to the database. Assume that the connection is closed.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Check for invalid configurations.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.check_settings()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # In case the previous connection was closed while in an atomic block\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.in_atomic_block = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.savepoint_ids = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.atomic_blocks = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.needs_rollback = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Reset parameters defining when to close/health-check the connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_enabled = self.settings_dict[\"CONN_HEALTH_CHECKS\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         max_age = self.settings_dict[\"CONN_MAX_AGE\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.close_at = None if max_age is None else time.monotonic() + max_age\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.closed_in_transaction = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.errors_occurred = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # New connections are healthy.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_done = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Establish the connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         conn_params = self.get_connection_params()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>, {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...})\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | conn_params = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def get_new_connection(self, conn_params):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | The above exception was the direct cause of the following exception:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | request = <SubRequest 'django_db_setup' for <Function test_changelist>>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_test_environment = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_blocker = <pytest_django.plugin._DatabaseBlocker object at 0x7fe4bf69d570>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_use_migrations = True, django_db_keepdb = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_createdb = False, django_db_modify_db_settings = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @pytest.fixture(scope=\"session\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def django_db_setup(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         request,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_test_environment: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_blocker,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_use_migrations: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_keepdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_createdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_modify_db_settings: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     ) -> None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Top level fixture to ensure test databases are available\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         from django.test.utils import setup_databases, teardown_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         setup_databases_args = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if not django_db_use_migrations:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             _disable_migrations()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if django_db_keepdb and not django_db_createdb:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             setup_databases_args[\"keepdb\"] = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         with django_db_blocker.unblock():\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >           db_cfg = setup_databases(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 verbosity=request.config.option.verbose,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 interactive=False,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 **setup_databases_args\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             )\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/pytest_django/fixtures.py:122: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/test/utils.py:220: in setup_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection.creation.create_test_db(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:62: in create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self._create_test_db(verbosity, autoclobber, keepdb)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:199: in _create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:331: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with super()._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:711: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with conn.cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:323: in cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return self._cursor()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:299: in _cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.ensure_connection()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:281: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/utils.py:91: in __exit__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     raise dj_exc_value.with_traceback(traceback) from exc_value\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: in connect\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: in get_new_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _____________ ERROR at setup of TestUserUpdateView.test_form_valid _____________\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def ensure_connection(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Guarantee that a connection to the database is established.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if self.connection is None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >               self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>,), kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Connect to the database. Assume that the connection is closed.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Check for invalid configurations.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.check_settings()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # In case the previous connection was closed while in an atomic block\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.in_atomic_block = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.savepoint_ids = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.atomic_blocks = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.needs_rollback = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Reset parameters defining when to close/health-check the connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_enabled = self.settings_dict[\"CONN_HEALTH_CHECKS\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         max_age = self.settings_dict[\"CONN_MAX_AGE\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.close_at = None if max_age is None else time.monotonic() + max_age\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.closed_in_transaction = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.errors_occurred = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # New connections are healthy.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_done = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Establish the connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         conn_params = self.get_connection_params()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>, {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...})\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | conn_params = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def get_new_connection(self, conn_params):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | The above exception was the direct cause of the following exception:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | request = <SubRequest 'django_db_setup' for <Function test_changelist>>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_test_environment = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_blocker = <pytest_django.plugin._DatabaseBlocker object at 0x7fe4bf69d570>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_use_migrations = True, django_db_keepdb = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_createdb = False, django_db_modify_db_settings = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @pytest.fixture(scope=\"session\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def django_db_setup(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         request,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_test_environment: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_blocker,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_use_migrations: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_keepdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_createdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_modify_db_settings: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     ) -> None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Top level fixture to ensure test databases are available\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         from django.test.utils import setup_databases, teardown_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         setup_databases_args = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if not django_db_use_migrations:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             _disable_migrations()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if django_db_keepdb and not django_db_createdb:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             setup_databases_args[\"keepdb\"] = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         with django_db_blocker.unblock():\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >           db_cfg = setup_databases(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 verbosity=request.config.option.verbose,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 interactive=False,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 **setup_databases_args\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             )\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/pytest_django/fixtures.py:122: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/test/utils.py:220: in setup_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection.creation.create_test_db(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:62: in create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self._create_test_db(verbosity, autoclobber, keepdb)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:199: in _create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:331: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with super()._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:711: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with conn.cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:323: in cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return self._cursor()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:299: in _cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.ensure_connection()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:281: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/utils.py:91: in __exit__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     raise dj_exc_value.with_traceback(traceback) from exc_value\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: in connect\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: in get_new_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _________ ERROR at setup of TestUserRedirectView.test_get_redirect_url _________\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def ensure_connection(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Guarantee that a connection to the database is established.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if self.connection is None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >               self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>,), kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Connect to the database. Assume that the connection is closed.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Check for invalid configurations.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.check_settings()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # In case the previous connection was closed while in an atomic block\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.in_atomic_block = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.savepoint_ids = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.atomic_blocks = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.needs_rollback = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Reset parameters defining when to close/health-check the connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_enabled = self.settings_dict[\"CONN_HEALTH_CHECKS\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         max_age = self.settings_dict[\"CONN_MAX_AGE\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.close_at = None if max_age is None else time.monotonic() + max_age\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.closed_in_transaction = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.errors_occurred = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # New connections are healthy.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_done = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Establish the connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         conn_params = self.get_connection_params()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>, {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...})\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | conn_params = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def get_new_connection(self, conn_params):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | The above exception was the direct cause of the following exception:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | request = <SubRequest 'django_db_setup' for <Function test_changelist>>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_test_environment = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_blocker = <pytest_django.plugin._DatabaseBlocker object at 0x7fe4bf69d570>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_use_migrations = True, django_db_keepdb = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_createdb = False, django_db_modify_db_settings = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @pytest.fixture(scope=\"session\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def django_db_setup(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         request,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_test_environment: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_blocker,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_use_migrations: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_keepdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_createdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_modify_db_settings: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     ) -> None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Top level fixture to ensure test databases are available\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         from django.test.utils import setup_databases, teardown_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         setup_databases_args = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if not django_db_use_migrations:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             _disable_migrations()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if django_db_keepdb and not django_db_createdb:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             setup_databases_args[\"keepdb\"] = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         with django_db_blocker.unblock():\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >           db_cfg = setup_databases(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 verbosity=request.config.option.verbose,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 interactive=False,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 **setup_databases_args\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             )\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/pytest_django/fixtures.py:122: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/test/utils.py:220: in setup_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection.creation.create_test_db(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:62: in create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self._create_test_db(verbosity, autoclobber, keepdb)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:199: in _create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:331: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with super()._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:711: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with conn.cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:323: in cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return self._cursor()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:299: in _cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.ensure_connection()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:281: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/utils.py:91: in __exit__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     raise dj_exc_value.with_traceback(traceback) from exc_value\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: in connect\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: in get_new_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | ___________ ERROR at setup of TestUserDetailView.test_authenticated ____________\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def ensure_connection(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Guarantee that a connection to the database is established.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if self.connection is None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >               self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>,), kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Connect to the database. Assume that the connection is closed.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Check for invalid configurations.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.check_settings()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # In case the previous connection was closed while in an atomic block\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.in_atomic_block = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.savepoint_ids = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.atomic_blocks = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.needs_rollback = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Reset parameters defining when to close/health-check the connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_enabled = self.settings_dict[\"CONN_HEALTH_CHECKS\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         max_age = self.settings_dict[\"CONN_MAX_AGE\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.close_at = None if max_age is None else time.monotonic() + max_age\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.closed_in_transaction = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.errors_occurred = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # New connections are healthy.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_done = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Establish the connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         conn_params = self.get_connection_params()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>, {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...})\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | conn_params = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def get_new_connection(self, conn_params):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | The above exception was the direct cause of the following exception:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | request = <SubRequest 'django_db_setup' for <Function test_changelist>>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_test_environment = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_blocker = <pytest_django.plugin._DatabaseBlocker object at 0x7fe4bf69d570>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_use_migrations = True, django_db_keepdb = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_createdb = False, django_db_modify_db_settings = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @pytest.fixture(scope=\"session\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def django_db_setup(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         request,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_test_environment: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_blocker,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_use_migrations: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_keepdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_createdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_modify_db_settings: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     ) -> None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Top level fixture to ensure test databases are available\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         from django.test.utils import setup_databases, teardown_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         setup_databases_args = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if not django_db_use_migrations:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             _disable_migrations()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if django_db_keepdb and not django_db_createdb:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             setup_databases_args[\"keepdb\"] = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         with django_db_blocker.unblock():\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >           db_cfg = setup_databases(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 verbosity=request.config.option.verbose,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 interactive=False,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 **setup_databases_args\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             )\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/pytest_django/fixtures.py:122: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/test/utils.py:220: in setup_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection.creation.create_test_db(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:62: in create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self._create_test_db(verbosity, autoclobber, keepdb)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:199: in _create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:331: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with super()._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:711: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with conn.cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:323: in cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return self._cursor()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:299: in _cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.ensure_connection()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:281: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/utils.py:91: in __exit__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     raise dj_exc_value.with_traceback(traceback) from exc_value\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: in connect\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: in get_new_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _________ ERROR at setup of TestUserDetailView.test_not_authenticated __________\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def ensure_connection(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Guarantee that a connection to the database is established.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if self.connection is None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >               self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>,), kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(self):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Connect to the database. Assume that the connection is closed.\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Check for invalid configurations.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.check_settings()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # In case the previous connection was closed while in an atomic block\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.in_atomic_block = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.savepoint_ids = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.atomic_blocks = []\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.needs_rollback = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Reset parameters defining when to close/health-check the connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_enabled = self.settings_dict[\"CONN_HEALTH_CHECKS\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         max_age = self.settings_dict[\"CONN_MAX_AGE\"]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.close_at = None if max_age is None else time.monotonic() + max_age\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.closed_in_transaction = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.errors_occurred = False\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # New connections are healthy.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         self.health_check_done = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Establish the connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         conn_params = self.get_connection_params()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | args = (<DatabaseWrapper vendor='postgresql' alias='__no_db__'>, {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...})\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @wraps(func)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def inner(*args, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Detect a running event loop in this thread.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         try:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             get_running_loop()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         except RuntimeError:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             pass\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         else:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             if not os.environ.get(\"DJANGO_ALLOW_ASYNC_UNSAFE\"):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 raise SynchronousOnlyOperation(message)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         # Pass onward.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | self = <DatabaseWrapper vendor='postgresql' alias='__no_db__'>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | conn_params = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @async_unsafe\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def get_new_connection(self, conn_params):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | The above exception was the direct cause of the following exception:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | request = <SubRequest 'django_db_setup' for <Function test_changelist>>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_test_environment = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_blocker = <pytest_django.plugin._DatabaseBlocker object at 0x7fe4bf69d570>\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_use_migrations = True, django_db_keepdb = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | django_db_createdb = False, django_db_modify_db_settings = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     @pytest.fixture(scope=\"session\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def django_db_setup(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         request,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_test_environment: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_blocker,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_use_migrations: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_keepdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_createdb: bool,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         django_db_modify_db_settings: None,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     ) -> None:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"Top level fixture to ensure test databases are available\"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         from django.test.utils import setup_databases, teardown_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         setup_databases_args = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if not django_db_use_migrations:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             _disable_migrations()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if django_db_keepdb and not django_db_createdb:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             setup_databases_args[\"keepdb\"] = True\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         with django_db_blocker.unblock():\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >           db_cfg = setup_databases(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 verbosity=request.config.option.verbose,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 interactive=False,\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |                 **setup_databases_args\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             )\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/pytest_django/fixtures.py:122: \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/test/utils.py:220: in setup_databases\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection.creation.create_test_db(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:62: in create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self._create_test_db(verbosity, autoclobber, keepdb)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/creation.py:199: in _create_test_db\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:331: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with super()._nodb_cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/contextlib.py:135: in __enter__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return next(self.gen)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:711: in _nodb_cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with conn.cursor() as cursor:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:323: in cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return self._cursor()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:299: in _cursor\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.ensure_connection()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:281: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     with self.wrap_database_errors:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/utils.py:91: in __exit__\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     raise dj_exc_value.with_traceback(traceback) from exc_value\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:282: in ensure_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connect()\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/base/base.py:263: in connect\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     self.connection = self.get_new_connection(conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/utils/asyncio.py:26: in inner\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     return func(*args, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:215: in get_new_connection\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     connection = Database.connect(**conn_params)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | dsn = 'user=postgres password=postgres host=localhost port=5432 dbname=postgres'\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | connection_factory = None, cursor_factory = None\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwargs = {'database': 'postgres', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Create a new database connection.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         The connection parameters can be specified as a string:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         or using a set of keyword arguments:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Or as a mix of both. The basic connection parameters are:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *dbname*: the database name\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *database*: the database name (only as keyword argument)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *user*: user name used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *password*: password used to authenticate\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *connection_factory* parameter a different class or connections\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         factory can be specified. It should be a callable object taking a dsn\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         argument.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         used by cursor().\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         Any other keyword parameter will be passed to the underlying client\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         library: the list of supported parameters depends on the library version.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         \"\"\"\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         kwasync = {}\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async'] = kwargs.pop('async')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         if 'async_' in kwargs:\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |             kwasync['async_'] = kwargs.pop('async_')\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | =============================== warnings summary ===============================\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | my_awesome_project/users/tests/test_admin.py::TestUserAdmin::test_changelist\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |   /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/django/db/backends/postgresql/base.py:336: RuntimeWarning: Normally Django will use a connection to the 'postgres' database to avoid running initialization queries against the production database when it's not needed (for example, when running tests). Django was unable to create a connection to the 'postgres' database and will use the first PostgreSQL database instead.\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   |     warnings.warn(\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | =========================== short test summary info ============================\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | ERROR my_awesome_project/users/tests/test_admin.py::TestUserAdmin::test_changelist - django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | ERROR my_awesome_project/users/tests/test_admin.py::TestUserAdmin::test_search - django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | ERROR my_awesome_project/users/tests/test_admin.py::TestUserAdmin::test_add - django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | ERROR my_awesome_project/users/tests/test_admin.py::TestUserAdmin::test_view_user - django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | ERROR my_awesome_project/users/tests/test_forms.py::TestUserAdminCreationForm::test_username_validation_error_msg - django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | ERROR my_awesome_project/users/tests/test_models.py::test_user_get_absolute_url - django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | ERROR my_awesome_project/users/tests/test_tasks.py::test_user_count - django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | ERROR my_awesome_project/users/tests/test_urls.py::test_detail - django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | ERROR my_awesome_project/users/tests/test_views.py::TestUserUpdateView::test_get_success_url - django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | ERROR my_awesome_project/users/tests/test_views.py::TestUserUpdateView::test_get_object - django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | ERROR my_awesome_project/users/tests/test_views.py::TestUserUpdateView::test_form_valid - django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | ERROR my_awesome_project/users/tests/test_views.py::TestUserRedirectView::test_get_redirect_url - django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | ERROR my_awesome_project/users/tests/test_views.py::TestUserDetailView::test_authenticated - django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | ERROR my_awesome_project/users/tests/test_views.py::TestUserDetailView::test_not_authenticated - django.db.utils.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   | =================== 2 passed, 1 warning, 14 errors in 4.34s ====================\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ]   \u274c  Failure - Main Bare Metal Celery\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ] exitcode '1': failure\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[frontend_pipeline:Django Compressor] PASSED [ 54%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[frontend_pipeline:Gulp] PASSED [ 54%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[frontend_pipeline:Webpack] PASSED [ 55%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[use_celery:y] PASSED [ 55%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[use_celery:n] PASSED [ 56%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[use_mailhog:y] PASSED [ 56%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/Bare metal Celery   ] \ud83c\udfc1  Job failed\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[use_mailhog:n] PASSED [ 56%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[use_sentry:y] PASSED [ 57%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[use_sentry:n] PASSED [ 57%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[use_whitenoise:y] PASSED [ 58%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[use_whitenoise:n] PASSED [ 58%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[use_heroku:y] PASSED [ 58%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[use_heroku:n] PASSED [ 59%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[ci_tool:None] PASSED [ 59%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[ci_tool:Travis] PASSED [ 60%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[ci_tool:Gitlab] PASSED [ 60%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[ci_tool:Github] PASSED [ 60%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[keep_local_envs_in_vcs:y] PASSED [ 61%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[keep_local_envs_in_vcs:n] PASSED [ 61%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[debug:y] PASSED [ 62%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_flake8_passes[debug:n] PASSED [ 62%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[open_source_license:MIT] PASSED [ 62%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[open_source_license:BSD] PASSED [ 63%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[open_source_license:GPLv3] PASSED [ 63%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[open_source_license:Apache Software License 2.0] PASSED [ 64%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[open_source_license:Not open source] PASSED [ 64%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[windows:y] PASSED [ 64%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[windows:n] PASSED [ 65%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[use_pycharm:y] PASSED [ 65%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[use_pycharm:n] PASSED [ 66%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[use_docker:y] PASSED [ 66%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[use_docker:n] PASSED [ 66%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[postgresql_version:14] PASSED [ 67%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[postgresql_version:13] PASSED [ 67%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[postgresql_version:12] PASSED [ 67%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[postgresql_version:11] PASSED [ 68%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[postgresql_version:10] PASSED [ 68%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:AWS-use_whitenoise:y] PASSED [ 69%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:AWS-use_whitenoise:n] PASSED [ 69%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:GCP-use_whitenoise:y] PASSED [ 69%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:GCP-use_whitenoise:n] PASSED [ 70%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:Azure-use_whitenoise:y] PASSED [ 70%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:Azure-use_whitenoise:n] PASSED [ 71%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:None-use_whitenoise:y-mail_service:Mailgun] PASSED [ 71%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:None-use_whitenoise:y-mail_service:Mailjet] PASSED [ 71%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:None-use_whitenoise:y-mail_service:Mandrill] PASSED [ 72%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:None-use_whitenoise:y-mail_service:Postmark] PASSED [ 72%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:None-use_whitenoise:y-mail_service:Sendgrid] PASSED [ 73%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:None-use_whitenoise:y-mail_service:SendinBlue] PASSED [ 73%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:None-use_whitenoise:y-mail_service:SparkPost] PASSED [ 73%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:None-use_whitenoise:y-mail_service:Other SMTP] PASSED [ 74%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:AWS-mail_service:Mailgun] PASSED [ 74%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:AWS-mail_service:Amazon SES] PASSED [ 75%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:AWS-mail_service:Mailjet] PASSED [ 75%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:AWS-mail_service:Mandrill] PASSED [ 75%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:AWS-mail_service:Postmark] PASSED [ 76%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:AWS-mail_service:Sendgrid] PASSED [ 76%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:AWS-mail_service:SendinBlue] PASSED [ 77%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:AWS-mail_service:SparkPost] PASSED [ 77%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:AWS-mail_service:Other SMTP] PASSED [ 77%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:GCP-mail_service:Mailgun] PASSED [ 78%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:GCP-mail_service:Mailjet] PASSED [ 78%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:GCP-mail_service:Mandrill] PASSED [ 79%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:GCP-mail_service:Postmark] PASSED [ 79%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:GCP-mail_service:Sendgrid] PASSED [ 79%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:GCP-mail_service:SendinBlue] PASSED [ 80%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:GCP-mail_service:SparkPost] PASSED [ 80%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:GCP-mail_service:Other SMTP] PASSED [ 81%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:Azure-mail_service:Mailgun] PASSED [ 81%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:Azure-mail_service:Mailjet] PASSED [ 81%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:Azure-mail_service:Mandrill] PASSED [ 82%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:Azure-mail_service:Postmark] PASSED [ 82%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:Azure-mail_service:Sendgrid] PASSED [ 83%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:Azure-mail_service:SendinBlue] PASSED [ 83%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:Azure-mail_service:SparkPost] PASSED [ 83%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[cloud_provider:Azure-mail_service:Other SMTP] PASSED [ 84%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[use_async:y] PASSED [ 84%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[use_async:n] PASSED [ 84%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[frontend_pipeline:None] PASSED [ 85%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[frontend_pipeline:Django Compressor] PASSED [ 85%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[frontend_pipeline:Gulp] PASSED [ 86%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[frontend_pipeline:Webpack] PASSED [ 86%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[use_celery:y] PASSED [ 86%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[use_celery:n] PASSED [ 87%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[use_mailhog:y] PASSED [ 87%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[use_mailhog:n] PASSED [ 88%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[use_sentry:y] PASSED [ 88%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[use_sentry:n] PASSED [ 88%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[use_whitenoise:y] PASSED [ 89%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[use_whitenoise:n] PASSED [ 89%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[use_heroku:y] PASSED [ 90%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[use_heroku:n] PASSED [ 90%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[ci_tool:None] PASSED [ 90%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[ci_tool:Travis] PASSED [ 91%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[ci_tool:Gitlab] PASSED [ 91%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[ci_tool:Github] PASSED [ 92%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[keep_local_envs_in_vcs:y] PASSED [ 92%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[keep_local_envs_in_vcs:n] PASSED [ 92%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[debug:y] PASSED [ 93%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   | tests/test_cookiecutter_generation.py::test_black_passes[debug:n] PASSED [ 93%]\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest]   \u274c  Failure - Main Run tests\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/b0ab4cad4dab277571731eaa8a23ba01e3e35c51adbe192395d02192bdf84d53/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/b0ab4cad4dab277571731eaa8a23ba01e3e35c51adbe192395d02192bdf84d53?force=1&v=1\": context deadline exceeded\n[4bd8e7f3-dece-4781-98d0-07656f04ef8a/pytest ubuntu-latest] \ud83c\udfc1  Job succeeded\n",
        "stderr": "Error: context canceled\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Jean-Zombie-cookiecutter-django-wagtail/.github/workflows/ci-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 660.0934278964996
    }
}