{
    "repository": "carsonyl/pypac",
    "stars": 68,
    "language": "python",
    "size": 801,
    "clone_url": "https://github.com/carsonyl/pypac.git",
    "timestamp": "2023-06-28T11:24:06.339126Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_api.TestApiFunctions",
                "name": "test_get_pac_via_url",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestApiFunctions",
                "name": "test_get_pac_via_js",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestApiFunctions",
                "name": "test_get_pac_autodetect",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestApiFunctions",
                "name": "test_collect_pac_urls",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestApiFunctions",
                "name": "test_download_pac_timeout",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestApiFunctions",
                "name": "test_download_pac_not_ok",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestApiFunctions",
                "name": "test_download_pac_content_type[headers0-None-function FindProxyForURL(url, host) { return \"DIRECT\"; }]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestApiFunctions",
                "name": "test_download_pac_content_type[headers1-None-None]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestApiFunctions",
                "name": "test_download_pac_content_type[headers2-allowed_content_types2-function FindProxyForURL(url, host) { return \"DIRECT\"; }]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestApiFunctions",
                "name": "test_registry_filesystem_path",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestRequests",
                "name": "test_proxy_connect_timeout",
                "time": 2.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestRequests",
                "name": "test_proxy_response_timeout",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestRequests",
                "name": "test_environment_proxies[http://a.local/x.html-expected_proxies0-None]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestRequests",
                "name": "test_environment_proxies[http://fooa.local/x.html-expected_proxies1-None]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestRequests",
                "name": "test_environment_proxies[http://foo.b.local/x.html-expected_proxies2-None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestRequests",
                "name": "test_environment_proxies[http://foob.local/x.html-expected_proxies3-http://env]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestRequests",
                "name": "test_environment_proxies[http://c.local/x.html-expected_proxies4-http://env]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestRequests",
                "name": "test_override_env_proxy_and_go_direct",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestPACSession",
                "name": "test_default_behaviour_no_pac_found",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestPACSession",
                "name": "test_no_pac_but_call_get_pac_twice",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestPACSession",
                "name": "test_default_behaviour_pac_found",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestPACSession",
                "name": "test_pac_from_constructor",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestPACSession",
                "name": "test_pac_download_after_session_init",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestPACSession",
                "name": "test_extend_session_with_pacsession",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestPACSession",
                "name": "test_pac_override_using_request_proxies_parameter",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestPACSession",
                "name": "test_pac_disabled",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestPACSession",
                "name": "test_bad_proxy_no_failover",
                "time": 2.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestPACSession",
                "name": "test_pac_failover",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestPACSession",
                "name": "test_pac_failover_to_direct",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestPACSession",
                "name": "test_pac_failover_to_direct_also_fails",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestPACSession",
                "name": "test_pac_no_failover_available_exc_case",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestPACSession",
                "name": "test_failover_using_custom_response_filter",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestPACSession",
                "name": "test_failover_using_custom_exception_criteria",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestPACSession",
                "name": "test_post_init_proxy_auth",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestContextManager",
                "name": "test_no_pac_no_env",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestContextManager",
                "name": "test_no_pac",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestContextManager",
                "name": "test_pac",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api.TestContextManager",
                "name": "test_pac_direct",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_os_settings",
                "name": "test_os_detect_windows",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "not on Windows",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_os_settings",
                "name": "test_os_detect_darwin",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "not on macOS/OSX",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_os_settings",
                "name": "test_autoconfig_url_from_registry",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "not on Windows",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_os_settings",
                "name": "test_autoconfig_url_from_preferences",
                "time": 0.021,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "not on macOS/OSX",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_os_settings",
                "name": "test_mock_autoconfigurl_windows",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "not on Windows",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_os_settings",
                "name": "test_mock_autoconfigurl_mac",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "not on macOS/OSX",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_os_settings",
                "name": "test_reg_errors_reraise",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "not on macOS/OSX",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_os_settings",
                "name": "test_file_url_to_local_path[file://foo.pac-None-None]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Not on Windows or macOS/OSX",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_os_settings",
                "name": "test_file_url_to_local_path[file://\\\\foo.corp.local\\bar.pac-None-None]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Not on Windows or macOS/OSX",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_os_settings",
                "name": "test_file_url_to_local_path[file:////foo.corp.local/bar.pac-None-None]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Not on Windows or macOS/OSX",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_os_settings",
                "name": "test_file_url_to_local_path[file://///foo.corp.local/bar.pac-None-None]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Not on Windows or macOS/OSX",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_os_settings",
                "name": "test_file_url_to_local_path[File:///foo/bar%20zip/baz.pac-C:/foo/bar zip/baz.pac-/foo/bar zip/baz.pac]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Not on Windows or macOS/OSX",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_os_settings",
                "name": "test_file_url_to_local_path[file://c:/foo/bar.pac-c:/foo/bar.pac-/foo/bar.pac]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Not on Windows or macOS/OSX",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestPacFile",
                "name": "test_malformed_pac_files[]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestPacFile",
                "name": "test_malformed_pac_files[ ]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestPacFile",
                "name": "test_malformed_pac_files[<html>]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestPacFile",
                "name": "test_malformed_pac_files[foo bar]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestPacFile",
                "name": "test_malformed_pac_files[var x =]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestPacFile",
                "name": "test_malformed_pac_files[var x = 1;]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestPacFile",
                "name": "test_malformed_pac_files[function() foo(bar) { return 0; }]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestPacFile",
                "name": "test_valid_js_function_signatures[function FindProxyForURL(url, host) { return \"DIRECT\"; }]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestPacFile",
                "name": "test_valid_js_function_signatures[function FindProxyForURL(url, host, bar) { return \"DIRECT\"; }]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestPacFile",
                "name": "test_valid_js_function_signatures[function FindProxyForURL(url) { return \"DIRECT\"; }]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestPacFile",
                "name": "test_builtins_undefined[function FindProxyForURL(url, host) { return __builtins__; }]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestPacFile",
                "name": "test_builtins_undefined[function FindProxyForURL(url, host) { return shExpMatch.__class__.__class__; }]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestPacFile",
                "name": "test_pac_callstack_limit",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFunctionsInPacParser",
                "name": "test_shExpMatch",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFunctionsInPacParser",
                "name": "test_dnsDomainIs",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFunctionsInPacParser",
                "name": "test_isResolvable",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFunctionsInPacParser",
                "name": "test_isInNet",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFunctionsInPacParser",
                "name": "test_localHostOrDomainIs",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFunctionsInPacParser",
                "name": "test_myIpAddress",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFunctionsInPacParser",
                "name": "test_dnsResolve",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFunctionsInPacParser",
                "name": "test_dnsResolve_propagation",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFunctionsInPacParser",
                "name": "test_dnsDomainLevels",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFunctionsInPacParser",
                "name": "test_isPlainHostName",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFunctionsInPacParser",
                "name": "test_temporal_functions[weekdayRange(\"MON\"); weekdayRange(\"MON\",\"FRI\");]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFunctionsInPacParser",
                "name": "test_temporal_functions[timeRange(12); timeRange(12,30,40,12,30,45,\"GMT\");]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFunctionsInPacParser",
                "name": "test_temporal_functions[dateRange(3); dateRange(1,\"MAY\",15,\"JUN\"); dateRange(1,\"JAN\",2016,2,\"JUN\",2016,\"GMT\");]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFindProxyForURLOutputParsing",
                "name": "test_parse_single_value[DIRECT-DIRECT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFindProxyForURLOutputParsing",
                "name": "test_parse_single_value[direct-DIRECT]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFindProxyForURLOutputParsing",
                "name": "test_parse_single_value[proxy foo-http://foo]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFindProxyForURLOutputParsing",
                "name": "test_parse_single_value[PROXY foo:8080-http://foo:8080]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFindProxyForURLOutputParsing",
                "name": "test_parse_single_value[HTTP foo:8080-http://foo:8080]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFindProxyForURLOutputParsing",
                "name": "test_parse_single_value[HTTPS foo:8080-https://foo:8080]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFindProxyForURLOutputParsing",
                "name": "test_parse_single_value[SOCKS foo:8080-socks5://foo:8080]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFindProxyForURLOutputParsing",
                "name": "test_parse_single_value[SOCKS4 foo:8080-socks4://foo:8080]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFindProxyForURLOutputParsing",
                "name": "test_parse_single_value[SOCKS5 foo:8080-socks5://foo:8080]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFindProxyForURLOutputParsing",
                "name": "test_multiple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFindProxyForURLOutputParsing",
                "name": "test_skip_invalid[foo bar]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFindProxyForURLOutputParsing",
                "name": "test_skip_invalid[PROXY foo bar]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFindProxyForURLOutputParsing",
                "name": "test_skip_invalid[]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFindProxyForURLOutputParsing",
                "name": "test_skip_invalid[;]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFindProxyForURLOutputParsing",
                "name": "test_skip_invalid[example.local:8080]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.TestFindProxyForURLOutputParsing",
                "name": "test_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dnsDomainIs[www.netscape.com-.netscape.com-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dnsDomainIs[www.netscape.com-NETSCAPE.com-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dnsDomainIs[www-.netscape.com-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dnsDomainIs[www.mcom.com-.netscape.com-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_isResolvable[www.google.com-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_isResolvable[bogus.domain.foobar-False]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_isInNet[198.95.249.79-198.95.249.79-255.255.255.255-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_isInNet[198.95.6.8-198.95.0.0-255.255.0.0-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_isInNet[192.168.1.100-192.168.2.0-255.255.255.0-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_isInNet[google.com-0.0.0.0-0.0.0.0-True]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_isInNet[google.com-google.com-foo-False]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_isInNet[False-False-False-False]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_localHostOrDomainIs[www.netscape.com-www.netscape.com-True]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_localHostOrDomainIs[www-www.netscape.com-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_localHostOrDomainIs[www.mcom.com-www.netscape.com-False]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_localHostOrDomainIs[home.netscape.com-www.netscape.com-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_myIpAddress",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dnsResolve",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dnsDomainLevels[www-0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dnsDomainLevels[www.netscape.com-2]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_isPlainHostName[www-True]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_isPlainHostName[www.netscape.com-False]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_shExpMatch[http://home.netscape.com/people/ari/index.html-*/ari/*-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_shExpMatch[http://home.netscape.com/people/montulli/index.html-*/ari/*-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_weekdayRange[args0-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_weekdayRange[args1-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_weekdayRange[args2-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_weekdayRange[args3-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_weekdayRange[args4-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dateRange[args0-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dateRange[args1-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dateRange[args2-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dateRange[args3-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dateRange[args4-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dateRange[args5-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dateRange[args6-True]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dateRange[args7-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dateRange[args8-True]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dateRange[args9-True]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dateRange[args10-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dateRange[args11-False]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dateRange[args12-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dateRange[args13-True]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dateRange[args14-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_dateRange[args15-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_timeRange[args0-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_timeRange[args1-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_timeRange[args2-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_timeRange[args3-False]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_timeRange[args4-True]",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_timeRange[args5-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_timeRange[args6-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_functions",
                "name": "test_alert",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resolver",
                "name": "test_single_pac_value[DIRECT]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resolver",
                "name": "test_single_pac_value[PROXY foo:8080]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resolver",
                "name": "test_proxy_failover",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resolver",
                "name": "test_proxy_failover_no_fallback",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resolver",
                "name": "test_add_proxy_auth[DIRECT-auth_obj0-DIRECT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resolver",
                "name": "test_add_proxy_auth[http://foo:8080-auth_obj1-http://user:pwd@foo:8080]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resolver",
                "name": "test_add_proxy_auth[socks5://foo:8080-auth_obj2-socks5://user:pwd@foo:8080]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resolver",
                "name": "test_add_proxy_auth[http://foo:8080-auth_obj3-http://u%24er:p%40ss%3A@foo:8080]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resolver",
                "name": "test_resolver_add_proxy_auth",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resolver",
                "name": "test_get_proxy_for_requests",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resolver",
                "name": "test_url_host_port_excluded",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wpad",
                "name": "test_bad_host[ ]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wpad",
                "name": "test_bad_host[.]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wpad",
                "name": "test_bad_host[.foo]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wpad",
                "name": "test_bad_host[bar.]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wpad",
                "name": "test_this_host",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wpad",
                "name": "test_host_fqdn[carson-pc-expected_wpad0-no FQDN]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": "no FQDN\n",
                "stderr": null
            },
            {
                "classname": "tests.test_wpad",
                "name": "test_host_fqdn[carson-pc.local-expected_wpad1-dot local]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": "dot local\n",
                "stderr": null
            },
            {
                "classname": "tests.test_wpad",
                "name": "test_host_fqdn[pc.corp.local-expected_wpad2-unrecognized TLD]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": "unrecognized TLD\n",
                "stderr": null
            },
            {
                "classname": "tests.test_wpad",
                "name": "test_host_fqdn[pc.corp.example.com-expected_wpad3-dot com]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": "dot com\n",
                "stderr": null
            },
            {
                "classname": "tests.test_wpad",
                "name": "test_host_fqdn[pc.example.org.uk-expected_wpad4-org uk]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": "org uk\n",
                "stderr": null
            }
        ],
        "stdout": "[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build] \ud83d\ude80  Start image=crawlergpt:latest\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/carsonyl-pypac] user=0 workdir=\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:2.7]\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build] \u2b50 Run Main actions/checkout@v3\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \u2705  Success - Main actions/checkout@v3\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build] \u2b50 Run Main Set up Python 2.7 on ubuntu-latest\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/2e71d94e-30fc-4298-804f-6208393b944a/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \u2753  ::group::Installed versions\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udea7  ::warning::The support for python 2.7 will be removed on June 19. Related issue: https://github.com/actions/setup-python/issues/672\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udcac  ::debug::Semantic version spec of 2.7 is 2.7\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udcac  ::debug::isExplicit: \n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udcac  ::debug::explicit? false\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udcac  ::debug::explicit? true\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udcac  ::debug::explicit? true\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udcac  ::debug::explicit? true\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udcac  ::debug::explicit? true\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udcac  ::debug::explicit? true\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udcac  ::debug::explicit? true\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udcac  ::debug::matched: 2.7.18\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/2.7.18/x64\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udcac  ::debug::Found tool in cache Python 2.7.18 x64\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Successfully set up CPython (2.7.18)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \u2753  ::endgroup::\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \u2705  Success - Main Set up Python 2.7 on ubuntu-latest\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/2.7.18/x64/lib\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/2.7.18/x64\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/2.7.18/x64/lib/pkgconfig\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/2.7.18/x64\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/2.7.18/x64\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/2.7.18/x64\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \u2699  ::set-output:: python-version=2.7.18\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/2.7.18/x64/bin/python\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64/bin\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build] \u2b50 Run Main Install dependencies\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support pip 21.0 will remove support for this functionality.\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Requirement already up-to-date: pip in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (20.3.4)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting setuptools\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading setuptools-44.1.1-py2.py3-none-any.whl (583 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Installing collected packages: setuptools\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Attempting uninstall: setuptools\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |     Found existing installation: setuptools 41.2.0\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |     Uninstalling setuptools-41.2.0:\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |       Successfully uninstalled setuptools-41.2.0\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Successfully installed setuptools-44.1.1\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support pip 21.0 will remove support for this functionality.\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Obtaining file:///tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/carsonyl-pypac\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Installing build dependencies: started\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Installing build dependencies: finished with status 'done'\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Getting requirements to build wheel: started\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Getting requirements to build wheel: finished with status 'done'\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |     Preparing wheel metadata: started\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |     Preparing wheel metadata: finished with status 'done'\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting tldextract>=2.2.3\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading tldextract-2.2.3-py2.py3-none-any.whl (48 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting dukpy>=0.2.2\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading dukpy-0.3.0.tar.gz (2.0 MB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting requests>=2.0.0\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading requests-2.27.1-py2.py3-none-any.whl (63 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting wheel; extra == \"dev\"\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Using cached wheel-0.37.1-py2.py3-none-any.whl (35 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting pytest; extra == \"dev\"\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading pytest-4.6.11-py2.py3-none-any.whl (231 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting pytest-cov; extra == \"dev\"\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading pytest_cov-2.12.1-py2.py3-none-any.whl (20 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting mock; extra == \"dev\"\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading mock-3.0.5-py2.py3-none-any.whl (25 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting idna\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading idna-2.10-py2.py3-none-any.whl (58 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting requests-file>=1.4\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading requests_file-1.5.1-py2.py3-none-any.whl (3.7 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting certifi>=2017.4.17\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading certifi-2021.10.8-py2.py3-none-any.whl (149 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting urllib3<1.27,>=1.21.1\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting chardet<5,>=3.0.2; python_version < \"3\"\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading chardet-4.0.0-py2.py3-none-any.whl (178 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting importlib-metadata>=0.12; python_version < \"3.8\"\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading importlib_metadata-2.1.3-py2.py3-none-any.whl (10 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting pathlib2>=2.2.0; python_version < \"3.6\"\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading pathlib2-2.3.7.post1-py2.py3-none-any.whl (18 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting pluggy<1.0,>=0.12\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading pluggy-0.13.1-py2.py3-none-any.whl (18 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting packaging\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading packaging-20.9-py2.py3-none-any.whl (40 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting wcwidth\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading wcwidth-0.2.6-py2.py3-none-any.whl (29 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting six>=1.10.0\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting funcsigs>=1.0; python_version < \"3.0\"\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading funcsigs-1.0.2-py2.py3-none-any.whl (17 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting atomicwrites>=1.0\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading atomicwrites-1.4.1.tar.gz (14 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting attrs>=17.4.0\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading attrs-21.4.0-py2.py3-none-any.whl (60 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting py>=1.5.0\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting more-itertools<6.0.0,>=4.0.0; python_version <= \"2.7\"\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading more_itertools-5.0.0-py2-none-any.whl (52 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting coverage>=5.2.1\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading coverage-5.5-cp27-cp27mu-manylinux2010_x86_64.whl (236 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting toml\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading toml-0.10.2-py2.py3-none-any.whl (16 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting contextlib2; python_version < \"3\"\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading contextlib2-0.6.0.post1-py2.py3-none-any.whl (9.8 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting zipp>=0.5\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading zipp-1.2.0-py2.py3-none-any.whl (4.8 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting configparser>=3.5; python_version < \"3\"\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading configparser-4.0.2-py2.py3-none-any.whl (22 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting typing; python_version < \"3.5\"\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading typing-3.10.0.0-py2-none-any.whl (26 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting scandir; python_version < \"3.5\"\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading scandir-1.10.0.tar.gz (33 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting pyparsing>=2.0.2\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading pyparsing-2.4.7-py2.py3-none-any.whl (67 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Collecting backports.functools-lru-cache>=1.2.1; python_version < \"3.2\"\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Downloading backports.functools_lru_cache-1.6.5-py2.py3-none-any.whl (6.0 kB)\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Using legacy 'setup.py install' for dukpy, since package 'wheel' is not installed.\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Using legacy 'setup.py install' for atomicwrites, since package 'wheel' is not installed.\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Using legacy 'setup.py install' for scandir, since package 'wheel' is not installed.\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Installing collected packages: certifi, urllib3, chardet, idna, requests, six, requests-file, tldextract, dukpy, wheel, contextlib2, zipp, configparser, typing, scandir, pathlib2, importlib-metadata, pluggy, pyparsing, packaging, backports.functools-lru-cache, wcwidth, funcsigs, atomicwrites, attrs, py, more-itertools, pytest, coverage, toml, pytest-cov, mock, PyPAC\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |     Running setup.py install for dukpy: started\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |     Running setup.py install for dukpy: finished with status 'done'\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |     Running setup.py install for scandir: started\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |     Running setup.py install for scandir: finished with status 'done'\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |     Running setup.py install for atomicwrites: started\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |     Running setup.py install for atomicwrites: finished with status 'done'\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   |   Running setup.py develop for PyPAC\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Successfully installed PyPAC atomicwrites-1.4.1 attrs-21.4.0 backports.functools-lru-cache-1.6.5 certifi-2021.10.8 chardet-4.0.0 configparser-4.0.2 contextlib2-0.6.0.post1 coverage-5.5 dukpy-0.3.0 funcsigs-1.0.2 idna-2.10 importlib-metadata-2.1.3 mock-3.0.5 more-itertools-5.0.0 packaging-20.9 pathlib2-2.3.7.post1 pluggy-0.13.1 py-1.11.0 pyparsing-2.4.7 pytest-4.6.11 pytest-cov-2.12.1 requests-2.27.1 requests-file-1.5.1 scandir-1.10.0 six-1.16.0 tldextract-2.2.3 toml-0.10.2 typing-3.10.0.0 urllib3-1.26.16 wcwidth-0.2.6 wheel-0.37.1 zipp-1.2.0\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \u2705  Success - Main Install dependencies\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build] \u2b50 Run Main Test with pytest and coverage\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | ============================= test session starts ==============================\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | platform linux2 -- Python 2.7.18, pytest-4.6.11, py-1.11.0, pluggy-0.13.1\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/carsonyl-pypac\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | plugins: cov-2.12.1\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | collected 167 items\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | \n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | tests/test_api.py ......................................                 [ 22%]\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | tests/test_os_settings.py xxxxsssssssss                                  [ 30%]\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | tests/test_parser.py ..........................................          [ 55%]\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | tests/test_parser_functions.py ......................................... [ 80%]\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | ............                                                             [ 87%]\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | tests/test_resolver.py ...........                                       [ 94%]\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | tests/test_wpad.py ..........                                            [100%]\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | \n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/carsonyl-pypac/report.xml -\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | \n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | ---------- coverage: platform linux2, python 2.7.18-final-0 ----------\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | Name                        Stmts   Miss  Cover\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | -----------------------------------------------\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | pypac/__init__.py               3      0   100%\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | pypac/api.py                  161     15    91%\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | pypac/os_settings.py           49     27    45%\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | pypac/parser.py                64      8    88%\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | pypac/parser_functions.py     124      6    95%\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | pypac/resolver.py              60      2    97%\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | pypac/wpad.py                  22      0   100%\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | -----------------------------------------------\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | TOTAL                         483     58    88%\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | \n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   | =============== 154 passed, 9 skipped, 4 xfailed in 7.05 seconds ===============\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \u2705  Success - Main Test with pytest and coverage\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build] \u2b50 Run Post Set up Python 2.7 on ubuntu-latest\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build]   \u2705  Success - Post Set up Python 2.7 on ubuntu-latest\n[6fcdd24f-ff3d-4feb-8782-6f4624c45ce7/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/carsonyl-pypac/.github/workflows/tests-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 146.76010584831238
    }
}