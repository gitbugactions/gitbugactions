{
    "repository": "tensorly/tensorly",
    "stars": 1410,
    "language": "python",
    "size": 16233,
    "clone_url": "https://github.com/tensorly/tensorly.git",
    "timestamp": "2023-07-01T11:08:02.450904Z",
    "clone_success": true,
    "number_of_actions": 4,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "unknown",
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tensorly.contrib.decomposition.tests.test_mps_decomposition_cross",
                "name": "test_tensor_train_cross_1",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.contrib.decomposition.tests.test_mps_decomposition_cross",
                "name": "test_tensor_train_cross_2",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.contrib.decomposition.tests.test_mps_decomposition_cross",
                "name": "test_tensor_train_cross_3",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.contrib.decomposition.tests.test_mps_decomposition_cross",
                "name": "test_tensor_train_cross_4",
                "time": 0.159,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.contrib.decomposition.tests.test_tt_TTOI",
                "name": "test_TTOI",
                "time": 0.12,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.contrib.sparse.tests.test_decomposition",
                "name": "test_sparse_parafac",
                "time": 23.105,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.contrib.sparse.tests.test_tenalg",
                "name": "test_sparse_unfolding_times_cp",
                "time": 12.262,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.datasets.tests.test_imports",
                "name": "test_IL2data",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.datasets.tests.test_imports",
                "name": "test_COVID19_data",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.datasets.tests.test_imports",
                "name": "test_indian_pines",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.datasets.tests.test_imports",
                "name": "test_kinetic",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.datasets.tests.test_synthetic",
                "name": "test_gen_image",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cmtf_als",
                "name": "test_coupled_matrix_tensor_3d_factorization",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_constrained_parafac",
                "name": "test_constrained_parafac_nonnegative",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_constrained_parafac",
                "name": "test_constrained_parafac_l1",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_constrained_parafac",
                "name": "test_constrained_parafac_l2",
                "time": 0.788,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_constrained_parafac",
                "name": "test_constrained_parafac_squared_l2",
                "time": 1.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_constrained_parafac",
                "name": "test_constrained_parafac_monotonicity",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_constrained_parafac",
                "name": "test_constrained_parafac_simplex",
                "time": 0.585,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_constrained_parafac",
                "name": "test_constrained_parafac_normalize",
                "time": 0.597,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_constrained_parafac",
                "name": "test_constrained_parafac_soft_sparsity",
                "time": 0.182,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_constrained_parafac",
                "name": "test_constrained_parafac_unimodality",
                "time": 0.095,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_constrained_parafac",
                "name": "test_constrained_parafac_normalized_sparsity",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_constrained_parafac",
                "name": "test_constrained_parafac_hard_sparsity",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_constrained_parafac",
                "name": "test_constrained_parafac_smoothness",
                "time": 0.847,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-False-svd-1-1-True-True]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-False-svd-1-1-True-False]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-False-svd-1-1-False-True]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-False-svd-1-1-False-False]",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-False-svd-3-4-True-True]",
                "time": 0.097,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-False-svd-3-4-True-False]",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-False-svd-3-4-False-True]",
                "time": 0.51,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-False-svd-3-4-False-False]",
                "time": 0.504,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-False-random-1-1-True-True]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-False-random-1-1-True-False]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-False-random-1-1-False-True]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-False-random-1-1-False-False]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-False-random-3-4-True-True]",
                "time": 0.119,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-False-random-3-4-True-False]",
                "time": 0.093,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-False-random-3-4-False-True]",
                "time": 0.456,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-False-random-3-4-False-False]",
                "time": 0.375,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-True-svd-1-1-True-True]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-True-svd-1-1-True-False]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-True-svd-1-1-False-True]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-True-svd-1-1-False-False]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-True-svd-3-4-True-True]",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-True-svd-3-4-True-False]",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-True-svd-3-4-False-True]",
                "time": 0.236,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-True-svd-3-4-False-False]",
                "time": 0.536,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-True-random-1-1-True-True]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-True-random-1-1-True-False]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-True-random-1-1-False-True]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-True-random-1-1-False-False]",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-True-random-3-4-True-True]",
                "time": 0.196,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-True-random-3-4-True-False]",
                "time": 0.139,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-True-random-3-4-False-True]",
                "time": 0.721,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1-True-random-3-4-False-False]",
                "time": 0.716,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-False-svd-1-1-True-True]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-False-svd-1-1-True-False]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-False-svd-1-1-False-True]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-False-svd-1-1-False-False]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-False-svd-3-4-True-True]",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-False-svd-3-4-True-False]",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-False-svd-3-4-False-True]",
                "time": 0.504,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-False-svd-3-4-False-False]",
                "time": 0.475,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-False-random-1-1-True-True]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-False-random-1-1-True-False]",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-False-random-1-1-False-True]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-False-random-1-1-False-False]",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-False-random-3-4-True-True]",
                "time": 0.128,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-False-random-3-4-True-False]",
                "time": 0.111,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-False-random-3-4-False-True]",
                "time": 0.405,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-False-random-3-4-False-False]",
                "time": 0.427,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-True-svd-1-1-True-True]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-True-svd-1-1-True-False]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-True-svd-1-1-False-True]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-True-svd-1-1-False-False]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-True-svd-3-4-True-True]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-True-svd-3-4-True-False]",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-True-svd-3-4-False-True]",
                "time": 0.257,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-True-svd-3-4-False-False]",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-True-random-1-1-True-True]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-True-random-1-1-True-False]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-True-random-1-1-False-True]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-True-random-1-1-False-False]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-True-random-3-4-True-True]",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-True-random-3-4-True-False]",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-True-random-3-4-False-True]",
                "time": 0.422,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[True-1234-True-random-3-4-False-False]",
                "time": 0.5,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-False-svd-1-1-True-True]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-False-svd-1-1-True-False]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-False-svd-1-1-False-True]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-False-svd-1-1-False-False]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-False-svd-3-4-True-True]",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-False-svd-3-4-True-False]",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-False-svd-3-4-False-True]",
                "time": 0.436,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-False-svd-3-4-False-False]",
                "time": 0.248,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-False-random-1-1-True-True]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-False-random-1-1-True-False]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-False-random-1-1-False-True]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-False-random-1-1-False-False]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-False-random-3-4-True-True]",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-False-random-3-4-True-False]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-False-random-3-4-False-True]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-False-random-3-4-False-False]",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-True-svd-1-1-True-True]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-True-svd-1-1-True-False]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-True-svd-1-1-False-True]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-True-svd-1-1-False-False]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-True-svd-3-4-True-True]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-True-svd-3-4-True-False]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-True-svd-3-4-False-True]",
                "time": 0.257,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-True-svd-3-4-False-False]",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-True-random-1-1-True-True]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-True-random-1-1-True-False]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-True-random-1-1-False-True]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-True-random-1-1-False-False]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-True-random-3-4-True-True]",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-True-random-3-4-True-False]",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-True-random-3-4-False-True]",
                "time": 0.34,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1-True-random-3-4-False-False]",
                "time": 0.351,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-False-svd-1-1-True-True]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-False-svd-1-1-True-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-False-svd-1-1-False-True]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-False-svd-1-1-False-False]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-False-svd-3-4-True-True]",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-False-svd-3-4-True-False]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-False-svd-3-4-False-True]",
                "time": 0.219,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-False-svd-3-4-False-False]",
                "time": 0.204,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-False-random-1-1-True-True]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-False-random-1-1-True-False]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-False-random-1-1-False-True]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-False-random-1-1-False-False]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-False-random-3-4-True-True]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-False-random-3-4-True-False]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-False-random-3-4-False-True]",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-False-random-3-4-False-False]",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-True-svd-1-1-True-True]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-True-svd-1-1-True-False]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-True-svd-1-1-False-True]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-True-svd-1-1-False-False]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-True-svd-3-4-True-True]",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-True-svd-3-4-True-False]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-True-svd-3-4-False-True]",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-True-svd-3-4-False-False]",
                "time": 0.209,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-True-random-1-1-True-True]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-True-random-1-1-True-False]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-True-random-1-1-False-True]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-True-random-1-1-False-False]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-True-random-3-4-True-True]",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-True-random-3-4-True-False]",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-True-random-3-4-False-True]",
                "time": 0.407,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac[False-1234-True-random-3-4-False-False]",
                "time": 0.622,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_masked_parafac[True]",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_masked_parafac[False]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_parafac_linesearch",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[True-1-False-svd-1-1]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[True-1-False-svd-3-3]",
                "time": 0.528,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[True-1-False-random-1-1]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[True-1-False-random-3-3]",
                "time": 0.511,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[True-1-True-svd-1-1]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[True-1-True-svd-3-3]",
                "time": 0.61,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[True-1-True-random-1-1]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[True-1-True-random-3-3]",
                "time": 0.557,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[True-2-False-svd-1-1]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[True-2-False-svd-3-3]",
                "time": 0.36,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[True-2-False-random-1-1]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[True-2-False-random-3-3]",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[True-2-True-svd-1-1]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[True-2-True-svd-3-3]",
                "time": 0.521,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[True-2-True-random-1-1]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[True-2-True-random-3-3]",
                "time": 0.637,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[False-1-False-svd-1-1]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[False-1-False-svd-3-3]",
                "time": 0.211,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[False-1-False-random-1-1]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[False-1-False-random-3-3]",
                "time": 0.21,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[False-1-True-svd-1-1]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[False-1-True-svd-3-3]",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[False-1-True-random-1-1]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[False-1-True-random-3-3]",
                "time": 0.223,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[False-2-False-svd-1-1]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[False-2-False-svd-3-3]",
                "time": 0.145,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[False-2-False-random-1-1]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[False-2-False-random-3-3]",
                "time": 0.128,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[False-2-True-svd-1-1]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[False-2-True-svd-3-3]",
                "time": 0.167,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[False-2-True-random-1-1]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac[False-2-True-random-3-3]",
                "time": 0.159,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_initialize_nn_cp",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_non_negative_parafac_hals_one_unconstrained",
                "time": 0.235,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_sample_khatri_rao",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp",
                "name": "test_randomised_parafac",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_cp_power",
                "name": "test_parafac_power_iteration",
                "time": 0.329,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_parafac2",
                "name": "test_parafac2[True-random]",
                "time": 1.533,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_parafac2",
                "name": "test_parafac2[True-svd]",
                "time": 1.709,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_parafac2",
                "name": "test_parafac2[False-random]",
                "time": 1.467,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_parafac2",
                "name": "test_parafac2[False-svd]",
                "time": 1.257,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_parafac2",
                "name": "test_parafac2_nn",
                "time": 0.242,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_parafac2",
                "name": "test_parafac2_slice_and_tensor_input",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_parafac2",
                "name": "test_parafac2_normalize_factors",
                "time": 3.445,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_parafac2",
                "name": "test_parafac2_init_valid",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_parafac2",
                "name": "test_parafac2_init_error",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_parafac2",
                "name": "test_parafac2_to_tensor",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_robust_decomposition",
                "name": "test_RPCA",
                "time": 0.258,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_symmetric_cp",
                "name": "test_symmetric_parafac_power_iteration",
                "time": 0.409,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_tr_decomposition",
                "name": "test_tensor_ring",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_tr_decomposition",
                "name": "test_tensor_ring_mode",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_tr_decomposition",
                "name": "test_tensor_ring_als[1-lstsq-1e-07-tensor_shape0-rank0]",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_tr_decomposition",
                "name": "test_tensor_ring_als[1-lstsq-1e-07-tensor_shape1-rank1]",
                "time": 0.655,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_tr_decomposition",
                "name": "test_tensor_ring_als[1-normal_eq-0.001-tensor_shape0-rank0]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_tr_decomposition",
                "name": "test_tensor_ring_als[1-normal_eq-0.001-tensor_shape1-rank1]",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_tr_decomposition",
                "name": "test_tensor_ring_als[1234-lstsq-1e-07-tensor_shape0-rank0]",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_tr_decomposition",
                "name": "test_tensor_ring_als[1234-lstsq-1e-07-tensor_shape1-rank1]",
                "time": 0.515,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_tr_decomposition",
                "name": "test_tensor_ring_als[1234-normal_eq-0.001-tensor_shape0-rank0]",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_tr_decomposition",
                "name": "test_tensor_ring_als[1234-normal_eq-0.001-tensor_shape1-rank1]",
                "time": 0.233,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_tt_decomposition",
                "name": "test_tensor_train",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_tt_decomposition",
                "name": "test_tensor_train_matrix",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_tucker",
                "name": "test_partial_tucker",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_tucker",
                "name": "test_tucker",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_tucker",
                "name": "test_masked_tucker",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_tucker",
                "name": "test_non_negative_tucker[False-svd]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_tucker",
                "name": "test_non_negative_tucker[False-random]",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_tucker",
                "name": "test_non_negative_tucker[True-svd]",
                "time": 3.185,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.decomposition.tests.test_tucker",
                "name": "test_non_negative_tucker[True-random]",
                "time": 3.887,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_entropy",
                "name": "test_vonneumann_entropy_pure_state",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_entropy",
                "name": "test_tt_vonneumann_entropy_pure_state",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_entropy",
                "name": "test_cp_vonneumann_entropy_pure_state",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_entropy",
                "name": "test_vonneumann_entropy_mixed_state",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_entropy",
                "name": "test_tt_vonneumann_entropy_mixed_state",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_entropy",
                "name": "test_cp_vonneumann_entropy_mixed_state",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[1-1-True]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[1-1-False]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[1-3-True]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[1-3-False]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[1-5-True]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[1-5-False]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[3-1-True]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[3-1-False]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[3-3-True]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[3-3-False]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[3-5-True]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[3-5-False]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[5-1-True]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[5-1-False]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[5-3-True]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[5-3-False]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[5-5-True]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[5-5-False]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[10-1-True]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[10-1-False]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[10-3-True]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[10-3-False]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[10-5-True]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[10-5-False]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[100-1-True]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[100-1-False]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[100-3-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[100-3-False]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[100-5-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_factors",
                "name": "test_congruence_coefficient[100-5-False]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_regression",
                "name": "test_MSE",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_regression",
                "name": "test_RMSE",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_regression",
                "name": "test_R2_score",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_regression",
                "name": "test_correlation",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.metrics.tests.test_similarity",
                "name": "test_correlation_index",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.random.tests.test_base",
                "name": "test_check_random_state",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.random.tests.test_base",
                "name": "test_random_cp",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.random.tests.test_base",
                "name": "test_random_tucker",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.random.tests.test_base",
                "name": "test_random_tt",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.random.tests.test_base",
                "name": "test_random_tr",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_transform",
                "time": 0.14,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_factor_normality",
                "time": 0.231,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_factor_orthogonality",
                "time": 0.34,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_consistent_components",
                "time": 0.262,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_dimension_compatibility[1-2]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_dimension_compatibility[1-3]",
                "time": 0.092,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_dimension_compatibility[1-4]",
                "time": 0.208,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_dimension_compatibility[1-5]",
                "time": 0.556,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_dimension_compatibility[2-2]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_dimension_compatibility[2-3]",
                "time": 0.105,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_dimension_compatibility[2-4]",
                "time": 0.229,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_dimension_compatibility[2-5]",
                "time": 0.391,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_dimension_compatibility[4-2]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_dimension_compatibility[4-3]",
                "time": 0.1,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_dimension_compatibility[4-4]",
                "time": 0.195,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_dimension_compatibility[4-5]",
                "time": 0.439,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_zero_covariance_x",
                "time": 0.613,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_decomposition_accuracy[1-3]",
                "time": 0.1,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_decomposition_accuracy[1-4]",
                "time": 0.152,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_decomposition_accuracy[1-5]",
                "time": 0.346,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_decomposition_accuracy[2-3]",
                "time": 0.13,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_decomposition_accuracy[2-4]",
                "time": 0.24,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_decomposition_accuracy[2-5]",
                "time": 0.428,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_decomposition_accuracy[4-3]",
                "time": 0.107,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_decomposition_accuracy[4-4]",
                "time": 0.154,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_decomposition_accuracy[4-5]",
                "time": 0.365,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_reconstruction_x",
                "time": 0.206,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_optimized_rand_covariance",
                "time": 0.657,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_optimized_covariance[n_latent0]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_optimized_covariance[n_latent1]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_optimized_covariance[n_latent2]",
                "time": 0.111,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_optimized_covariance[n_latent3]",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_increasing_variance_random",
                "time": 28.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_plsr",
                "name": "test_increasing_variance_synthetic",
                "time": 2.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_cp_regression",
                "name": "test_CPRegressor",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.regression.tests.test_tucker_regression",
                "name": "test_TuckerRegressor",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_batched_tensordot",
                "name": "test_batched_tensordot",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_generalised_inner_product",
                "name": "test_inner",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_khatri_rao",
                "name": "test_khatri_rao",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_kronecker",
                "name": "test_kronecker",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_n_mode_product",
                "name": "test_mode_dot",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_n_mode_product",
                "name": "test_multi_mode_dot",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_outer_product",
                "name": "test_outer_product",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_outer_product",
                "name": "test_batched_outer_product",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_proximal",
                "name": "test_smoothness",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_proximal",
                "name": "test_hard_thresholding",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_proximal",
                "name": "test_soft_sparsity",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_proximal",
                "name": "test_simplex",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_proximal",
                "name": "test_normalized_sparsity",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_proximal",
                "name": "test_monotonicity",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_proximal",
                "name": "test_unimodality",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_proximal",
                "name": "test_l2_prox",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_proximal",
                "name": "test_squared_l2_prox",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_proximal",
                "name": "test_soft_thresholding",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_proximal",
                "name": "test_svd_thresholding",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_proximal",
                "name": "test_procrustes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_proximal",
                "name": "test_hals_nnls",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_proximal",
                "name": "test_fista",
                "time": 0.259,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_proximal",
                "name": "test_admm",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_proximal",
                "name": "test_active_set_nnls",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_tenalg_utils",
                "name": "test_validate_contraction_modes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tenalg.tests.test_unfolding_dot_khatri_rao",
                "name": "test_unfolding_dot_khatri_rao",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_backend",
                "name": "test_set_backend",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "could not import 'torch': No module named 'torch'",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_backend",
                "name": "test_set_backend_local_threadsafe",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "could not import 'torch': No module named 'torch'",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_backend",
                "name": "test_backend_and_tensorly_module_attributes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_backend",
                "name": "test_tensor_creation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_backend",
                "name": "test_svd_time",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_backend",
                "name": "test_svd",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_backend",
                "name": "test_randomized_range_finder",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_backend",
                "name": "test_shape",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_backend",
                "name": "test_ndim",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_backend",
                "name": "test_norm",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_backend",
                "name": "test_clip",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_backend",
                "name": "test_clips_all_negative_tensor_correctly",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_backend",
                "name": "test_where",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_backend",
                "name": "test_matmul",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_backend",
                "name": "test_lstsq",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_backend",
                "name": "test_qr",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_backend",
                "name": "test_prod",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_backend",
                "name": "test_index_update",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_backend",
                "name": "test_sum",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_backend",
                "name": "test_sum_keepdims",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_backend",
                "name": "test_logsumexp",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_core",
                "name": "test_unfold",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_core",
                "name": "test_fold",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_core",
                "name": "test_tensor_to_vec",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_core",
                "name": "test_vec_to_tensor",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_core",
                "name": "test_partial_unfold",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_core",
                "name": "test_partial_fold",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_core",
                "name": "test_partial_tensor_to_vec",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_core",
                "name": "test_partial_vec_to_tensor",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_core",
                "name": "test_matricize",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_cp_tensor",
                "name": "test_cp_normalize",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_cp_tensor",
                "name": "test_cp_flip_sign",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_cp_tensor",
                "name": "test_validate_cp_tensor",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_cp_tensor",
                "name": "test_cp_to_tensor",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_cp_tensor",
                "name": "test_cp_to_tensor_with_weights",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_cp_tensor",
                "name": "test_cp_to_unfolded",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_cp_tensor",
                "name": "test_cp_to_vec",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_cp_tensor",
                "name": "test_cp_mode_dot",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_cp_tensor",
                "name": "test_cp_norm",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_cp_tensor",
                "name": "testvalidate_cp_rank",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_cp_tensor",
                "name": "test_cp_lstsq_grad",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_cp_tensor",
                "name": "test_cp_copy",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_cp_tensor",
                "name": "test_cp_permute_factors",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_parafac2_tensor",
                "name": "test_validate_parafac2_tensor",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_parafac2_tensor",
                "name": "test_parafac2_normalise",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_parafac2_tensor",
                "name": "test_parafac2_to_tensor",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_parafac2_tensor",
                "name": "test_parafac2_to_slices",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_parafac2_tensor",
                "name": "test_parafac2_to_unfolded",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_parafac2_tensor",
                "name": "test_parafac2_to_vec",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_parafac2_tensor",
                "name": "test_apply_parafac2_projections",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_testing",
                "name": "test_assert_allclose",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_testing",
                "name": "test_assert_equal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_testing",
                "name": "test_assert_array_almost_equal",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_testing",
                "name": "test_assert_array_equal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_tr_tensor",
                "name": "test_validate_tr_tensor",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_tr_tensor",
                "name": "test_tr_to_tensor",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_tr_tensor",
                "name": "test_validate_tr_rank",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_tt_matrix",
                "name": "test_tt_matrix_manipulation",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_tt_tensor",
                "name": "test_validate_tt_tensor",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_tt_tensor",
                "name": "test_tt_to_tensor",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_tt_tensor",
                "name": "test_tt_to_tensor_random",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_tt_tensor",
                "name": "test_tt_n_param",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_tt_tensor",
                "name": "test_validate_tt_rank",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_tt_tensor",
                "name": "test_pad_tt_rank[1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_tt_tensor",
                "name": "test_pad_tt_rank[2]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_tucker_tensor",
                "name": "test_validate_tucker_tensor",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_tucker_tensor",
                "name": "test_tucker_to_tensor",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_tucker_tensor",
                "name": "test_tucker_to_unfolded",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_tucker_tensor",
                "name": "test_tucker_to_vec",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_tucker_tensor",
                "name": "test_tucker_mode_dot",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_tucker_tensor",
                "name": "test_n_param_tucker",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_tucker_tensor",
                "name": "test_validate_tucker_rank",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_tucker_tensor",
                "name": "test_tucker_normalize",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.tests.test_tucker_tensor",
                "name": "test_tucker_copy",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.utils.tests.test_backend_specific",
                "name": "test_register_backend_specific_fails_with_added_arguments",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.utils.tests.test_backend_specific",
                "name": "test_register_backend_specific_fails_with_missing_arguments",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.utils.tests.test_backend_specific",
                "name": "test_register_backend_specific_fails_with_different_default_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.utils.tests.test_backend_specific",
                "name": "test_register_backend_specific_fails_with_missing_default_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.utils.tests.test_backend_specific",
                "name": "test_register_backend_specific_fails_with_added_default_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.utils.tests.test_backend_specific",
                "name": "test_register_backend_specific_uses_correct_function",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.utils.tests.test_backend_specific",
                "name": "test_register_backend_specific_fails_with_unavailable_backend",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.utils.tests.test_deprecation",
                "name": "test_deprecated",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tensorly.utils.tests.test_prod",
                "name": "test_prod",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2] \ud83d\ude80  Start image=crawlergpt:latest\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1] \ud83d\ude80  Start image=crawlergpt:latest\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/tensorly-tensorly] user=0 workdir=\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/tensorly-tensorly] user=0 workdir=\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2] \ud83e\uddea  Matrix: map[BACKEND:numpy python-version:3.7]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2] \u2b50 Run Main actions/checkout@v3\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \u2705  Success - Main actions/checkout@v3\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2] \u2b50 Run Main Set up Python\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1] \ud83e\uddea  Matrix: map[BACKEND:numpy python-version:3.10]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1] \u2b50 Run Main actions/checkout@v3\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udc33  docker cp src=/tmp/act-cache/d4df9f9b-a5cd-4e14-b8fe-de050b87b9d4/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \u2705  Success - Main actions/checkout@v3\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1] \u2b50 Run Main Set up Python\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udc33  docker cp src=/tmp/act-cache/d4df9f9b-a5cd-4e14-b8fe-de050b87b9d4/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \u2753  ::group::Installed versions\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::Semantic version spec of 3.10 is 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::isExplicit: \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::explicit? false\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::explicit? true\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::explicit? true\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::explicit? true\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::explicit? true\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::explicit? true\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::explicit? true\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::evaluating 6 versions\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::match not found\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Version 3.10 was not found in the local cache\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::Getting manifest from actions/python-versions@main\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::set auth\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \u2753  ::group::Installed versions\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udcac  ::debug::isExplicit: \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udcac  ::debug::explicit? false\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udcac  ::debug::explicit? true\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udcac  ::debug::explicit? true\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udcac  ::debug::explicit? true\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udcac  ::debug::explicit? true\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udcac  ::debug::explicit? true\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udcac  ::debug::explicit? true\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udcac  ::debug::evaluating 6 versions\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udcac  ::debug::matched: 3.7.11\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Successfully set up CPython (3.7.11)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \u2753  ::endgroup::\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \u2705  Success - Main Set up Python\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \u2699  ::set-output:: python-version=3.7.11\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.12.0-beta.3 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.12.0-beta.2 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.12.0-beta.1 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.12.0-alpha.7 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.12.0-alpha.6 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.12.0-alpha.5 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.12.0-alpha.4 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.12.0-alpha.3 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.12.0-alpha.2 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.12.0-alpha.1 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.11.4 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.11.3 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.11.2 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.11.1 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.11.0 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.11.0-rc.2 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.11.0-rc.1 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.11.0-beta.5 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.11.0-beta.4 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.11.0-beta.3 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.11.0-beta.2 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.11.0-beta.1 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.11.0-alpha.7 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.11.0-alpha.6 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.11.0-alpha.5 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.11.0-alpha.4 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.11.0-alpha.3 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.11.0-alpha.2 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.11.0-alpha.1 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::check 3.10.12 satisfies 3.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::matched 3.10.12\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Version 3.10 is available for downloading\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Download from \"https://github.com/actions/python-versions/releases/download/3.10.12-5200619051/python-3.10.12-linux-20.04-x64.tar.gz\"\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2] \u2b50 Run Main Install dependencies and backend numpy\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/python-versions/releases/download/3.10.12-5200619051/python-3.10.12-linux-20.04-x64.tar.gz\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::Destination /tmp/e9df69e4-f76a-401b-a426-bcce8a342bec\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::set auth\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::download complete\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Extract downloaded archive\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::Checking tar --version\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/3f1e56d7-10c4-4a15-8388-4f43c099e34c -f /tmp/e9df69e4-f76a-401b-a426-bcce8a342bec\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Execute installation script\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Check if Python hostedtoolcache folder exist...\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Create Python 3.10.12 folder\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Copy Python binaries to hostedtoolcache folder\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Create additional symlinks (Required for the UsePythonVersion Azure Pipelines task and the setup-python GitHub Action)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Upgrading pip...\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (21.2.4)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting pip\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Looking in links: /tmp/tmpx286oeln\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (65.5.0)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (23.0.1)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Installing collected packages: pip\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Attempting uninstall: pip\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |     Found existing installation: pip 21.2.4\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |     Uninstalling pip-21.2.4:\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting pip\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 12.4 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Installing collected packages: pip\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |       Successfully uninstalled pip-21.2.4\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Successfully installed pip-23.1.2\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Successfully installed pip-23.1.2\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Create complete file\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::isExplicit: \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::explicit? false\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::explicit? true\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::isExplicit: 3.10.12\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::explicit? true\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::explicit? true\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::explicit? true\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::explicit? true\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::explicit? true\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::explicit? true\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::evaluating 7 versions\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::matched: 3.10.12\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.10.12/x64\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udcac  ::debug::Found tool in cache Python 3.10.12 x64\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Successfully set up CPython (3.10.12)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \u2753  ::endgroup::\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \u2705  Success - Main Set up Python\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.12/x64\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.12/x64\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.10.12/x64/lib\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.10.12/x64\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.10.12/x64/lib/pkgconfig\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.12/x64\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \u2699  ::set-output:: python-version=3.10.12\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.10.12/x64/bin/python\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.12/x64\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.12/x64/bin\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1] \u2b50 Run Main Install dependencies and backend numpy\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting numpy (from -r requirements.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading numpy-1.21.6-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (15.7 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 15.7/15.7 MB 5.5 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting scipy (from -r requirements.txt (line 2))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading scipy-1.7.3-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (38.1 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 38.1/38.1 MB 23.8 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting pytest (from -r requirements.txt (line 3))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading pytest-7.4.0-py3-none-any.whl (323 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 323.6/323.6 kB 3.9 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting pytest-cov (from -r requirements.txt (line 4))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading pytest_cov-4.1.0-py3-none-any.whl (21 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting python_version>=\"3.6\" (from -r requirements.txt (line 5))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading python_version-0.0.2-py2.py3-none-any.whl (3.4 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting iniconfig (from pytest->-r requirements.txt (line 3))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting packaging (from pytest->-r requirements.txt (line 3))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 2.9 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting pluggy<2.0,>=0.12 (from pytest->-r requirements.txt (line 3))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting exceptiongroup>=1.0.0rc8 (from pytest->-r requirements.txt (line 3))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting tomli>=1.0.0 (from pytest->-r requirements.txt (line 3))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting importlib-metadata>=0.12 (from pytest->-r requirements.txt (line 3))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting coverage[toml]>=5.2.1 (from pytest-cov->-r requirements.txt (line 4))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading coverage-7.2.7-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (225 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 225.6/225.6 kB 5.7 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting zipp>=0.5 (from importlib-metadata>=0.12->pytest->-r requirements.txt (line 3))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting typing-extensions>=3.6.4 (from importlib-metadata>=0.12->pytest->-r requirements.txt (line 3))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading typing_extensions-4.7.0-py3-none-any.whl (33 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Installing collected packages: python_version, zipp, typing-extensions, tomli, packaging, numpy, iniconfig, exceptiongroup, coverage, scipy, importlib-metadata, pluggy, pytest, pytest-cov\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Successfully installed coverage-7.2.7 exceptiongroup-1.1.1 importlib-metadata-6.7.0 iniconfig-2.0.0 numpy-1.21.6 packaging-23.1 pluggy-1.2.0 pytest-7.4.0 pytest-cov-4.1.0 python_version-0.0.2 scipy-1.7.3 tomli-2.0.1 typing-extensions-4.7.0 zipp-3.15.0\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | [notice] To update, run: pip install --upgrade pip\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting sphinx (from -r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading sphinx-5.3.0-py3-none-any.whl (3.2 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.2/3.2 MB 45.0 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting jsmin (from -r doc/requirements_doc.txt (line 2))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading jsmin-3.0.1.tar.gz (13 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Installing build dependencies: started\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Installing build dependencies: finished with status 'done'\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Getting requirements to build wheel: started\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Getting requirements to build wheel: finished with status 'done'\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Preparing metadata (pyproject.toml): started\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting rcssmin (from -r doc/requirements_doc.txt (line 3))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading rcssmin-1.1.1-cp37-cp37m-manylinux1_x86_64.whl (42 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42.7/42.7 kB 559.3 kB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting numpydoc (from -r doc/requirements_doc.txt (line 4))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading numpydoc-1.5.0-py3-none-any.whl (52 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 52.4/52.4 kB 721.8 kB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting sphinx-gallery (from -r doc/requirements_doc.txt (line 5))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading sphinx_gallery-0.13.0-py3-none-any.whl (147 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 147.4/147.4 kB 2.3 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting matplotlib==3.5.2 (from -r doc/requirements_doc.txt (line 6))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading matplotlib-3.5.2-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl (11.2 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 11.2/11.2 MB 26.2 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting tensorly_sphinx_theme (from -r doc/requirements_doc.txt (line 7))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading tensorly_sphinx_theme-0.2.3-py3-none-any.whl (53 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 53.2/53.2 kB 742.2 kB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting cycler>=0.10 (from matplotlib==3.5.2->-r doc/requirements_doc.txt (line 6))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading cycler-0.11.0-py3-none-any.whl (6.4 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting fonttools>=4.22.0 (from matplotlib==3.5.2->-r doc/requirements_doc.txt (line 6))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading fonttools-4.38.0-py3-none-any.whl (965 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 965.4/965.4 kB 6.6 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting kiwisolver>=1.0.1 (from matplotlib==3.5.2->-r doc/requirements_doc.txt (line 6))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading kiwisolver-1.4.4-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl (1.1 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.1/1.1 MB 8.4 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Requirement already satisfied: numpy>=1.17 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from matplotlib==3.5.2->-r doc/requirements_doc.txt (line 6)) (1.21.6)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Requirement already satisfied: packaging>=20.0 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from matplotlib==3.5.2->-r doc/requirements_doc.txt (line 6)) (23.1)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting pillow>=6.2.0 (from matplotlib==3.5.2->-r doc/requirements_doc.txt (line 6))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading Pillow-9.5.0-cp37-cp37m-manylinux_2_28_x86_64.whl (3.4 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.4/3.4 MB 16.1 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting pyparsing>=2.2.1 (from matplotlib==3.5.2->-r doc/requirements_doc.txt (line 6))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading pyparsing-3.1.0-py3-none-any.whl (102 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 102.6/102.6 kB 4.7 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting python-dateutil>=2.7 (from matplotlib==3.5.2->-r doc/requirements_doc.txt (line 6))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 247.7/247.7 kB 1.4 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting sphinxcontrib-applehelp (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading sphinxcontrib_applehelp-1.0.2-py2.py3-none-any.whl (121 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 121.2/121.2 kB 1.3 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting sphinxcontrib-devhelp (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading sphinxcontrib_devhelp-1.0.2-py2.py3-none-any.whl (84 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 84.7/84.7 kB 1.3 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting sphinxcontrib-jsmath (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading sphinxcontrib_jsmath-1.0.1-py2.py3-none-any.whl (5.1 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting sphinxcontrib-htmlhelp>=2.0.0 (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading sphinxcontrib_htmlhelp-2.0.0-py2.py3-none-any.whl (100 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 100.5/100.5 kB 783.5 kB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting sphinxcontrib-serializinghtml>=1.1.5 (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading sphinxcontrib_serializinghtml-1.1.5-py2.py3-none-any.whl (94 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 94.0/94.0 kB 983.5 kB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting sphinxcontrib-qthelp (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading sphinxcontrib_qthelp-1.0.3-py2.py3-none-any.whl (90 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 90.6/90.6 kB 1.8 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting Jinja2>=3.0 (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading Jinja2-3.1.2-py3-none-any.whl (133 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 133.1/133.1 kB 7.1 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting Pygments>=2.12 (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading Pygments-2.15.1-py3-none-any.whl (1.1 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.1/1.1 MB 8.6 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting docutils<0.20,>=0.14 (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading docutils-0.19-py3-none-any.whl (570 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 570.5/570.5 kB 13.4 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting snowballstemmer>=2.0 (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading snowballstemmer-2.2.0-py2.py3-none-any.whl (93 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 93.0/93.0 kB 846.4 kB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting babel>=2.9 (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading Babel-2.12.1-py3-none-any.whl (10.1 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 10.1/10.1 MB 22.3 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting alabaster<0.8,>=0.7 (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading alabaster-0.7.13-py3-none-any.whl (13 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting imagesize>=1.3 (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading imagesize-1.4.1-py2.py3-none-any.whl (8.8 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting requests>=2.5.0 (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.6/62.6 kB 3.4 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Requirement already satisfied: importlib-metadata>=4.8 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from sphinx->-r doc/requirements_doc.txt (line 1)) (6.7.0)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting pytz>=2015.7 (from babel>=2.9->sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 502.3/502.3 kB 7.9 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Requirement already satisfied: zipp>=0.5 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from importlib-metadata>=4.8->sphinx->-r doc/requirements_doc.txt (line 1)) (3.15.0)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Requirement already satisfied: typing-extensions>=3.6.4 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from importlib-metadata>=4.8->sphinx->-r doc/requirements_doc.txt (line 1)) (4.7.0)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting MarkupSafe>=2.0 (from Jinja2>=3.0->sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting six>=1.5 (from python-dateutil>=2.7->matplotlib==3.5.2->-r doc/requirements_doc.txt (line 6))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting charset-normalizer<4,>=2 (from requests>=2.5.0->sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 171.0/171.0 kB 1.4 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting idna<4,>=2.5 (from requests>=2.5.0->sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 4.1 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting urllib3<3,>=1.21.1 (from requests>=2.5.0->sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 123.6/123.6 kB 12.9 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting certifi>=2017.4.17 (from requests>=2.5.0->sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 8.6 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Building wheels for collected packages: jsmin\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Building wheel for jsmin (pyproject.toml): started\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Building wheel for jsmin (pyproject.toml): finished with status 'done'\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Created wheel for jsmin: filename=jsmin-3.0.1-py3-none-any.whl size=13765 sha256=d2cef5ee4ef09980c7c8599a06eb1b60a2a15a331dbf0eb66e86135cdf2d25c1\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/a4/0b/64/fb4f87526ecbdf7921769a39d91dcfe4860e621cf15b8250d6\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Successfully built jsmin\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Installing collected packages: snowballstemmer, rcssmin, pytz, jsmin, urllib3, sphinxcontrib-serializinghtml, sphinxcontrib-qthelp, sphinxcontrib-jsmath, sphinxcontrib-htmlhelp, sphinxcontrib-devhelp, sphinxcontrib-applehelp, six, pyparsing, Pygments, pillow, MarkupSafe, kiwisolver, imagesize, idna, fonttools, docutils, cycler, charset-normalizer, certifi, babel, alabaster, requests, python-dateutil, Jinja2, sphinx, matplotlib, tensorly_sphinx_theme, sphinx-gallery, numpydoc\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Successfully installed Jinja2-3.1.2 MarkupSafe-2.1.3 Pygments-2.15.1 alabaster-0.7.13 babel-2.12.1 certifi-2023.5.7 charset-normalizer-3.1.0 cycler-0.11.0 docutils-0.19 fonttools-4.38.0 idna-3.4 imagesize-1.4.1 jsmin-3.0.1 kiwisolver-1.4.4 matplotlib-3.5.2 numpydoc-1.5.0 pillow-9.5.0 pyparsing-3.1.0 python-dateutil-2.8.2 pytz-2023.3 rcssmin-1.1.1 requests-2.31.0 six-1.16.0 snowballstemmer-2.2.0 sphinx-5.3.0 sphinx-gallery-0.13.0 sphinxcontrib-applehelp-1.0.2 sphinxcontrib-devhelp-1.0.2 sphinxcontrib-htmlhelp-2.0.0 sphinxcontrib-jsmath-1.0.1 sphinxcontrib-qthelp-1.0.3 sphinxcontrib-serializinghtml-1.1.5 tensorly_sphinx_theme-0.2.3 urllib3-2.0.3\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | [notice] To update, run: pip install --upgrade pip\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Installing dependencies for BACKEND=numpy\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Installing sparse\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting sparse\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading sparse-0.13.0-py2.py3-none-any.whl (77 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 77.8/77.8 kB 467.6 kB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Requirement already satisfied: numpy>=1.17 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from sparse) (1.21.6)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Requirement already satisfied: scipy>=0.19 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from sparse) (1.7.3)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting numba>=0.49 (from sparse)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading numba-0.56.4-cp37-cp37m-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (3.5 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.5/3.5 MB 38.8 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Collecting llvmlite<0.40,>=0.39.0dev0 (from numba>=0.49->sparse)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Downloading llvmlite-0.39.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (34.6 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 34.6/34.6 MB 26.7 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from numba>=0.49->sparse) (47.1.0)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Requirement already satisfied: importlib-metadata in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from numba>=0.49->sparse) (6.7.0)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Requirement already satisfied: zipp>=0.5 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from importlib-metadata->numba>=0.49->sparse) (3.15.0)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Requirement already satisfied: typing-extensions>=3.6.4 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from importlib-metadata->numba>=0.49->sparse) (4.7.0)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Installing collected packages: llvmlite, numba, sparse\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Successfully installed llvmlite-0.39.1 numba-0.56.4 sparse-0.13.0\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | [notice] To update, run: pip install --upgrade pip\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \u2705  Success - Main Install dependencies and backend numpy\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2] \u2b50 Run Main Install package\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Obtaining file:///tmp/558156d8-17ed-11ee-8a50-bb14de238602/tensorly-tensorly\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Installing build dependencies: started\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (23.0.1)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting pip\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Using cached pip-23.1.2-py3-none-any.whl (2.1 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Installing collected packages: pip\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Attempting uninstall: pip\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |     Found existing installation: pip 23.0.1\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |     Uninstalling pip-23.0.1:\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |       Successfully uninstalled pip-23.0.1\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Successfully installed pip-23.1.2\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Installing build dependencies: finished with status 'done'\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Checking if build backend supports build_editable: started\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Checking if build backend supports build_editable: finished with status 'done'\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Getting requirements to build editable: started\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Getting requirements to build editable: finished with status 'done'\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Preparing editable metadata (pyproject.toml): started\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting numpy (from -r requirements.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Preparing editable metadata (pyproject.toml): finished with status 'done'\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Requirement already satisfied: numpy in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from tensorly==0.8.1) (1.21.6)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Requirement already satisfied: scipy in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from tensorly==0.8.1) (1.7.3)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading numpy-1.25.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.6 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Building wheels for collected packages: tensorly\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Building editable for tensorly (pyproject.toml): started\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 17.6/17.6 MB 48.6 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Building editable for tensorly (pyproject.toml): finished with status 'done'\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Created wheel for tensorly: filename=tensorly-0.8.1-0.editable-py3-none-any.whl size=6502 sha256=9ca1105e3ae85c5c74e28d74bca1e9d4153f875dfe585d8c0f4f8c883cdb33b7\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   Stored in directory: /tmp/pip-ephem-wheel-cache-zpfboo0h/wheels/38/45/ae/2cc7dbb91b055f3faf46b392b36e42dc20604c6ef0545f1716\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Successfully built tensorly\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting scipy (from -r requirements.txt (line 2))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading scipy-1.11.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (36.3 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Installing collected packages: tensorly\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Successfully installed tensorly-0.8.1\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | [notice] To update, run: pip install --upgrade pip\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \u2705  Success - Main Install package\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2] \u2b50 Run Main Test with backend numpy pytest and coverage\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 36.3/36.3 MB 24.9 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting pytest (from -r requirements.txt (line 3))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading pytest-7.4.0-py3-none-any.whl (323 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 323.6/323.6 kB 5.0 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting pytest-cov (from -r requirements.txt (line 4))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading pytest_cov-4.1.0-py3-none-any.whl (21 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting python_version>=\"3.6\" (from -r requirements.txt (line 5))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading python_version-0.0.2-py2.py3-none-any.whl (3.4 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting iniconfig (from pytest->-r requirements.txt (line 3))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting packaging (from pytest->-r requirements.txt (line 3))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 538.2 kB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting pluggy<2.0,>=0.12 (from pytest->-r requirements.txt (line 3))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting exceptiongroup>=1.0.0rc8 (from pytest->-r requirements.txt (line 3))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting tomli>=1.0.0 (from pytest->-r requirements.txt (line 3))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting coverage[toml]>=5.2.1 (from pytest-cov->-r requirements.txt (line 4))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading coverage-7.2.7-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (228 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 228.7/228.7 kB 4.3 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Installing collected packages: python_version, tomli, pluggy, packaging, numpy, iniconfig, exceptiongroup, coverage, scipy, pytest, pytest-cov\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | ============================= test session starts ==============================\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | platform linux -- Python 3.7.11, pytest-7.4.0, pluggy-1.2.0 -- /opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | cachedir: .pytest_cache\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/tensorly-tensorly\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | plugins: cov-4.1.0\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | collecting ... collected 415 items\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/contrib/decomposition/tests/test_mps_decomposition_cross.py::test_tensor_train_cross_1 PASSED [  0%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/contrib/decomposition/tests/test_mps_decomposition_cross.py::test_tensor_train_cross_2 PASSED [  0%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/contrib/decomposition/tests/test_mps_decomposition_cross.py::test_tensor_train_cross_3 PASSED [  0%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/contrib/decomposition/tests/test_mps_decomposition_cross.py::test_tensor_train_cross_4 PASSED [  0%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/contrib/decomposition/tests/test_tt_TTOI.py::test_TTOI PASSED   [  1%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Successfully installed coverage-7.2.7 exceptiongroup-1.1.1 iniconfig-2.0.0 numpy-1.25.0 packaging-23.1 pluggy-1.2.0 pytest-7.4.0 pytest-cov-4.1.0 python_version-0.0.2 scipy-1.11.1 tomli-2.0.1\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting sphinx (from -r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading sphinx-7.0.1-py3-none-any.whl (3.0 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.0/3.0 MB 16.0 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting jsmin (from -r doc/requirements_doc.txt (line 2))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading jsmin-3.0.1.tar.gz (13 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Installing build dependencies: started\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Installing build dependencies: finished with status 'done'\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Getting requirements to build wheel: started\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Getting requirements to build wheel: finished with status 'done'\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Preparing metadata (pyproject.toml): started\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting rcssmin (from -r doc/requirements_doc.txt (line 3))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading rcssmin-1.1.1-cp310-cp310-manylinux1_x86_64.whl (49 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 49.8/49.8 kB 1.3 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting numpydoc (from -r doc/requirements_doc.txt (line 4))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading numpydoc-1.5.0-py3-none-any.whl (52 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 52.4/52.4 kB 1.1 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting sphinx-gallery (from -r doc/requirements_doc.txt (line 5))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading sphinx_gallery-0.13.0-py3-none-any.whl (147 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 147.4/147.4 kB 2.7 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting matplotlib==3.5.2 (from -r doc/requirements_doc.txt (line 6))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading matplotlib-3.5.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.9 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 11.9/11.9 MB 19.8 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting tensorly_sphinx_theme (from -r doc/requirements_doc.txt (line 7))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading tensorly_sphinx_theme-0.2.3-py3-none-any.whl (53 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 53.2/53.2 kB 871.6 kB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting cycler>=0.10 (from matplotlib==3.5.2->-r doc/requirements_doc.txt (line 6))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading cycler-0.11.0-py3-none-any.whl (6.4 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting fonttools>=4.22.0 (from matplotlib==3.5.2->-r doc/requirements_doc.txt (line 6))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading fonttools-4.40.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (4.2 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4.2/4.2 MB 13.1 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting kiwisolver>=1.0.1 (from matplotlib==3.5.2->-r doc/requirements_doc.txt (line 6))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading kiwisolver-1.4.4-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.6 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.6/1.6 MB 15.4 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Requirement already satisfied: numpy>=1.17 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from matplotlib==3.5.2->-r doc/requirements_doc.txt (line 6)) (1.25.0)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Requirement already satisfied: packaging>=20.0 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from matplotlib==3.5.2->-r doc/requirements_doc.txt (line 6)) (23.1)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting pillow>=6.2.0 (from matplotlib==3.5.2->-r doc/requirements_doc.txt (line 6))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading Pillow-9.5.0-cp310-cp310-manylinux_2_28_x86_64.whl (3.4 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.4/3.4 MB 24.3 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting pyparsing>=2.2.1 (from matplotlib==3.5.2->-r doc/requirements_doc.txt (line 6))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading pyparsing-3.1.0-py3-none-any.whl (102 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 102.6/102.6 kB 4.5 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting python-dateutil>=2.7 (from matplotlib==3.5.2->-r doc/requirements_doc.txt (line 6))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 247.7/247.7 kB 5.5 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting sphinxcontrib-applehelp (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading sphinxcontrib_applehelp-1.0.4-py3-none-any.whl (120 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 120.6/120.6 kB 3.5 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting sphinxcontrib-devhelp (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading sphinxcontrib_devhelp-1.0.2-py2.py3-none-any.whl (84 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 84.7/84.7 kB 11.1 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting sphinxcontrib-jsmath (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading sphinxcontrib_jsmath-1.0.1-py2.py3-none-any.whl (5.1 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting sphinxcontrib-htmlhelp>=2.0.0 (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading sphinxcontrib_htmlhelp-2.0.1-py3-none-any.whl (99 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 99.8/99.8 kB 5.5 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting sphinxcontrib-serializinghtml>=1.1.5 (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading sphinxcontrib_serializinghtml-1.1.5-py2.py3-none-any.whl (94 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 94.0/94.0 kB 7.0 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting sphinxcontrib-qthelp (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading sphinxcontrib_qthelp-1.0.3-py2.py3-none-any.whl (90 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 90.6/90.6 kB 9.0 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting Jinja2>=3.0 (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading Jinja2-3.1.2-py3-none-any.whl (133 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 133.1/133.1 kB 2.4 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting Pygments>=2.13 (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading Pygments-2.15.1-py3-none-any.whl (1.1 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.1/1.1 MB 9.4 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting docutils<0.21,>=0.18.1 (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading docutils-0.20.1-py3-none-any.whl (572 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 572.7/572.7 kB 9.8 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting snowballstemmer>=2.0 (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading snowballstemmer-2.2.0-py2.py3-none-any.whl (93 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 93.0/93.0 kB 1.4 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting babel>=2.9 (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading Babel-2.12.1-py3-none-any.whl (10.1 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/contrib/sparse/tests/test_decomposition.py::test_sparse_parafac PASSED [  1%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 10.1/10.1 MB 37.1 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting alabaster<0.8,>=0.7 (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading alabaster-0.7.13-py3-none-any.whl (13 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting imagesize>=1.3 (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading imagesize-1.4.1-py2.py3-none-any.whl (8.8 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting requests>=2.25.0 (from sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.6/62.6 kB 1.1 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting MarkupSafe>=2.0 (from Jinja2>=3.0->sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading MarkupSafe-2.1.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting six>=1.5 (from python-dateutil>=2.7->matplotlib==3.5.2->-r doc/requirements_doc.txt (line 6))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting charset-normalizer<4,>=2 (from requests>=2.25.0->sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading charset_normalizer-3.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (199 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 199.3/199.3 kB 7.0 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting idna<4,>=2.5 (from requests>=2.25.0->sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 1.2 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting urllib3<3,>=1.21.1 (from requests>=2.25.0->sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 123.6/123.6 kB 2.7 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting certifi>=2017.4.17 (from requests>=2.25.0->sphinx->-r doc/requirements_doc.txt (line 1))\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 22.6 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Building wheels for collected packages: jsmin\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Building wheel for jsmin (pyproject.toml): started\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Building wheel for jsmin (pyproject.toml): finished with status 'done'\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Created wheel for jsmin: filename=jsmin-3.0.1-py3-none-any.whl size=13765 sha256=57b1a4c41c4f244674e9fecd47b1bc66eb8d88f4979a312994b95a9694bd52ec\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/9a/eb/65/4a07a200d454fb40cbd51a2deee3c5d26285321e3bbbe627a5\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Successfully built jsmin\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Installing collected packages: snowballstemmer, rcssmin, jsmin, urllib3, sphinxcontrib-serializinghtml, sphinxcontrib-qthelp, sphinxcontrib-jsmath, sphinxcontrib-htmlhelp, sphinxcontrib-devhelp, sphinxcontrib-applehelp, six, pyparsing, Pygments, pillow, MarkupSafe, kiwisolver, imagesize, idna, fonttools, docutils, cycler, charset-normalizer, certifi, babel, alabaster, requests, python-dateutil, Jinja2, sphinx, matplotlib, tensorly_sphinx_theme, sphinx-gallery, numpydoc\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Successfully installed Jinja2-3.1.2 MarkupSafe-2.1.3 Pygments-2.15.1 alabaster-0.7.13 babel-2.12.1 certifi-2023.5.7 charset-normalizer-3.1.0 cycler-0.11.0 docutils-0.20.1 fonttools-4.40.0 idna-3.4 imagesize-1.4.1 jsmin-3.0.1 kiwisolver-1.4.4 matplotlib-3.5.2 numpydoc-1.5.0 pillow-9.5.0 pyparsing-3.1.0 python-dateutil-2.8.2 rcssmin-1.1.1 requests-2.31.0 six-1.16.0 snowballstemmer-2.2.0 sphinx-7.0.1 sphinx-gallery-0.13.0 sphinxcontrib-applehelp-1.0.4 sphinxcontrib-devhelp-1.0.2 sphinxcontrib-htmlhelp-2.0.1 sphinxcontrib-jsmath-1.0.1 sphinxcontrib-qthelp-1.0.3 sphinxcontrib-serializinghtml-1.1.5 tensorly_sphinx_theme-0.2.3 urllib3-2.0.3\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Installing dependencies for BACKEND=numpy\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Installing sparse\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting sparse\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading sparse-0.14.0-py2.py3-none-any.whl (80 kB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 81.0/81.0 kB 682.3 kB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Requirement already satisfied: numpy>=1.17 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from sparse) (1.25.0)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Requirement already satisfied: scipy>=0.19 in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from sparse) (1.11.1)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting numba>=0.49 (from sparse)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading numba-0.57.1-cp310-cp310-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (3.6 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.6/3.6 MB 30.1 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting llvmlite<0.41,>=0.40.0dev0 (from numba>=0.49->sparse)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading llvmlite-0.40.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (42.1 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/contrib/sparse/tests/test_tenalg.py::test_sparse_unfolding_times_cp PASSED [  1%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/datasets/tests/test_imports.py::test_IL2data PASSED             [  1%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/datasets/tests/test_imports.py::test_COVID19_data PASSED        [  2%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/datasets/tests/test_imports.py::test_indian_pines PASSED        [  2%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/datasets/tests/test_imports.py::test_kinetic PASSED             [  2%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/datasets/tests/test_synthetic.py::test_gen_image PASSED         [  2%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cmtf_als.py::test_coupled_matrix_tensor_3d_factorization PASSED [  3%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_nonnegative PASSED [  3%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_l1 PASSED [  3%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_l2 PASSED [  3%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42.1/42.1 MB 21.6 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_squared_l2 PASSED [  4%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_monotonicity PASSED [  4%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_simplex PASSED [  4%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Collecting numpy>=1.17 (from sparse)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Downloading numpy-1.24.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.3 MB)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 17.3/17.3 MB 27.7 MB/s eta 0:00:00\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_normalize PASSED [  4%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_soft_sparsity PASSED [  5%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Installing collected packages: numpy, llvmlite, numba, sparse\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Attempting uninstall: numpy\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |     Found existing installation: numpy 1.25.0\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_unimodality PASSED [  5%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |     Uninstalling numpy-1.25.0:\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |       Successfully uninstalled numpy-1.25.0\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_normalized_sparsity PASSED [  5%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_hard_sparsity PASSED [  5%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_smoothness PASSED [  6%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-svd-1-1-True-True] PASSED [  6%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-svd-1-1-True-False] PASSED [  6%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-svd-1-1-False-True] PASSED [  6%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-svd-1-1-False-False] PASSED [  6%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-svd-3-4-True-True] PASSED [  7%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-svd-3-4-True-False] PASSED [  7%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-svd-3-4-False-True] PASSED [  7%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-svd-3-4-False-False] PASSED [  7%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-random-1-1-True-True] PASSED [  8%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-random-1-1-True-False] PASSED [  8%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-random-1-1-False-True] PASSED [  8%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-random-1-1-False-False] PASSED [  8%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-random-3-4-True-True] PASSED [  9%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-random-3-4-True-False] PASSED [  9%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-random-3-4-False-True] PASSED [  9%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-random-3-4-False-False] PASSED [  9%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-svd-1-1-True-True] PASSED [ 10%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-svd-1-1-True-False] PASSED [ 10%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-svd-1-1-False-True] PASSED [ 10%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-svd-1-1-False-False] PASSED [ 10%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-svd-3-4-True-True] PASSED [ 11%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-svd-3-4-True-False] PASSED [ 11%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-svd-3-4-False-True] PASSED [ 11%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-svd-3-4-False-False] PASSED [ 11%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-random-1-1-True-True] PASSED [ 12%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-random-1-1-True-False] PASSED [ 12%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-random-1-1-False-True] PASSED [ 12%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-random-1-1-False-False] PASSED [ 12%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-random-3-4-True-True] PASSED [ 13%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-random-3-4-True-False] PASSED [ 13%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-random-3-4-False-True] PASSED [ 13%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-random-3-4-False-False] PASSED [ 13%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-svd-1-1-True-True] PASSED [ 13%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-svd-1-1-True-False] PASSED [ 14%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-svd-1-1-False-True] PASSED [ 14%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-svd-1-1-False-False] PASSED [ 14%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-svd-3-4-True-True] PASSED [ 14%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-svd-3-4-True-False] PASSED [ 15%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-svd-3-4-False-True] PASSED [ 15%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-svd-3-4-False-False] PASSED [ 15%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-random-1-1-True-True] PASSED [ 15%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-random-1-1-True-False] PASSED [ 16%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-random-1-1-False-True] PASSED [ 16%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-random-1-1-False-False] PASSED [ 16%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-random-3-4-True-True] PASSED [ 16%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-random-3-4-True-False] PASSED [ 17%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-random-3-4-False-True] PASSED [ 17%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-random-3-4-False-False] PASSED [ 17%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-svd-1-1-True-True] PASSED [ 17%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-svd-1-1-True-False] PASSED [ 18%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-svd-1-1-False-True] PASSED [ 18%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-svd-1-1-False-False] PASSED [ 18%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-svd-3-4-True-True] PASSED [ 18%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-svd-3-4-True-False] PASSED [ 19%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-svd-3-4-False-True] PASSED [ 19%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Successfully installed llvmlite-0.40.1 numba-0.57.1 numpy-1.24.4 sparse-0.14.0\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-svd-3-4-False-False] PASSED [ 19%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-random-1-1-True-True] PASSED [ 19%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-random-1-1-True-False] PASSED [ 20%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-random-1-1-False-True] PASSED [ 20%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \u2705  Success - Main Install dependencies and backend numpy\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-random-1-1-False-False] PASSED [ 20%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-random-3-4-True-True] PASSED [ 20%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-random-3-4-True-False] PASSED [ 20%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-random-3-4-False-True] PASSED [ 21%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1] \u2b50 Run Main Install package\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-random-3-4-False-False] PASSED [ 21%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-svd-1-1-True-True] PASSED [ 21%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-svd-1-1-True-False] PASSED [ 21%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-svd-1-1-False-True] PASSED [ 22%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-svd-1-1-False-False] PASSED [ 22%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-svd-3-4-True-True] PASSED [ 22%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-svd-3-4-True-False] PASSED [ 22%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-svd-3-4-False-True] PASSED [ 23%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-svd-3-4-False-False] PASSED [ 23%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-random-1-1-True-True] PASSED [ 23%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-random-1-1-True-False] PASSED [ 23%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-random-1-1-False-True] PASSED [ 24%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-random-1-1-False-False] PASSED [ 24%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-random-3-4-True-True] PASSED [ 24%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-random-3-4-True-False] PASSED [ 24%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-random-3-4-False-True] PASSED [ 25%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-random-3-4-False-False] PASSED [ 25%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-svd-1-1-True-True] PASSED [ 25%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-svd-1-1-True-False] PASSED [ 25%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-svd-1-1-False-True] PASSED [ 26%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-svd-1-1-False-False] PASSED [ 26%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-svd-3-4-True-True] PASSED [ 26%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-svd-3-4-True-False] PASSED [ 26%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-svd-3-4-False-True] PASSED [ 26%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-svd-3-4-False-False] PASSED [ 27%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-random-1-1-True-True] PASSED [ 27%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-random-1-1-True-False] PASSED [ 27%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-random-1-1-False-True] PASSED [ 27%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-random-1-1-False-False] PASSED [ 28%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-random-3-4-True-True] PASSED [ 28%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-random-3-4-True-False] PASSED [ 28%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-random-3-4-False-True] PASSED [ 28%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-random-3-4-False-False] PASSED [ 29%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-svd-1-1-True-True] PASSED [ 29%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-svd-1-1-True-False] PASSED [ 29%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-svd-1-1-False-True] PASSED [ 29%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-svd-1-1-False-False] PASSED [ 30%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-svd-3-4-True-True] PASSED [ 30%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-svd-3-4-True-False] PASSED [ 30%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-svd-3-4-False-True] PASSED [ 30%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-svd-3-4-False-False] PASSED [ 31%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-random-1-1-True-True] PASSED [ 31%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-random-1-1-True-False] PASSED [ 31%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-random-1-1-False-True] PASSED [ 31%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-random-1-1-False-False] PASSED [ 32%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-random-3-4-True-True] PASSED [ 32%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-random-3-4-True-False] PASSED [ 32%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-random-3-4-False-True] PASSED [ 32%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-random-3-4-False-False] PASSED [ 33%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-svd-1-1-True-True] PASSED [ 33%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-svd-1-1-True-False] PASSED [ 33%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-svd-1-1-False-True] PASSED [ 33%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-svd-1-1-False-False] PASSED [ 33%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-svd-3-4-True-True] PASSED [ 34%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-svd-3-4-True-False] PASSED [ 34%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-svd-3-4-False-True] PASSED [ 34%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-svd-3-4-False-False] PASSED [ 34%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-random-1-1-True-True] PASSED [ 35%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-random-1-1-True-False] PASSED [ 35%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-random-1-1-False-True] PASSED [ 35%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-random-1-1-False-False] PASSED [ 35%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-random-3-4-True-True] PASSED [ 36%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-random-3-4-True-False] PASSED [ 36%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-random-3-4-False-True] PASSED [ 36%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-random-3-4-False-False] PASSED [ 36%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_masked_parafac[True] PASSED [ 37%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_masked_parafac[False] PASSED [ 37%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_parafac_linesearch PASSED  [ 37%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-1-False-svd-1-1] PASSED [ 37%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-1-False-svd-3-3] PASSED [ 38%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-1-False-random-1-1] PASSED [ 38%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-1-False-random-3-3] PASSED [ 38%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-1-True-svd-1-1] PASSED [ 38%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-1-True-svd-3-3] PASSED [ 39%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-1-True-random-1-1] PASSED [ 39%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-1-True-random-3-3] PASSED [ 39%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-2-False-svd-1-1] PASSED [ 39%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-2-False-svd-3-3] PASSED [ 40%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-2-False-random-1-1] PASSED [ 40%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-2-False-random-3-3] PASSED [ 40%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-2-True-svd-1-1] PASSED [ 40%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-2-True-svd-3-3] PASSED [ 40%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-2-True-random-1-1] PASSED [ 41%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-2-True-random-3-3] PASSED [ 41%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-1-False-svd-1-1] PASSED [ 41%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-1-False-svd-3-3] PASSED [ 41%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-1-False-random-1-1] PASSED [ 42%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-1-False-random-3-3] PASSED [ 42%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-1-True-svd-1-1] PASSED [ 42%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-1-True-svd-3-3] PASSED [ 42%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-1-True-random-1-1] PASSED [ 43%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-1-True-random-3-3] PASSED [ 43%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-2-False-svd-1-1] PASSED [ 43%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-2-False-svd-3-3] PASSED [ 43%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-2-False-random-1-1] PASSED [ 44%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-2-False-random-3-3] PASSED [ 44%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-2-True-svd-1-1] PASSED [ 44%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-2-True-svd-3-3] PASSED [ 44%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-2-True-random-1-1] PASSED [ 45%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-2-True-random-3-3] PASSED [ 45%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_initialize_nn_cp PASSED    [ 45%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac_hals_one_unconstrained PASSED [ 45%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_sample_khatri_rao PASSED   [ 46%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp.py::test_randomised_parafac PASSED  [ 46%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cp_power.py::test_parafac_power_iteration PASSED [ 46%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_parafac2.py::test_parafac2[True-random] PASSED [ 46%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_parafac2.py::test_parafac2[True-svd] PASSED [ 46%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_parafac2.py::test_parafac2[False-random] PASSED [ 47%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_parafac2.py::test_parafac2[False-svd] PASSED [ 47%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Obtaining file:///tmp/558156d8-17ed-11ee-8a50-bb14de238602/tensorly-tensorly\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Installing build dependencies: started\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_parafac2.py::test_parafac2_nn PASSED   [ 47%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_parafac2.py::test_parafac2_slice_and_tensor_input PASSED [ 47%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Installing build dependencies: finished with status 'done'\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Checking if build backend supports build_editable: started\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Checking if build backend supports build_editable: finished with status 'done'\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Getting requirements to build editable: started\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Getting requirements to build editable: finished with status 'done'\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Preparing editable metadata (pyproject.toml): started\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Preparing editable metadata (pyproject.toml): finished with status 'done'\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Requirement already satisfied: numpy in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from tensorly==0.8.1) (1.24.4)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Requirement already satisfied: scipy in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (from tensorly==0.8.1) (1.11.1)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_parafac2.py::test_parafac2_normalize_factors PASSED [ 48%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Building wheels for collected packages: tensorly\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Building editable for tensorly (pyproject.toml): started\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_parafac2.py::test_parafac2_init_valid PASSED [ 48%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_parafac2.py::test_parafac2_init_error PASSED [ 48%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_parafac2.py::test_parafac2_to_tensor PASSED [ 48%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_robust_decomposition.py::test_RPCA PASSED [ 49%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_symmetric_cp.py::test_symmetric_parafac_power_iteration PASSED [ 49%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tr_decomposition.py::test_tensor_ring PASSED [ 49%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tr_decomposition.py::test_tensor_ring_mode PASSED [ 49%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Building editable for tensorly (pyproject.toml): finished with status 'done'\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Created wheel for tensorly: filename=tensorly-0.8.1-0.editable-py3-none-any.whl size=6502 sha256=1233b5beab1bd8272acaf20bd15c0fd23da25d8c4037966baedcbecbb5d46ee9\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   Stored in directory: /tmp/pip-ephem-wheel-cache-giesb9fy/wheels/1d/8c/d0/b44c439c38bba600cd8c498fc751c06846f3925eb749a17490\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Successfully built tensorly\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tr_decomposition.py::test_tensor_ring_als[1-lstsq-1e-07-tensor_shape0-rank0] PASSED [ 50%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Installing collected packages: tensorly\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Successfully installed tensorly-0.8.1\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \u2705  Success - Main Install package\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tr_decomposition.py::test_tensor_ring_als[1-lstsq-1e-07-tensor_shape1-rank1] PASSED [ 50%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tr_decomposition.py::test_tensor_ring_als[1-normal_eq-0.001-tensor_shape0-rank0] PASSED [ 50%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tr_decomposition.py::test_tensor_ring_als[1-normal_eq-0.001-tensor_shape1-rank1] PASSED [ 50%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1] \u2b50 Run Main Test with backend numpy pytest and coverage\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tr_decomposition.py::test_tensor_ring_als[1234-lstsq-1e-07-tensor_shape0-rank0] PASSED [ 51%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tr_decomposition.py::test_tensor_ring_als[1234-lstsq-1e-07-tensor_shape1-rank1] PASSED [ 51%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tr_decomposition.py::test_tensor_ring_als[1234-normal_eq-0.001-tensor_shape0-rank0] PASSED [ 51%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tr_decomposition.py::test_tensor_ring_als[1234-normal_eq-0.001-tensor_shape1-rank1] PASSED [ 51%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tt_decomposition.py::test_tensor_train PASSED [ 52%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tt_decomposition.py::test_tensor_train_matrix PASSED [ 52%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tucker.py::test_partial_tucker PASSED  [ 52%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tucker.py::test_tucker PASSED          [ 52%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tucker.py::test_masked_tucker PASSED   [ 53%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tucker.py::test_non_negative_tucker[False-svd] PASSED [ 53%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tucker.py::test_non_negative_tucker[False-random] PASSED [ 53%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tucker.py::test_non_negative_tucker[True-svd] PASSED [ 53%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tucker.py::test_non_negative_tucker[True-random] PASSED [ 53%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_entropy.py::test_vonneumann_entropy_pure_state PASSED [ 54%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_entropy.py::test_tt_vonneumann_entropy_pure_state PASSED [ 54%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_entropy.py::test_cp_vonneumann_entropy_pure_state PASSED [ 54%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_entropy.py::test_vonneumann_entropy_mixed_state PASSED [ 54%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_entropy.py::test_tt_vonneumann_entropy_mixed_state PASSED [ 55%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_entropy.py::test_cp_vonneumann_entropy_mixed_state PASSED [ 55%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[1-1-True] PASSED [ 55%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[1-1-False] PASSED [ 55%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[1-3-True] PASSED [ 56%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[1-3-False] PASSED [ 56%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[1-5-True] PASSED [ 56%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[1-5-False] PASSED [ 56%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[3-1-True] PASSED [ 57%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[3-1-False] PASSED [ 57%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[3-3-True] PASSED [ 57%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[3-3-False] PASSED [ 57%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[3-5-True] PASSED [ 58%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[3-5-False] PASSED [ 58%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[5-1-True] PASSED [ 58%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[5-1-False] PASSED [ 58%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[5-3-True] PASSED [ 59%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[5-3-False] PASSED [ 59%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[5-5-True] PASSED [ 59%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[5-5-False] PASSED [ 59%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[10-1-True] PASSED [ 60%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[10-1-False] PASSED [ 60%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[10-3-True] PASSED [ 60%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[10-3-False] PASSED [ 60%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[10-5-True] PASSED [ 60%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[10-5-False] PASSED [ 61%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[100-1-True] PASSED [ 61%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[100-1-False] PASSED [ 61%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[100-3-True] PASSED [ 61%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[100-3-False] PASSED [ 62%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[100-5-True] PASSED [ 62%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[100-5-False] PASSED [ 62%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_regression.py::test_MSE PASSED               [ 62%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_regression.py::test_RMSE PASSED              [ 63%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_regression.py::test_R2_score PASSED          [ 63%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_regression.py::test_correlation PASSED       [ 63%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/metrics/tests/test_similarity.py::test_correlation_index PASSED [ 63%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/random/tests/test_base.py::test_check_random_state PASSED       [ 64%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/random/tests/test_base.py::test_random_cp PASSED                [ 64%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/random/tests/test_base.py::test_random_tucker PASSED            [ 64%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/random/tests/test_base.py::test_random_tt PASSED                [ 64%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/random/tests/test_base.py::test_random_tr PASSED                [ 65%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_transform PASSED         [ 65%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_factor_normality PASSED  [ 65%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_factor_orthogonality PASSED [ 65%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_consistent_components PASSED [ 66%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[1-2] PASSED [ 66%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[1-3] PASSED [ 66%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[1-4] PASSED [ 66%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[1-5] PASSED [ 66%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[2-2] PASSED [ 67%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[2-3] PASSED [ 67%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[2-4] PASSED [ 67%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[2-5] PASSED [ 67%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[4-2] PASSED [ 68%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[4-3] PASSED [ 68%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[4-4] PASSED [ 68%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[4-5] PASSED [ 68%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_zero_covariance_x PASSED [ 69%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_decomposition_accuracy[1-3] PASSED [ 69%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_decomposition_accuracy[1-4] PASSED [ 69%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_decomposition_accuracy[1-5] PASSED [ 69%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_decomposition_accuracy[2-3] PASSED [ 70%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_decomposition_accuracy[2-4] PASSED [ 70%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_decomposition_accuracy[2-5] PASSED [ 70%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_decomposition_accuracy[4-3] PASSED [ 70%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_decomposition_accuracy[4-4] PASSED [ 71%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_decomposition_accuracy[4-5] PASSED [ 71%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_reconstruction_x PASSED  [ 71%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_optimized_rand_covariance PASSED [ 71%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_optimized_covariance[n_latent0] PASSED [ 72%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_optimized_covariance[n_latent1] PASSED [ 72%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_optimized_covariance[n_latent2] PASSED [ 72%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_optimized_covariance[n_latent3] PASSED [ 72%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_increasing_variance_random PASSED [ 73%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_plsr.py::test_increasing_variance_synthetic PASSED [ 73%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_cp_regression.py::test_CPRegressor PASSED [ 73%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/regression/tests/test_tucker_regression.py::test_TuckerRegressor PASSED [ 73%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_batched_tensordot.py::test_batched_tensordot PASSED [ 73%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_generalised_inner_product.py::test_inner PASSED [ 74%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_khatri_rao.py::test_khatri_rao PASSED         [ 74%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_kronecker.py::test_kronecker PASSED           [ 74%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_n_mode_product.py::test_mode_dot PASSED       [ 74%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_n_mode_product.py::test_multi_mode_dot PASSED [ 75%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_outer_product.py::test_outer_product PASSED   [ 75%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_outer_product.py::test_batched_outer_product PASSED [ 75%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_proximal.py::test_smoothness PASSED           [ 75%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_proximal.py::test_hard_thresholding PASSED    [ 76%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_proximal.py::test_soft_sparsity PASSED        [ 76%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_proximal.py::test_simplex PASSED              [ 76%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_proximal.py::test_normalized_sparsity PASSED  [ 76%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_proximal.py::test_monotonicity PASSED         [ 77%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_proximal.py::test_unimodality PASSED          [ 77%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_proximal.py::test_l2_prox PASSED              [ 77%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_proximal.py::test_squared_l2_prox PASSED      [ 77%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_proximal.py::test_soft_thresholding PASSED    [ 78%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_proximal.py::test_svd_thresholding PASSED     [ 78%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_proximal.py::test_procrustes PASSED           [ 78%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_proximal.py::test_hals_nnls PASSED            [ 78%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_proximal.py::test_fista PASSED                [ 79%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_proximal.py::test_admm PASSED                 [ 79%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_proximal.py::test_active_set_nnls PASSED      [ 79%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_tenalg_utils.py::test_validate_contraction_modes PASSED [ 79%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tenalg/tests/test_unfolding_dot_khatri_rao.py::test_unfolding_dot_khatri_rao PASSED [ 80%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_backend.py::test_set_backend SKIPPED (could not\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | import 'torch': No module named 'torch')                                 [ 80%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_backend.py::test_set_backend_local_threadsafe SKIPPED [ 80%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_backend.py::test_backend_and_tensorly_module_attributes PASSED [ 80%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_backend.py::test_tensor_creation PASSED              [ 80%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_backend.py::test_svd_time PASSED                     [ 81%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_backend.py::test_svd PASSED                          [ 81%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_backend.py::test_randomized_range_finder PASSED      [ 81%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_backend.py::test_shape PASSED                        [ 81%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_backend.py::test_ndim PASSED                         [ 82%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_backend.py::test_norm PASSED                         [ 82%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_backend.py::test_clip PASSED                         [ 82%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_backend.py::test_clips_all_negative_tensor_correctly PASSED [ 82%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_backend.py::test_where PASSED                        [ 83%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_backend.py::test_matmul PASSED                       [ 83%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_backend.py::test_lstsq PASSED                        [ 83%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_backend.py::test_qr PASSED                           [ 83%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_backend.py::test_prod PASSED                         [ 84%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_backend.py::test_index_update PASSED                 [ 84%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_backend.py::test_sum PASSED                          [ 84%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_backend.py::test_sum_keepdims PASSED                 [ 84%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_backend.py::test_logsumexp PASSED                    [ 85%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_core.py::test_unfold PASSED                          [ 85%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_core.py::test_fold PASSED                            [ 85%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_core.py::test_tensor_to_vec PASSED                   [ 85%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_core.py::test_vec_to_tensor PASSED                   [ 86%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_core.py::test_partial_unfold PASSED                  [ 86%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_core.py::test_partial_fold PASSED                    [ 86%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_core.py::test_partial_tensor_to_vec PASSED           [ 86%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_core.py::test_partial_vec_to_tensor PASSED           [ 86%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_core.py::test_matricize PASSED                       [ 87%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_cp_tensor.py::test_cp_normalize PASSED               [ 87%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_cp_tensor.py::test_cp_flip_sign PASSED               [ 87%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_cp_tensor.py::test_validate_cp_tensor PASSED         [ 87%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_cp_tensor.py::test_cp_to_tensor PASSED               [ 88%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_cp_tensor.py::test_cp_to_tensor_with_weights PASSED  [ 88%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_cp_tensor.py::test_cp_to_unfolded PASSED             [ 88%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_cp_tensor.py::test_cp_to_vec PASSED                  [ 88%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_cp_tensor.py::test_cp_mode_dot PASSED                [ 89%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_cp_tensor.py::test_cp_norm PASSED                    [ 89%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_cp_tensor.py::testvalidate_cp_rank PASSED            [ 89%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_cp_tensor.py::test_cp_lstsq_grad PASSED              [ 89%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_cp_tensor.py::test_cp_copy PASSED                    [ 90%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_cp_tensor.py::test_cp_permute_factors PASSED         [ 90%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_parafac2_tensor.py::test_validate_parafac2_tensor PASSED [ 90%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_parafac2_tensor.py::test_parafac2_normalise PASSED   [ 90%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_parafac2_tensor.py::test_parafac2_to_tensor PASSED   [ 91%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_parafac2_tensor.py::test_parafac2_to_slices PASSED   [ 91%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_parafac2_tensor.py::test_parafac2_to_unfolded PASSED [ 91%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_parafac2_tensor.py::test_parafac2_to_vec PASSED      [ 91%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_parafac2_tensor.py::test_apply_parafac2_projections PASSED [ 92%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_testing.py::test_assert_allclose PASSED              [ 92%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_testing.py::test_assert_equal PASSED                 [ 92%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_testing.py::test_assert_array_almost_equal PASSED    [ 92%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_testing.py::test_assert_array_equal PASSED           [ 93%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_tr_tensor.py::test_validate_tr_tensor PASSED         [ 93%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_tr_tensor.py::test_tr_to_tensor PASSED               [ 93%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_tr_tensor.py::test_validate_tr_rank PASSED           [ 93%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_tt_matrix.py::test_tt_matrix_manipulation PASSED     [ 93%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_tt_tensor.py::test_validate_tt_tensor PASSED         [ 94%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_tt_tensor.py::test_tt_to_tensor PASSED               [ 94%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_tt_tensor.py::test_tt_to_tensor_random PASSED        [ 94%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_tt_tensor.py::test_tt_n_param PASSED                 [ 94%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_tt_tensor.py::test_validate_tt_rank PASSED           [ 95%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_tt_tensor.py::test_pad_tt_rank[1] PASSED             [ 95%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_tt_tensor.py::test_pad_tt_rank[2] PASSED             [ 95%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_tucker_tensor.py::test_validate_tucker_tensor PASSED [ 95%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_tucker_tensor.py::test_tucker_to_tensor PASSED       [ 96%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_tucker_tensor.py::test_tucker_to_unfolded PASSED     [ 96%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_tucker_tensor.py::test_tucker_to_vec PASSED          [ 96%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_tucker_tensor.py::test_tucker_mode_dot PASSED        [ 96%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_tucker_tensor.py::test_n_param_tucker PASSED         [ 97%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_tucker_tensor.py::test_validate_tucker_rank PASSED   [ 97%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_tucker_tensor.py::test_tucker_normalize PASSED       [ 97%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_tucker_tensor.py::test_tucker_copy PASSED            [ 97%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/utils/tests/test_backend_specific.py::test_register_backend_specific_fails_with_added_arguments PASSED [ 98%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/utils/tests/test_backend_specific.py::test_register_backend_specific_fails_with_missing_arguments PASSED [ 98%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/utils/tests/test_backend_specific.py::test_register_backend_specific_fails_with_different_default_value PASSED [ 98%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/utils/tests/test_backend_specific.py::test_register_backend_specific_fails_with_missing_default_value PASSED [ 98%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/utils/tests/test_backend_specific.py::test_register_backend_specific_fails_with_added_default_value PASSED [ 99%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/utils/tests/test_backend_specific.py::test_register_backend_specific_uses_correct_function PASSED [ 99%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/utils/tests/test_backend_specific.py::test_register_backend_specific_fails_with_unavailable_backend PASSED [ 99%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/utils/tests/test_deprecation.py::test_deprecated PASSED         [ 99%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/utils/tests/test_prod.py::test_prod SKIPPED (prod() not\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | implemented before Python v3.8.)                                         [100%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | =============================== warnings summary ===============================\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_cmtf_als.py::test_coupled_matrix_tensor_3d_factorization\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/tensorly-tensorly/tensorly/decomposition/_cmtf_als.py:128: UserWarning: Reached maximum iteration number without convergence.\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |     warnings.warn(\"Reached maximum iteration number without convergence.\")\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tucker.py::test_partial_tucker\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tucker.py::test_tucker\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/tensorly-tensorly/tensorly/decomposition/_tucker.py:156: Warning: No value given for 'rank'. The decomposition will preserve the original size.\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |     warnings.warn(message, Warning)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tucker.py::test_non_negative_tucker[False-svd]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tucker.py::test_non_negative_tucker[False-random]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tucker.py::test_non_negative_tucker[True-svd]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/decomposition/tests/test_tucker.py::test_non_negative_tucker[True-random]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/random/tests/test_base.py::test_random_tucker\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/tests/test_tucker_tensor.py::test_tucker_copy\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/tensorly-tensorly/tensorly/tucker_tensor.py:425: RuntimeWarning: Given only one int for 'rank' for decomposition a tensor of order 3. Using this rank for all modes.\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |     warnings.warn(message, RuntimeWarning)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/random/tests/test_base.py::test_random_cp\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/tensorly-tensorly/tensorly/random/base.py:99: UserWarning: Can only construct orthogonal tensors when rank <= min(shape) but got a tensor with min(shape)=10 < rank=11\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |     \"Can only construct orthogonal tensors when rank <= min(shape) but got \"\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/utils/tests/test_deprecation.py::test_deprecated\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/utils/tests/test_deprecation.py::test_deprecated\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/tensorly-tensorly/tensorly/utils/deprecation.py:61: DeprecationWarning: Deprecated is deprecated, use Dummy instead.\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |     warnings.warn(msg, DeprecationWarning)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/utils/tests/test_deprecation.py::test_deprecated\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | tensorly/utils/tests/test_deprecation.py::test_deprecated\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/tensorly-tensorly/tensorly/utils/deprecation.py:41: DeprecationWarning: fun2 is deprecated, use fun1 instead.\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |     warnings.warn(msg, DeprecationWarning)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/tensorly-tensorly/report.xml -\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | ---------- coverage: platform linux, python 3.7.11-final-0 -----------\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Coverage XML written to file coverage.xml\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | ============================= slowest 10 durations =============================\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | 24.60s call     tensorly/regression/tests/test_cp_plsr.py::test_increasing_variance_random\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | 19.57s call     tensorly/contrib/sparse/tests/test_decomposition.py::test_sparse_parafac\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | 18.23s call     tensorly/contrib/sparse/tests/test_tenalg.py::test_sparse_unfolding_times_cp\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | 3.52s call     tensorly/decomposition/tests/test_parafac2.py::test_parafac2_normalize_factors\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | 2.07s call     tensorly/decomposition/tests/test_tucker.py::test_non_negative_tucker[True-svd]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | 1.97s call     tensorly/decomposition/tests/test_tucker.py::test_non_negative_tucker[True-random]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | 1.86s call     tensorly/decomposition/tests/test_parafac2.py::test_parafac2[False-svd]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | 1.48s call     tensorly/decomposition/tests/test_parafac2.py::test_parafac2[False-random]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | 1.40s call     tensorly/decomposition/tests/test_parafac2.py::test_parafac2[True-svd]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | 1.26s call     tensorly/regression/tests/test_cp_plsr.py::test_increasing_variance_synthetic\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | =========== 412 passed, 3 skipped, 14 warnings in 116.11s (0:01:56) ============\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \u2705  Success - Main Test with backend numpy pytest and coverage\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2] \u2b50 Run Main Check coverage with CodeCov\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udc33  docker cp src=/tmp/act-cache/d4df9f9b-a5cd-4e14-b8fe-de050b87b9d4/act/codecov-codecov-action@v3/ dst=/var/run/act/actions/codecov-codecov-action@v3/\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/codecov-codecov-action@v3/] user=0 workdir=\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | ============================= test session starts ==============================\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | platform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.2.0 -- /opt/hostedtoolcache/Python/3.10.12/x64/bin/python\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | cachedir: .pytest_cache\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/tensorly-tensorly\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | plugins: cov-4.1.0\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | collecting ... collected 415 items\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/contrib/decomposition/tests/test_mps_decomposition_cross.py::test_tensor_train_cross_1 PASSED [  0%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/contrib/decomposition/tests/test_mps_decomposition_cross.py::test_tensor_train_cross_2 PASSED [  0%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/contrib/decomposition/tests/test_mps_decomposition_cross.py::test_tensor_train_cross_3 PASSED [  0%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/contrib/decomposition/tests/test_mps_decomposition_cross.py::test_tensor_train_cross_4 PASSED [  0%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/contrib/decomposition/tests/test_tt_TTOI.py::test_TTOI PASSED   [  1%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v3/dist/index.js] user= workdir=\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/contrib/sparse/tests/test_decomposition.py::test_sparse_parafac PASSED [  1%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Error: Cannot find module 'node:http'\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | Require stack:\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   | - /run/act/actions/codecov-codecov-action@v3/dist/index.js\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |     at Function.Module._resolveFilename (internal/modules/cjs/loader.js:889:15)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |     at Function.Module._load (internal/modules/cjs/loader.js:745:27)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |     at Module.require (internal/modules/cjs/loader.js:961:19)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |     at require (internal/modules/cjs/helpers.js:92:18)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |     at /run/act/actions/codecov-codecov-action@v3/webpack:/codecov-action/external node-commonjs \"node:http\":1:1\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |     at /run/act/actions/codecov-codecov-action@v3/dist/index.js:24630:3\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |     at Object.<anonymous> (/run/act/actions/codecov-codecov-action@v3/dist/index.js:24633:12)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |     at Module._compile (internal/modules/cjs/loader.js:1072:14)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |     at Object.Module._extensions..js (internal/modules/cjs/loader.js:1101:10)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   |     at Module.load (internal/modules/cjs/loader.js:937:32)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2]   \u274c  Failure - Main Check coverage with CodeCov\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2] exitcode '1': failure\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/contrib/sparse/tests/test_tenalg.py::test_sparse_unfolding_times_cp PASSED [  1%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/datasets/tests/test_imports.py::test_IL2data PASSED             [  1%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/datasets/tests/test_imports.py::test_COVID19_data PASSED        [  2%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/datasets/tests/test_imports.py::test_indian_pines PASSED        [  2%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/datasets/tests/test_imports.py::test_kinetic PASSED             [  2%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/datasets/tests/test_synthetic.py::test_gen_image PASSED         [  2%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cmtf_als.py::test_coupled_matrix_tensor_3d_factorization PASSED [  3%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_nonnegative PASSED [  3%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_l1 PASSED [  3%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_l2 PASSED [  3%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_squared_l2 PASSED [  4%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_monotonicity PASSED [  4%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_simplex PASSED [  4%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_normalize PASSED [  4%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_soft_sparsity PASSED [  5%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_unimodality PASSED [  5%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_normalized_sparsity PASSED [  5%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_hard_sparsity PASSED [  5%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_constrained_parafac.py::test_constrained_parafac_smoothness PASSED [  6%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-svd-1-1-True-True] PASSED [  6%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-svd-1-1-True-False] PASSED [  6%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-svd-1-1-False-True] PASSED [  6%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-svd-1-1-False-False] PASSED [  6%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-svd-3-4-True-True] PASSED [  7%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-svd-3-4-True-False] PASSED [  7%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-svd-3-4-False-True] PASSED [  7%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-svd-3-4-False-False] PASSED [  7%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-random-1-1-True-True] PASSED [  8%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-random-1-1-True-False] PASSED [  8%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-random-1-1-False-True] PASSED [  8%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-random-1-1-False-False] PASSED [  8%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-random-3-4-True-True] PASSED [  9%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-random-3-4-True-False] PASSED [  9%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-random-3-4-False-True] PASSED [  9%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-False-random-3-4-False-False] PASSED [  9%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-svd-1-1-True-True] PASSED [ 10%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-svd-1-1-True-False] PASSED [ 10%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-svd-1-1-False-True] PASSED [ 10%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-svd-1-1-False-False] PASSED [ 10%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-svd-3-4-True-True] PASSED [ 11%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-svd-3-4-True-False] PASSED [ 11%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-svd-3-4-False-True] PASSED [ 11%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-svd-3-4-False-False] PASSED [ 11%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-random-1-1-True-True] PASSED [ 12%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-random-1-1-True-False] PASSED [ 12%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-random-1-1-False-True] PASSED [ 12%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-random-1-1-False-False] PASSED [ 12%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-random-3-4-True-True] PASSED [ 13%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-random-3-4-True-False] PASSED [ 13%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-random-3-4-False-True] PASSED [ 13%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1-True-random-3-4-False-False] PASSED [ 13%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-svd-1-1-True-True] PASSED [ 13%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-svd-1-1-True-False] PASSED [ 14%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-svd-1-1-False-True] PASSED [ 14%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-svd-1-1-False-False] PASSED [ 14%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-svd-3-4-True-True] PASSED [ 14%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-svd-3-4-True-False] PASSED [ 15%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-svd-3-4-False-True] PASSED [ 15%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-svd-3-4-False-False] PASSED [ 15%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-random-1-1-True-True] PASSED [ 15%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-random-1-1-True-False] PASSED [ 16%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-random-1-1-False-True] PASSED [ 16%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-random-1-1-False-False] PASSED [ 16%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-random-3-4-True-True] PASSED [ 16%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-random-3-4-True-False] PASSED [ 17%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-random-3-4-False-True] PASSED [ 17%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-False-random-3-4-False-False] PASSED [ 17%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-svd-1-1-True-True] PASSED [ 17%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-svd-1-1-True-False] PASSED [ 18%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-svd-1-1-False-True] PASSED [ 18%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-svd-1-1-False-False] PASSED [ 18%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-svd-3-4-True-True] PASSED [ 18%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-svd-3-4-True-False] PASSED [ 19%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-svd-3-4-False-True] PASSED [ 19%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-svd-3-4-False-False] PASSED [ 19%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-random-1-1-True-True] PASSED [ 19%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-random-1-1-True-False] PASSED [ 20%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-random-1-1-False-True] PASSED [ 20%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-random-1-1-False-False] PASSED [ 20%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-random-3-4-True-True] PASSED [ 20%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-random-3-4-True-False] PASSED [ 20%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-random-3-4-False-True] PASSED [ 21%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[True-1234-True-random-3-4-False-False] PASSED [ 21%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-svd-1-1-True-True] PASSED [ 21%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-svd-1-1-True-False] PASSED [ 21%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-svd-1-1-False-True] PASSED [ 22%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-svd-1-1-False-False] PASSED [ 22%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-svd-3-4-True-True] PASSED [ 22%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-svd-3-4-True-False] PASSED [ 22%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-svd-3-4-False-True] PASSED [ 23%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-svd-3-4-False-False] PASSED [ 23%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-random-1-1-True-True] PASSED [ 23%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-random-1-1-True-False] PASSED [ 23%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-random-1-1-False-True] PASSED [ 24%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-random-1-1-False-False] PASSED [ 24%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-random-3-4-True-True] PASSED [ 24%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-random-3-4-True-False] PASSED [ 24%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-random-3-4-False-True] PASSED [ 25%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-False-random-3-4-False-False] PASSED [ 25%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-svd-1-1-True-True] PASSED [ 25%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-svd-1-1-True-False] PASSED [ 25%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-svd-1-1-False-True] PASSED [ 26%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-svd-1-1-False-False] PASSED [ 26%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-svd-3-4-True-True] PASSED [ 26%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-svd-3-4-True-False] PASSED [ 26%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-svd-3-4-False-True] PASSED [ 26%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-svd-3-4-False-False] PASSED [ 27%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-random-1-1-True-True] PASSED [ 27%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-random-1-1-True-False] PASSED [ 27%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-random-1-1-False-True] PASSED [ 27%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-random-1-1-False-False] PASSED [ 28%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-random-3-4-True-True] PASSED [ 28%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-random-3-4-True-False] PASSED [ 28%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-random-3-4-False-True] PASSED [ 28%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1-True-random-3-4-False-False] PASSED [ 29%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-svd-1-1-True-True] PASSED [ 29%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-svd-1-1-True-False] PASSED [ 29%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-svd-1-1-False-True] PASSED [ 29%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-svd-1-1-False-False] PASSED [ 30%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-svd-3-4-True-True] PASSED [ 30%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-svd-3-4-True-False] PASSED [ 30%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-svd-3-4-False-True] PASSED [ 30%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-svd-3-4-False-False] PASSED [ 31%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-random-1-1-True-True] PASSED [ 31%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-random-1-1-True-False] PASSED [ 31%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-random-1-1-False-True] PASSED [ 31%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-random-1-1-False-False] PASSED [ 32%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-random-3-4-True-True] PASSED [ 32%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-random-3-4-True-False] PASSED [ 32%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-random-3-4-False-True] PASSED [ 32%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-False-random-3-4-False-False] PASSED [ 33%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-svd-1-1-True-True] PASSED [ 33%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-svd-1-1-True-False] PASSED [ 33%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-svd-1-1-False-True] PASSED [ 33%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-svd-1-1-False-False] PASSED [ 33%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-svd-3-4-True-True] PASSED [ 34%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-svd-3-4-True-False] PASSED [ 34%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-svd-3-4-False-True] PASSED [ 34%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-svd-3-4-False-False] PASSED [ 34%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-random-1-1-True-True] PASSED [ 35%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-random-1-1-True-False] PASSED [ 35%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-random-1-1-False-True] PASSED [ 35%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-random-1-1-False-False] PASSED [ 35%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-random-3-4-True-True] PASSED [ 36%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-random-3-4-True-False] PASSED [ 36%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-random-3-4-False-True] PASSED [ 36%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac[False-1234-True-random-3-4-False-False] PASSED [ 36%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_masked_parafac[True] PASSED [ 37%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_masked_parafac[False] PASSED [ 37%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_parafac_linesearch PASSED  [ 37%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-1-False-svd-1-1] PASSED [ 37%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-1-False-svd-3-3] PASSED [ 38%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-1-False-random-1-1] PASSED [ 38%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-1-False-random-3-3] PASSED [ 38%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-1-True-svd-1-1] PASSED [ 38%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-1-True-svd-3-3] PASSED [ 39%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-1-True-random-1-1] PASSED [ 39%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-1-True-random-3-3] PASSED [ 39%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-2-False-svd-1-1] PASSED [ 39%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-2-False-svd-3-3] PASSED [ 40%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-2-False-random-1-1] PASSED [ 40%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-2-False-random-3-3] PASSED [ 40%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-2-True-svd-1-1] PASSED [ 40%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-2-True-svd-3-3] PASSED [ 40%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-2-True-random-1-1] PASSED [ 41%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[True-2-True-random-3-3] PASSED [ 41%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-1-False-svd-1-1] PASSED [ 41%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-1-False-svd-3-3] PASSED [ 41%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-1-False-random-1-1] PASSED [ 42%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-1-False-random-3-3] PASSED [ 42%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-1-True-svd-1-1] PASSED [ 42%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-1-True-svd-3-3] PASSED [ 42%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-1-True-random-1-1] PASSED [ 43%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-1-True-random-3-3] PASSED [ 43%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-2-False-svd-1-1] PASSED [ 43%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-2-False-svd-3-3] PASSED [ 43%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-2-False-random-1-1] PASSED [ 44%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-2-False-random-3-3] PASSED [ 44%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-2-True-svd-1-1] PASSED [ 44%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-2-True-svd-3-3] PASSED [ 44%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-2-True-random-1-1] PASSED [ 45%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac[False-2-True-random-3-3] PASSED [ 45%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_initialize_nn_cp PASSED    [ 45%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_non_negative_parafac_hals_one_unconstrained PASSED [ 45%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_sample_khatri_rao PASSED   [ 46%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp.py::test_randomised_parafac PASSED  [ 46%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cp_power.py::test_parafac_power_iteration PASSED [ 46%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_parafac2.py::test_parafac2[True-random] PASSED [ 46%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_parafac2.py::test_parafac2[True-svd] PASSED [ 46%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_parafac2.py::test_parafac2[False-random] PASSED [ 47%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_parafac2.py::test_parafac2[False-svd] PASSED [ 47%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_parafac2.py::test_parafac2_nn PASSED   [ 47%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_parafac2.py::test_parafac2_slice_and_tensor_input PASSED [ 47%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_parafac2.py::test_parafac2_normalize_factors PASSED [ 48%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_parafac2.py::test_parafac2_init_valid PASSED [ 48%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_parafac2.py::test_parafac2_init_error PASSED [ 48%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_parafac2.py::test_parafac2_to_tensor PASSED [ 48%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_robust_decomposition.py::test_RPCA PASSED [ 49%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_symmetric_cp.py::test_symmetric_parafac_power_iteration PASSED [ 49%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tr_decomposition.py::test_tensor_ring PASSED [ 49%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tr_decomposition.py::test_tensor_ring_mode PASSED [ 49%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tr_decomposition.py::test_tensor_ring_als[1-lstsq-1e-07-tensor_shape0-rank0] PASSED [ 50%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tr_decomposition.py::test_tensor_ring_als[1-lstsq-1e-07-tensor_shape1-rank1] PASSED [ 50%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tr_decomposition.py::test_tensor_ring_als[1-normal_eq-0.001-tensor_shape0-rank0] PASSED [ 50%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tr_decomposition.py::test_tensor_ring_als[1-normal_eq-0.001-tensor_shape1-rank1] PASSED [ 50%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tr_decomposition.py::test_tensor_ring_als[1234-lstsq-1e-07-tensor_shape0-rank0] PASSED [ 51%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tr_decomposition.py::test_tensor_ring_als[1234-lstsq-1e-07-tensor_shape1-rank1] PASSED [ 51%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tr_decomposition.py::test_tensor_ring_als[1234-normal_eq-0.001-tensor_shape0-rank0] PASSED [ 51%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tr_decomposition.py::test_tensor_ring_als[1234-normal_eq-0.001-tensor_shape1-rank1] PASSED [ 51%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tt_decomposition.py::test_tensor_train PASSED [ 52%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tt_decomposition.py::test_tensor_train_matrix PASSED [ 52%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tucker.py::test_partial_tucker PASSED  [ 52%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tucker.py::test_tucker PASSED          [ 52%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tucker.py::test_masked_tucker PASSED   [ 53%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tucker.py::test_non_negative_tucker[False-svd] PASSED [ 53%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tucker.py::test_non_negative_tucker[False-random] PASSED [ 53%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tucker.py::test_non_negative_tucker[True-svd] PASSED [ 53%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-2] \ud83c\udfc1  Job failed\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tucker.py::test_non_negative_tucker[True-random] PASSED [ 53%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_entropy.py::test_vonneumann_entropy_pure_state PASSED [ 54%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_entropy.py::test_tt_vonneumann_entropy_pure_state PASSED [ 54%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_entropy.py::test_cp_vonneumann_entropy_pure_state PASSED [ 54%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_entropy.py::test_vonneumann_entropy_mixed_state PASSED [ 54%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_entropy.py::test_tt_vonneumann_entropy_mixed_state PASSED [ 55%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_entropy.py::test_cp_vonneumann_entropy_mixed_state PASSED [ 55%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[1-1-True] PASSED [ 55%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[1-1-False] PASSED [ 55%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[1-3-True] PASSED [ 56%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[1-3-False] PASSED [ 56%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[1-5-True] PASSED [ 56%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[1-5-False] PASSED [ 56%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[3-1-True] PASSED [ 57%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[3-1-False] PASSED [ 57%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[3-3-True] PASSED [ 57%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[3-3-False] PASSED [ 57%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[3-5-True] PASSED [ 58%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[3-5-False] PASSED [ 58%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[5-1-True] PASSED [ 58%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[5-1-False] PASSED [ 58%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[5-3-True] PASSED [ 59%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[5-3-False] PASSED [ 59%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[5-5-True] PASSED [ 59%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[5-5-False] PASSED [ 59%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[10-1-True] PASSED [ 60%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[10-1-False] PASSED [ 60%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[10-3-True] PASSED [ 60%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[10-3-False] PASSED [ 60%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[10-5-True] PASSED [ 60%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[10-5-False] PASSED [ 61%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[100-1-True] PASSED [ 61%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[100-1-False] PASSED [ 61%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[100-3-True] PASSED [ 61%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[100-3-False] PASSED [ 62%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[100-5-True] PASSED [ 62%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_factors.py::test_congruence_coefficient[100-5-False] PASSED [ 62%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_regression.py::test_MSE PASSED               [ 62%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_regression.py::test_RMSE PASSED              [ 63%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_regression.py::test_R2_score PASSED          [ 63%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_regression.py::test_correlation PASSED       [ 63%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/metrics/tests/test_similarity.py::test_correlation_index PASSED [ 63%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/random/tests/test_base.py::test_check_random_state PASSED       [ 64%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/random/tests/test_base.py::test_random_cp PASSED                [ 64%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/random/tests/test_base.py::test_random_tucker PASSED            [ 64%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/random/tests/test_base.py::test_random_tt PASSED                [ 64%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/random/tests/test_base.py::test_random_tr PASSED                [ 65%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_transform PASSED         [ 65%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_factor_normality PASSED  [ 65%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_factor_orthogonality PASSED [ 65%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_consistent_components PASSED [ 66%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[1-2] PASSED [ 66%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[1-3] PASSED [ 66%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[1-4] PASSED [ 66%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[1-5] PASSED [ 66%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[2-2] PASSED [ 67%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[2-3] PASSED [ 67%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[2-4] PASSED [ 67%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[2-5] PASSED [ 67%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[4-2] PASSED [ 68%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[4-3] PASSED [ 68%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[4-4] PASSED [ 68%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_dimension_compatibility[4-5] PASSED [ 68%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_zero_covariance_x PASSED [ 69%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_decomposition_accuracy[1-3] PASSED [ 69%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_decomposition_accuracy[1-4] PASSED [ 69%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_decomposition_accuracy[1-5] PASSED [ 69%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_decomposition_accuracy[2-3] PASSED [ 70%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_decomposition_accuracy[2-4] PASSED [ 70%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_decomposition_accuracy[2-5] PASSED [ 70%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_decomposition_accuracy[4-3] PASSED [ 70%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_decomposition_accuracy[4-4] PASSED [ 71%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_decomposition_accuracy[4-5] PASSED [ 71%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_reconstruction_x PASSED  [ 71%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_optimized_rand_covariance PASSED [ 71%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_optimized_covariance[n_latent0] PASSED [ 72%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_optimized_covariance[n_latent1] PASSED [ 72%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_optimized_covariance[n_latent2] PASSED [ 72%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_optimized_covariance[n_latent3] PASSED [ 72%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_increasing_variance_random PASSED [ 73%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_plsr.py::test_increasing_variance_synthetic PASSED [ 73%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_cp_regression.py::test_CPRegressor PASSED [ 73%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/regression/tests/test_tucker_regression.py::test_TuckerRegressor PASSED [ 73%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_batched_tensordot.py::test_batched_tensordot PASSED [ 73%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_generalised_inner_product.py::test_inner PASSED [ 74%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_khatri_rao.py::test_khatri_rao PASSED         [ 74%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_kronecker.py::test_kronecker PASSED           [ 74%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_n_mode_product.py::test_mode_dot PASSED       [ 74%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_n_mode_product.py::test_multi_mode_dot PASSED [ 75%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_outer_product.py::test_outer_product PASSED   [ 75%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_outer_product.py::test_batched_outer_product PASSED [ 75%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_proximal.py::test_smoothness PASSED           [ 75%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_proximal.py::test_hard_thresholding PASSED    [ 76%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_proximal.py::test_soft_sparsity PASSED        [ 76%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_proximal.py::test_simplex PASSED              [ 76%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_proximal.py::test_normalized_sparsity PASSED  [ 76%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_proximal.py::test_monotonicity PASSED         [ 77%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_proximal.py::test_unimodality PASSED          [ 77%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_proximal.py::test_l2_prox PASSED              [ 77%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_proximal.py::test_squared_l2_prox PASSED      [ 77%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_proximal.py::test_soft_thresholding PASSED    [ 78%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_proximal.py::test_svd_thresholding PASSED     [ 78%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_proximal.py::test_procrustes PASSED           [ 78%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_proximal.py::test_hals_nnls PASSED            [ 78%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_proximal.py::test_fista PASSED                [ 79%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_proximal.py::test_admm PASSED                 [ 79%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_proximal.py::test_active_set_nnls PASSED      [ 79%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_tenalg_utils.py::test_validate_contraction_modes PASSED [ 79%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tenalg/tests/test_unfolding_dot_khatri_rao.py::test_unfolding_dot_khatri_rao PASSED [ 80%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_backend.py::test_set_backend SKIPPED (could not\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | import 'torch': No module named 'torch')                                 [ 80%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_backend.py::test_set_backend_local_threadsafe SKIPPED [ 80%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_backend.py::test_backend_and_tensorly_module_attributes PASSED [ 80%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_backend.py::test_tensor_creation PASSED              [ 80%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_backend.py::test_svd_time PASSED                     [ 81%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_backend.py::test_svd PASSED                          [ 81%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_backend.py::test_randomized_range_finder PASSED      [ 81%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_backend.py::test_shape PASSED                        [ 81%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_backend.py::test_ndim PASSED                         [ 82%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_backend.py::test_norm PASSED                         [ 82%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_backend.py::test_clip PASSED                         [ 82%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_backend.py::test_clips_all_negative_tensor_correctly PASSED [ 82%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_backend.py::test_where PASSED                        [ 83%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_backend.py::test_matmul PASSED                       [ 83%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_backend.py::test_lstsq PASSED                        [ 83%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_backend.py::test_qr PASSED                           [ 83%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_backend.py::test_prod PASSED                         [ 84%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_backend.py::test_index_update PASSED                 [ 84%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_backend.py::test_sum PASSED                          [ 84%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_backend.py::test_sum_keepdims PASSED                 [ 84%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_backend.py::test_logsumexp PASSED                    [ 85%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_core.py::test_unfold PASSED                          [ 85%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_core.py::test_fold PASSED                            [ 85%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_core.py::test_tensor_to_vec PASSED                   [ 85%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_core.py::test_vec_to_tensor PASSED                   [ 86%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_core.py::test_partial_unfold PASSED                  [ 86%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_core.py::test_partial_fold PASSED                    [ 86%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_core.py::test_partial_tensor_to_vec PASSED           [ 86%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_core.py::test_partial_vec_to_tensor PASSED           [ 86%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_core.py::test_matricize PASSED                       [ 87%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_cp_tensor.py::test_cp_normalize PASSED               [ 87%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_cp_tensor.py::test_cp_flip_sign PASSED               [ 87%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_cp_tensor.py::test_validate_cp_tensor PASSED         [ 87%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_cp_tensor.py::test_cp_to_tensor PASSED               [ 88%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_cp_tensor.py::test_cp_to_tensor_with_weights PASSED  [ 88%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_cp_tensor.py::test_cp_to_unfolded PASSED             [ 88%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_cp_tensor.py::test_cp_to_vec PASSED                  [ 88%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_cp_tensor.py::test_cp_mode_dot PASSED                [ 89%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_cp_tensor.py::test_cp_norm PASSED                    [ 89%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_cp_tensor.py::testvalidate_cp_rank PASSED            [ 89%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_cp_tensor.py::test_cp_lstsq_grad PASSED              [ 89%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_cp_tensor.py::test_cp_copy PASSED                    [ 90%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_cp_tensor.py::test_cp_permute_factors PASSED         [ 90%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_parafac2_tensor.py::test_validate_parafac2_tensor PASSED [ 90%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_parafac2_tensor.py::test_parafac2_normalise PASSED   [ 90%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_parafac2_tensor.py::test_parafac2_to_tensor PASSED   [ 91%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_parafac2_tensor.py::test_parafac2_to_slices PASSED   [ 91%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_parafac2_tensor.py::test_parafac2_to_unfolded PASSED [ 91%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_parafac2_tensor.py::test_parafac2_to_vec PASSED      [ 91%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_parafac2_tensor.py::test_apply_parafac2_projections PASSED [ 92%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_testing.py::test_assert_allclose PASSED              [ 92%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_testing.py::test_assert_equal PASSED                 [ 92%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_testing.py::test_assert_array_almost_equal PASSED    [ 92%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_testing.py::test_assert_array_equal PASSED           [ 93%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_tr_tensor.py::test_validate_tr_tensor PASSED         [ 93%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_tr_tensor.py::test_tr_to_tensor PASSED               [ 93%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_tr_tensor.py::test_validate_tr_rank PASSED           [ 93%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_tt_matrix.py::test_tt_matrix_manipulation PASSED     [ 93%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_tt_tensor.py::test_validate_tt_tensor PASSED         [ 94%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_tt_tensor.py::test_tt_to_tensor PASSED               [ 94%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_tt_tensor.py::test_tt_to_tensor_random PASSED        [ 94%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_tt_tensor.py::test_tt_n_param PASSED                 [ 94%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_tt_tensor.py::test_validate_tt_rank PASSED           [ 95%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_tt_tensor.py::test_pad_tt_rank[1] PASSED             [ 95%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_tt_tensor.py::test_pad_tt_rank[2] PASSED             [ 95%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_tucker_tensor.py::test_validate_tucker_tensor PASSED [ 95%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_tucker_tensor.py::test_tucker_to_tensor PASSED       [ 96%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_tucker_tensor.py::test_tucker_to_unfolded PASSED     [ 96%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_tucker_tensor.py::test_tucker_to_vec PASSED          [ 96%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_tucker_tensor.py::test_tucker_mode_dot PASSED        [ 96%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_tucker_tensor.py::test_n_param_tucker PASSED         [ 97%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_tucker_tensor.py::test_validate_tucker_rank PASSED   [ 97%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_tucker_tensor.py::test_tucker_normalize PASSED       [ 97%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_tucker_tensor.py::test_tucker_copy PASSED            [ 97%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/utils/tests/test_backend_specific.py::test_register_backend_specific_fails_with_added_arguments PASSED [ 98%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/utils/tests/test_backend_specific.py::test_register_backend_specific_fails_with_missing_arguments PASSED [ 98%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/utils/tests/test_backend_specific.py::test_register_backend_specific_fails_with_different_default_value PASSED [ 98%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/utils/tests/test_backend_specific.py::test_register_backend_specific_fails_with_missing_default_value PASSED [ 98%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/utils/tests/test_backend_specific.py::test_register_backend_specific_fails_with_added_default_value PASSED [ 99%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/utils/tests/test_backend_specific.py::test_register_backend_specific_uses_correct_function PASSED [ 99%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/utils/tests/test_backend_specific.py::test_register_backend_specific_fails_with_unavailable_backend PASSED [ 99%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/utils/tests/test_deprecation.py::test_deprecated PASSED         [ 99%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/utils/tests/test_prod.py::test_prod PASSED                      [100%]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | =============================== warnings summary ===============================\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/contrib/sparse/tests/test_decomposition.py: 29 warnings\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/contrib/sparse/tests/test_tenalg.py: 51 warnings\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/sparse/_coo/core.py:261: DeprecationWarning: coords should be an ndarray. This will raise a ValueError in the future.\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |     warnings.warn(\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_cmtf_als.py::test_coupled_matrix_tensor_3d_factorization\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/tensorly-tensorly/tensorly/decomposition/_cmtf_als.py:128: UserWarning: Reached maximum iteration number without convergence.\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |     warnings.warn(\"Reached maximum iteration number without convergence.\")\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tucker.py::test_partial_tucker\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tucker.py::test_tucker\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/tensorly-tensorly/tensorly/decomposition/_tucker.py:156: Warning: No value given for 'rank'. The decomposition will preserve the original size.\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |     warnings.warn(message, Warning)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tucker.py::test_non_negative_tucker[False-svd]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tucker.py::test_non_negative_tucker[False-random]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tucker.py::test_non_negative_tucker[True-svd]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/decomposition/tests/test_tucker.py::test_non_negative_tucker[True-random]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/random/tests/test_base.py::test_random_tucker\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/tests/test_tucker_tensor.py::test_tucker_copy\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/tensorly-tensorly/tensorly/tucker_tensor.py:425: RuntimeWarning: Given only one int for 'rank' for decomposition a tensor of order 3. Using this rank for all modes.\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |     warnings.warn(message, RuntimeWarning)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/random/tests/test_base.py::test_random_cp\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/tensorly-tensorly/tensorly/random/base.py:98: UserWarning: Can only construct orthogonal tensors when rank <= min(shape) but got a tensor with min(shape)=10 < rank=11\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |     warnings.warn(\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/utils/tests/test_deprecation.py::test_deprecated\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/utils/tests/test_deprecation.py::test_deprecated\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/tensorly-tensorly/tensorly/utils/deprecation.py:61: DeprecationWarning: Deprecated is deprecated, use Dummy instead.\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |     warnings.warn(msg, DeprecationWarning)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/utils/tests/test_deprecation.py::test_deprecated\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | tensorly/utils/tests/test_deprecation.py::test_deprecated\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/tensorly-tensorly/tensorly/utils/deprecation.py:41: DeprecationWarning: fun2 is deprecated, use fun1 instead.\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |     warnings.warn(msg, DeprecationWarning)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/tensorly-tensorly/report.xml -\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | ---------- coverage: platform linux, python 3.10.12-final-0 ----------\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Coverage XML written to file coverage.xml\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | \n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | ============================= slowest 10 durations =============================\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | 28.32s call     tensorly/regression/tests/test_cp_plsr.py::test_increasing_variance_random\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | 23.10s call     tensorly/contrib/sparse/tests/test_decomposition.py::test_sparse_parafac\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | 12.26s call     tensorly/contrib/sparse/tests/test_tenalg.py::test_sparse_unfolding_times_cp\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | 3.89s call     tensorly/decomposition/tests/test_tucker.py::test_non_negative_tucker[True-random]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | 3.44s call     tensorly/decomposition/tests/test_parafac2.py::test_parafac2_normalize_factors\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | 3.18s call     tensorly/decomposition/tests/test_tucker.py::test_non_negative_tucker[True-svd]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | 2.29s call     tensorly/regression/tests/test_cp_plsr.py::test_increasing_variance_synthetic\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | 1.71s call     tensorly/decomposition/tests/test_parafac2.py::test_parafac2[True-svd]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | 1.53s call     tensorly/decomposition/tests/test_parafac2.py::test_parafac2[True-random]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | 1.47s call     tensorly/decomposition/tests/test_parafac2.py::test_parafac2[False-random]\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | =========== 413 passed, 2 skipped, 94 warnings in 127.07s (0:02:07) ============\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \u2705  Success - Main Test with backend numpy pytest and coverage\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1] \u2b50 Run Main Check coverage with CodeCov\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udc33  docker cp src=/tmp/act-cache/d4df9f9b-a5cd-4e14-b8fe-de050b87b9d4/act/codecov-codecov-action@v3/ dst=/var/run/act/actions/codecov-codecov-action@v3/\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/codecov-codecov-action@v3/] user=0 workdir=\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v3/dist/index.js] user= workdir=\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Error: Cannot find module 'node:http'\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | Require stack:\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   | - /run/act/actions/codecov-codecov-action@v3/dist/index.js\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |     at Function.Module._resolveFilename (internal/modules/cjs/loader.js:889:15)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |     at Function.Module._load (internal/modules/cjs/loader.js:745:27)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |     at Module.require (internal/modules/cjs/loader.js:961:19)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |     at require (internal/modules/cjs/helpers.js:92:18)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |     at /run/act/actions/codecov-codecov-action@v3/webpack:/codecov-action/external node-commonjs \"node:http\":1:1\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |     at /run/act/actions/codecov-codecov-action@v3/dist/index.js:24630:3\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |     at Object.<anonymous> (/run/act/actions/codecov-codecov-action@v3/dist/index.js:24633:12)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |     at Module._compile (internal/modules/cjs/loader.js:1072:14)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |     at Object.Module._extensions..js (internal/modules/cjs/loader.js:1101:10)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   |     at Module.load (internal/modules/cjs/loader.js:937:32)\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1]   \u274c  Failure - Main Check coverage with CodeCov\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1] exitcode '1': failure\n[ef0aa8f6-26f0-46ed-bc6f-d83868869708/build-1] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'build' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/tensorly-tensorly/.github/workflows/test-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "ef0aa8f6-26f0-46ed-bc6f-d83868869708",
        "build_tool": "pytest",
        "elapsed_time": 588.2042162418365
    }
}