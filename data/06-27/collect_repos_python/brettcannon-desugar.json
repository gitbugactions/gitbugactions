{
    "repository": "brettcannon/desugar",
    "stars": 142,
    "language": "python",
    "size": 135,
    "clone_url": "https://github.com/brettcannon/desugar.git",
    "timestamp": "2023-07-01T15:12:49.188335Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tests.test_builtins.TestGetattr",
                "name": "test_getattribute[getattr0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestGetattr",
                "name": "test_getattribute[getattr1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestGetattr",
                "name": "test_getattribute_overriding[getattr0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestGetattr",
                "name": "test_getattribute_overriding[getattr1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestGetattr",
                "name": "test_getattribute_from_type[getattr0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestGetattr",
                "name": "test_getattribute_from_type[getattr1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestGetattr",
                "name": "test_attr_type[getattr0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestGetattr",
                "name": "test_attr_type[getattr1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestGetattr",
                "name": "test_AttributeError[getattr0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestGetattr",
                "name": "test_AttributeError[getattr1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestGetattr",
                "name": "test_getattr_method[getattr0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestGetattr",
                "name": "test_getattr_method[getattr1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestGetattr",
                "name": "test_default[getattr0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestGetattr",
                "name": "test_default[getattr1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestLen",
                "name": "test_list[len0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestLen",
                "name": "test_list[len1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestLen",
                "name": "test_non_container[len0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestLen",
                "name": "test_non_container[len1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestLen",
                "name": "test_int_subclass[len0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestLen",
                "name": "test_int_subclass[len1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestLen",
                "name": "test_index_on_non_int[len0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestLen",
                "name": "test_index_on_non_int[len1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestLen",
                "name": "test_index_raises_on_non_int[len0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestLen",
                "name": "test_index_raises_on_non_int[len1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestLen",
                "name": "test_index_raises_on_int_subclass[len0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestLen",
                "name": "test_index_raises_on_int_subclass[len1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestLen",
                "name": "test_negative_length[len0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestLen",
                "name": "test_negative_length[len1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestLen",
                "name": "test_negative_index[len0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestLen",
                "name": "test_negative_index[len1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestAny",
                "name": "test_success[any0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestAny",
                "name": "test_success[any1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestAny",
                "name": "test_failure[any0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestAny",
                "name": "test_failure[any1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestAny",
                "name": "test_empty[any0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestAny",
                "name": "test_empty[any1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestAny",
                "name": "test_non_iterable[any0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestAny",
                "name": "test_non_iterable[any1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestObjectGetattribute",
                "name": "test_full_data_descriptor[__getattribute__0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestObjectGetattribute",
                "name": "test_full_data_descriptor[__getattribute__1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestObjectGetattribute",
                "name": "test_set_data_descriptor[__getattribute__0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestObjectGetattribute",
                "name": "test_set_data_descriptor[__getattribute__1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestObjectGetattribute",
                "name": "test_delete_data_descriptor[__getattribute__0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestObjectGetattribute",
                "name": "test_delete_data_descriptor[__getattribute__1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestObjectGetattribute",
                "name": "test_instance_attr[__getattribute__0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestObjectGetattribute",
                "name": "test_instance_attr[__getattribute__1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestObjectGetattribute",
                "name": "test_non_data_descriptor[__getattribute__0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestObjectGetattribute",
                "name": "test_non_data_descriptor[__getattribute__1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestObjectGetattribute",
                "name": "test_non_data_descriptor_subclass[__getattribute__0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestObjectGetattribute",
                "name": "test_non_data_descriptor_subclass[__getattribute__1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestObjectGetattribute",
                "name": "test_class_attr[__getattribute__0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestObjectGetattribute",
                "name": "test_class_attr[__getattribute__1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestObjectGetattribute",
                "name": "test_superclass_attr[__getattribute__0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestObjectGetattribute",
                "name": "test_superclass_attr[__getattribute__1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestObjectGetattribute",
                "name": "test_missing_attr[__getattribute__0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestObjectGetattribute",
                "name": "test_missing_attr[__getattribute__1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestObjectGetattribute",
                "name": "test_bad_attr_name_type[__getattribute__0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestObjectGetattribute",
                "name": "test_bad_attr_name_type[__getattribute__1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestEq",
                "name": "test_same[__eq__0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestEq",
                "name": "test_same[__eq__1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestEq",
                "name": "test_different[__eq__0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestEq",
                "name": "test_different[__eq__1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestNe",
                "name": "test_same[__ne__0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestNe",
                "name": "test_same[__ne__1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestNe",
                "name": "test_different[__ne__0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestNe",
                "name": "test_different[__ne__1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestNe",
                "name": "test_defer_to_eq[__ne__0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestNe",
                "name": "test_defer_to_eq[__ne__1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestNe",
                "name": "test_defer_to_eq_not_implemented[__ne__0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestNe",
                "name": "test_defer_to_eq_not_implemented[__ne__1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestNe",
                "name": "test_coercion_false[__ne__0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestNe",
                "name": "test_coercion_false[__ne__1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestNe",
                "name": "test_coercion_true[__ne__0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestNe",
                "name": "test_coercion_true[__ne__1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestIter",
                "name": "test_iterable[iter0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestIter",
                "name": "test_iterable[iter1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestIter",
                "name": "test_non_iterator[iter0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestIter",
                "name": "test_non_iterator[iter1]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestIter",
                "name": "test_iter_is_None[iter0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestIter",
                "name": "test_iter_is_None[iter1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestIter",
                "name": "test_sequence[iter0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestIter",
                "name": "test_sequence[iter1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestIter",
                "name": "test_sequence_StopIteration[iter0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestIter",
                "name": "test_sequence_StopIteration[iter1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestIter",
                "name": "test_raise_TypeError[iter0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestIter",
                "name": "test_raise_TypeError[iter1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestIter",
                "name": "test_callable[iter0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestIter",
                "name": "test_callable[iter1]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestIter",
                "name": "test_callable_StopIteration[iter0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestIter",
                "name": "test_callable_StopIteration[iter1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestIter",
                "name": "test_uncallable[iter0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestIter",
                "name": "test_uncallable[iter1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestNext",
                "name": "test_next[next0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestNext",
                "name": "test_next[next1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestNext",
                "name": "test_missing_next[next0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestNext",
                "name": "test_missing_next[next1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestNext",
                "name": "test_default[next0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestNext",
                "name": "test_default[next1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestAwait",
                "name": "test_await",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestAwait",
                "name": "test_coroutine",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestAwait",
                "name": "test_not_coroutine",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestAiter",
                "name": "test_iterable",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestAiter",
                "name": "test_non_iterable",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestAiter",
                "name": "test_non_iterator",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestAiter",
                "name": "test_non_async_anext",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestAnext",
                "name": "test_iterator",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestAnext",
                "name": "test_iterator_end",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestAnext",
                "name": "test_non_iterator",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestAnext",
                "name": "test_default",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestList",
                "name": "test_no_arguments[list0]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestList",
                "name": "test_no_arguments[list1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestList",
                "name": "test_iterable[list0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestList",
                "name": "test_iterable[list1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestList",
                "name": "test_None[list0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestList",
                "name": "test_None[list1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestSet",
                "name": "test_no_arguments[set0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestSet",
                "name": "test_no_arguments[set1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestSet",
                "name": "test_iterable[set0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestSet",
                "name": "test_iterable[set1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestSet",
                "name": "test_None[set0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestSet",
                "name": "test_None[set1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestDict",
                "name": "test_no_arguments[dict0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestDict",
                "name": "test_no_arguments[dict1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestDict",
                "name": "test_mapping[dict0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestDict",
                "name": "test_mapping[dict1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestDict",
                "name": "test_iterable[dict0]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestDict",
                "name": "test_iterable[dict1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestDict",
                "name": "test_kwargs[dict0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestDict",
                "name": "test_kwargs[dict1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestDict",
                "name": "test_mapping_and_kwargs[dict0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestDict",
                "name": "test_mapping_and_kwargs[dict1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestDict",
                "name": "test_iterable_and_kwargs[dict0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_builtins.TestDict",
                "name": "test_iterable_and_kwargs[dict1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAdditionInPlace",
                "name": "test_inplace[iadd]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAdditionInPlace",
                "name": "test_inplace[__iadd__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAdditionInPlace",
                "name": "test_lhs_fallback[iadd]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAdditionInPlace",
                "name": "test_lhs_fallback[__iadd__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAdditionInPlace",
                "name": "test_lhs_fallback_from_not_implemented[iadd]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAdditionInPlace",
                "name": "test_lhs_fallback_from_not_implemented[__iadd__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAdditionInPlace",
                "name": "test_rhs_fallback[iadd]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAdditionInPlace",
                "name": "test_rhs_fallback[__iadd__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAdditionInPlace",
                "name": "test_no_methods[iadd]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAdditionInPlace",
                "name": "test_no_methods[__iadd__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAdditionInPlace",
                "name": "test_all_not_implemented[iadd]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAdditionInPlace",
                "name": "test_all_not_implemented[__iadd__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAdditionInPlace",
                "name": "test_inplace_when_others_not_implemented[iadd]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAdditionInPlace",
                "name": "test_inplace_when_others_not_implemented[__iadd__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAdditionInPlace",
                "name": "test_function_name[iadd]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAdditionInPlace",
                "name": "test_function_name[__iadd__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestSubtractionInPlace",
                "name": "test_inplace[isub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestSubtractionInPlace",
                "name": "test_inplace[__isub__]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestSubtractionInPlace",
                "name": "test_lhs_fallback[isub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestSubtractionInPlace",
                "name": "test_lhs_fallback[__isub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestSubtractionInPlace",
                "name": "test_lhs_fallback_from_not_implemented[isub]",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestSubtractionInPlace",
                "name": "test_lhs_fallback_from_not_implemented[__isub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestSubtractionInPlace",
                "name": "test_rhs_fallback[isub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestSubtractionInPlace",
                "name": "test_rhs_fallback[__isub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestSubtractionInPlace",
                "name": "test_no_methods[isub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestSubtractionInPlace",
                "name": "test_no_methods[__isub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestSubtractionInPlace",
                "name": "test_all_not_implemented[isub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestSubtractionInPlace",
                "name": "test_all_not_implemented[__isub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestSubtractionInPlace",
                "name": "test_inplace_when_others_not_implemented[isub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestSubtractionInPlace",
                "name": "test_inplace_when_others_not_implemented[__isub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestSubtractionInPlace",
                "name": "test_function_name[isub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestSubtractionInPlace",
                "name": "test_function_name[__isub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMultiplicationInPlace",
                "name": "test_inplace[imul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMultiplicationInPlace",
                "name": "test_inplace[__imul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMultiplicationInPlace",
                "name": "test_lhs_fallback[imul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMultiplicationInPlace",
                "name": "test_lhs_fallback[__imul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMultiplicationInPlace",
                "name": "test_lhs_fallback_from_not_implemented[imul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMultiplicationInPlace",
                "name": "test_lhs_fallback_from_not_implemented[__imul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMultiplicationInPlace",
                "name": "test_rhs_fallback[imul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMultiplicationInPlace",
                "name": "test_rhs_fallback[__imul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMultiplicationInPlace",
                "name": "test_no_methods[imul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMultiplicationInPlace",
                "name": "test_no_methods[__imul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMultiplicationInPlace",
                "name": "test_all_not_implemented[imul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMultiplicationInPlace",
                "name": "test_all_not_implemented[__imul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMultiplicationInPlace",
                "name": "test_inplace_when_others_not_implemented[imul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMultiplicationInPlace",
                "name": "test_inplace_when_others_not_implemented[__imul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMultiplicationInPlace",
                "name": "test_function_name[imul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMultiplicationInPlace",
                "name": "test_function_name[__imul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMatrixMultiplicationInPlace",
                "name": "test_inplace[imatmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMatrixMultiplicationInPlace",
                "name": "test_inplace[__imatmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMatrixMultiplicationInPlace",
                "name": "test_lhs_fallback[imatmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMatrixMultiplicationInPlace",
                "name": "test_lhs_fallback[__imatmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMatrixMultiplicationInPlace",
                "name": "test_lhs_fallback_from_not_implemented[imatmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMatrixMultiplicationInPlace",
                "name": "test_lhs_fallback_from_not_implemented[__imatmul__]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMatrixMultiplicationInPlace",
                "name": "test_rhs_fallback[imatmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMatrixMultiplicationInPlace",
                "name": "test_rhs_fallback[__imatmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMatrixMultiplicationInPlace",
                "name": "test_no_methods[imatmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMatrixMultiplicationInPlace",
                "name": "test_no_methods[__imatmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMatrixMultiplicationInPlace",
                "name": "test_all_not_implemented[imatmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMatrixMultiplicationInPlace",
                "name": "test_all_not_implemented[__imatmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMatrixMultiplicationInPlace",
                "name": "test_inplace_when_others_not_implemented[imatmul]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMatrixMultiplicationInPlace",
                "name": "test_inplace_when_others_not_implemented[__imatmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMatrixMultiplicationInPlace",
                "name": "test_function_name[imatmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestMatrixMultiplicationInPlace",
                "name": "test_function_name[__imatmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestTrueDivisionInPlace",
                "name": "test_inplace[itruediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestTrueDivisionInPlace",
                "name": "test_inplace[__itruediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestTrueDivisionInPlace",
                "name": "test_lhs_fallback[itruediv]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestTrueDivisionInPlace",
                "name": "test_lhs_fallback[__itruediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestTrueDivisionInPlace",
                "name": "test_lhs_fallback_from_not_implemented[itruediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestTrueDivisionInPlace",
                "name": "test_lhs_fallback_from_not_implemented[__itruediv__]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestTrueDivisionInPlace",
                "name": "test_rhs_fallback[itruediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestTrueDivisionInPlace",
                "name": "test_rhs_fallback[__itruediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestTrueDivisionInPlace",
                "name": "test_no_methods[itruediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestTrueDivisionInPlace",
                "name": "test_no_methods[__itruediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestTrueDivisionInPlace",
                "name": "test_all_not_implemented[itruediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestTrueDivisionInPlace",
                "name": "test_all_not_implemented[__itruediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestTrueDivisionInPlace",
                "name": "test_inplace_when_others_not_implemented[itruediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestTrueDivisionInPlace",
                "name": "test_inplace_when_others_not_implemented[__itruediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestTrueDivisionInPlace",
                "name": "test_function_name[itruediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestTrueDivisionInPlace",
                "name": "test_function_name[__itruediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestFloorDivisionInPlace",
                "name": "test_inplace[ifloordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestFloorDivisionInPlace",
                "name": "test_inplace[__ifloordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestFloorDivisionInPlace",
                "name": "test_lhs_fallback[ifloordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestFloorDivisionInPlace",
                "name": "test_lhs_fallback[__ifloordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestFloorDivisionInPlace",
                "name": "test_lhs_fallback_from_not_implemented[ifloordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestFloorDivisionInPlace",
                "name": "test_lhs_fallback_from_not_implemented[__ifloordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestFloorDivisionInPlace",
                "name": "test_rhs_fallback[ifloordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestFloorDivisionInPlace",
                "name": "test_rhs_fallback[__ifloordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestFloorDivisionInPlace",
                "name": "test_no_methods[ifloordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestFloorDivisionInPlace",
                "name": "test_no_methods[__ifloordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestFloorDivisionInPlace",
                "name": "test_all_not_implemented[ifloordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestFloorDivisionInPlace",
                "name": "test_all_not_implemented[__ifloordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestFloorDivisionInPlace",
                "name": "test_inplace_when_others_not_implemented[ifloordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestFloorDivisionInPlace",
                "name": "test_inplace_when_others_not_implemented[__ifloordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestFloorDivisionInPlace",
                "name": "test_function_name[ifloordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestFloorDivisionInPlace",
                "name": "test_function_name[__ifloordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestModuloInPlace",
                "name": "test_inplace[imod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestModuloInPlace",
                "name": "test_inplace[__imod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestModuloInPlace",
                "name": "test_lhs_fallback[imod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestModuloInPlace",
                "name": "test_lhs_fallback[__imod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestModuloInPlace",
                "name": "test_lhs_fallback_from_not_implemented[imod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestModuloInPlace",
                "name": "test_lhs_fallback_from_not_implemented[__imod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestModuloInPlace",
                "name": "test_rhs_fallback[imod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestModuloInPlace",
                "name": "test_rhs_fallback[__imod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestModuloInPlace",
                "name": "test_no_methods[imod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestModuloInPlace",
                "name": "test_no_methods[__imod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestModuloInPlace",
                "name": "test_all_not_implemented[imod]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestModuloInPlace",
                "name": "test_all_not_implemented[__imod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestModuloInPlace",
                "name": "test_inplace_when_others_not_implemented[imod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestModuloInPlace",
                "name": "test_inplace_when_others_not_implemented[__imod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestModuloInPlace",
                "name": "test_function_name[imod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestModuloInPlace",
                "name": "test_function_name[__imod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestPowerInPlace",
                "name": "test_inplace[ipow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestPowerInPlace",
                "name": "test_inplace[__ipow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestPowerInPlace",
                "name": "test_lhs_fallback[ipow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestPowerInPlace",
                "name": "test_lhs_fallback[__ipow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestPowerInPlace",
                "name": "test_lhs_fallback_from_not_implemented[ipow]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "CPython's **= implementation does not call __pow__",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestPowerInPlace",
                "name": "test_lhs_fallback_from_not_implemented[__ipow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestPowerInPlace",
                "name": "test_rhs_fallback[ipow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestPowerInPlace",
                "name": "test_rhs_fallback[__ipow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestPowerInPlace",
                "name": "test_no_methods[ipow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestPowerInPlace",
                "name": "test_no_methods[__ipow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestPowerInPlace",
                "name": "test_all_not_implemented[ipow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestPowerInPlace",
                "name": "test_all_not_implemented[__ipow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestPowerInPlace",
                "name": "test_inplace_when_others_not_implemented[ipow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestPowerInPlace",
                "name": "test_inplace_when_others_not_implemented[__ipow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestPowerInPlace",
                "name": "test_function_name[ipow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestPowerInPlace",
                "name": "test_function_name[__ipow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestLeftShiftInPlace",
                "name": "test_inplace[ilshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestLeftShiftInPlace",
                "name": "test_inplace[__ilshift__]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestLeftShiftInPlace",
                "name": "test_lhs_fallback[ilshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestLeftShiftInPlace",
                "name": "test_lhs_fallback[__ilshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestLeftShiftInPlace",
                "name": "test_lhs_fallback_from_not_implemented[ilshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestLeftShiftInPlace",
                "name": "test_lhs_fallback_from_not_implemented[__ilshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestLeftShiftInPlace",
                "name": "test_rhs_fallback[ilshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestLeftShiftInPlace",
                "name": "test_rhs_fallback[__ilshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestLeftShiftInPlace",
                "name": "test_no_methods[ilshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestLeftShiftInPlace",
                "name": "test_no_methods[__ilshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestLeftShiftInPlace",
                "name": "test_all_not_implemented[ilshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestLeftShiftInPlace",
                "name": "test_all_not_implemented[__ilshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestLeftShiftInPlace",
                "name": "test_inplace_when_others_not_implemented[ilshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestLeftShiftInPlace",
                "name": "test_inplace_when_others_not_implemented[__ilshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestLeftShiftInPlace",
                "name": "test_function_name[ilshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestLeftShiftInPlace",
                "name": "test_function_name[__ilshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestRightShiftInPlace",
                "name": "test_inplace[irshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestRightShiftInPlace",
                "name": "test_inplace[__irshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestRightShiftInPlace",
                "name": "test_lhs_fallback[irshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestRightShiftInPlace",
                "name": "test_lhs_fallback[__irshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestRightShiftInPlace",
                "name": "test_lhs_fallback_from_not_implemented[irshift]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestRightShiftInPlace",
                "name": "test_lhs_fallback_from_not_implemented[__irshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestRightShiftInPlace",
                "name": "test_rhs_fallback[irshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestRightShiftInPlace",
                "name": "test_rhs_fallback[__irshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestRightShiftInPlace",
                "name": "test_no_methods[irshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestRightShiftInPlace",
                "name": "test_no_methods[__irshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestRightShiftInPlace",
                "name": "test_all_not_implemented[irshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestRightShiftInPlace",
                "name": "test_all_not_implemented[__irshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestRightShiftInPlace",
                "name": "test_inplace_when_others_not_implemented[irshift]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestRightShiftInPlace",
                "name": "test_inplace_when_others_not_implemented[__irshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestRightShiftInPlace",
                "name": "test_function_name[irshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestRightShiftInPlace",
                "name": "test_function_name[__irshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAndInPlace",
                "name": "test_inplace[iand]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAndInPlace",
                "name": "test_inplace[__iand__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAndInPlace",
                "name": "test_lhs_fallback[iand]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAndInPlace",
                "name": "test_lhs_fallback[__iand__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAndInPlace",
                "name": "test_lhs_fallback_from_not_implemented[iand]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAndInPlace",
                "name": "test_lhs_fallback_from_not_implemented[__iand__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAndInPlace",
                "name": "test_rhs_fallback[iand]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAndInPlace",
                "name": "test_rhs_fallback[__iand__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAndInPlace",
                "name": "test_no_methods[iand]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAndInPlace",
                "name": "test_no_methods[__iand__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAndInPlace",
                "name": "test_all_not_implemented[iand]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAndInPlace",
                "name": "test_all_not_implemented[__iand__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAndInPlace",
                "name": "test_inplace_when_others_not_implemented[iand]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAndInPlace",
                "name": "test_inplace_when_others_not_implemented[__iand__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAndInPlace",
                "name": "test_function_name[iand]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestAndInPlace",
                "name": "test_function_name[__iand__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestExclusiveOrInPlace",
                "name": "test_inplace[ixor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestExclusiveOrInPlace",
                "name": "test_inplace[__ixor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestExclusiveOrInPlace",
                "name": "test_lhs_fallback[ixor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestExclusiveOrInPlace",
                "name": "test_lhs_fallback[__ixor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestExclusiveOrInPlace",
                "name": "test_lhs_fallback_from_not_implemented[ixor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestExclusiveOrInPlace",
                "name": "test_lhs_fallback_from_not_implemented[__ixor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestExclusiveOrInPlace",
                "name": "test_rhs_fallback[ixor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestExclusiveOrInPlace",
                "name": "test_rhs_fallback[__ixor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestExclusiveOrInPlace",
                "name": "test_no_methods[ixor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestExclusiveOrInPlace",
                "name": "test_no_methods[__ixor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestExclusiveOrInPlace",
                "name": "test_all_not_implemented[ixor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestExclusiveOrInPlace",
                "name": "test_all_not_implemented[__ixor__]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestExclusiveOrInPlace",
                "name": "test_inplace_when_others_not_implemented[ixor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestExclusiveOrInPlace",
                "name": "test_inplace_when_others_not_implemented[__ixor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestExclusiveOrInPlace",
                "name": "test_function_name[ixor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestExclusiveOrInPlace",
                "name": "test_function_name[__ixor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestOrInPlace",
                "name": "test_inplace[ior]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestOrInPlace",
                "name": "test_inplace[__ior__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestOrInPlace",
                "name": "test_lhs_fallback[ior]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestOrInPlace",
                "name": "test_lhs_fallback[__ior__]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestOrInPlace",
                "name": "test_lhs_fallback_from_not_implemented[ior]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestOrInPlace",
                "name": "test_lhs_fallback_from_not_implemented[__ior__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestOrInPlace",
                "name": "test_rhs_fallback[ior]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestOrInPlace",
                "name": "test_rhs_fallback[__ior__]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestOrInPlace",
                "name": "test_no_methods[ior]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestOrInPlace",
                "name": "test_no_methods[__ior__]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestOrInPlace",
                "name": "test_all_not_implemented[ior]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestOrInPlace",
                "name": "test_all_not_implemented[__ior__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestOrInPlace",
                "name": "test_inplace_when_others_not_implemented[ior]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestOrInPlace",
                "name": "test_inplace_when_others_not_implemented[__ior__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestOrInPlace",
                "name": "test_function_name[ior]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_augmented_arithmetic_assignment.TestOrInPlace",
                "name": "test_function_name[__ior__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_lhs_called[add]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_lhs_called[__add__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_rhs_called[add]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_rhs_called[__add__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_lhs_over_rhs[add]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_lhs_over_rhs[__add__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_rhs_subclass_over_lhs[add]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_rhs_subclass_over_lhs[__add__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_rhs_subclass_with_same_methods[add]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_rhs_subclass_with_same_methods[__add__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_both_subclasses[add]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_both_subclasses[__add__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_rhs_subclass_but_not_implemented[add]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_rhs_subclass_but_not_implemented[__add__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_rhs_not_substituting_for_lhs[add]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_rhs_not_substituting_for_lhs[__add__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_lhs_not_substituting_for_rhs[add]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_lhs_not_substituting_for_rhs[__add__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_lhs_not_implemented[add]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_lhs_not_implemented[__add__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_rhs_not_implemented[add]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_rhs_not_implemented[__add__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_lhs_not_implemented_but_rhs_is[add]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_lhs_not_implemented_but_rhs_is[__add__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_both_sides_not_implemented[add]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_both_sides_not_implemented[__add__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_all_methods_not_implemented_same_type[add]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_all_methods_not_implemented_same_type[__add__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_all_methods_not_implemented_different_types_same_impl[add]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_all_methods_not_implemented_different_types_same_impl[__add__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_all_methods_not_implemented_different_types[add]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_all_methods_not_implemented_different_types[__add__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_function_name[add]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAddition",
                "name": "test_function_name[__add__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_lhs_called[sub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_lhs_called[__sub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_rhs_called[sub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_rhs_called[__sub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_lhs_over_rhs[sub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_lhs_over_rhs[__sub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_rhs_subclass_over_lhs[sub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_rhs_subclass_over_lhs[__sub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_rhs_subclass_with_same_methods[sub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_rhs_subclass_with_same_methods[__sub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_both_subclasses[sub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_both_subclasses[__sub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_rhs_subclass_but_not_implemented[sub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_rhs_subclass_but_not_implemented[__sub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_rhs_not_substituting_for_lhs[sub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_rhs_not_substituting_for_lhs[__sub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_lhs_not_substituting_for_rhs[sub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_lhs_not_substituting_for_rhs[__sub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_lhs_not_implemented[sub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_lhs_not_implemented[__sub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_rhs_not_implemented[sub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_rhs_not_implemented[__sub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_lhs_not_implemented_but_rhs_is[sub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_lhs_not_implemented_but_rhs_is[__sub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_both_sides_not_implemented[sub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_both_sides_not_implemented[__sub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_all_methods_not_implemented_same_type[sub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_all_methods_not_implemented_same_type[__sub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_all_methods_not_implemented_different_types_same_impl[sub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_all_methods_not_implemented_different_types_same_impl[__sub__]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_all_methods_not_implemented_different_types[sub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_all_methods_not_implemented_different_types[__sub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_function_name[sub]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestSubtraction",
                "name": "test_function_name[__sub__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_lhs_called[mul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_lhs_called[__mul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_rhs_called[mul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_rhs_called[__mul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_lhs_over_rhs[mul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_lhs_over_rhs[__mul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_rhs_subclass_over_lhs[mul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_rhs_subclass_over_lhs[__mul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_rhs_subclass_with_same_methods[mul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_rhs_subclass_with_same_methods[__mul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_both_subclasses[mul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_both_subclasses[__mul__]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_rhs_subclass_but_not_implemented[mul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_rhs_subclass_but_not_implemented[__mul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_rhs_not_substituting_for_lhs[mul]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_rhs_not_substituting_for_lhs[__mul__]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_lhs_not_substituting_for_rhs[mul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_lhs_not_substituting_for_rhs[__mul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_lhs_not_implemented[mul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_lhs_not_implemented[__mul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_rhs_not_implemented[mul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_rhs_not_implemented[__mul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_lhs_not_implemented_but_rhs_is[mul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_lhs_not_implemented_but_rhs_is[__mul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_both_sides_not_implemented[mul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_both_sides_not_implemented[__mul__]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_all_methods_not_implemented_same_type[mul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_all_methods_not_implemented_same_type[__mul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_all_methods_not_implemented_different_types_same_impl[mul]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_all_methods_not_implemented_different_types_same_impl[__mul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_all_methods_not_implemented_different_types[mul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_all_methods_not_implemented_different_types[__mul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_function_name[mul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMultiplicaiton",
                "name": "test_function_name[__mul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_lhs_called[matmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_lhs_called[__matmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_rhs_called[matmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_rhs_called[__matmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_lhs_over_rhs[matmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_lhs_over_rhs[__matmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_rhs_subclass_over_lhs[matmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_rhs_subclass_over_lhs[__matmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_rhs_subclass_with_same_methods[matmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_rhs_subclass_with_same_methods[__matmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_both_subclasses[matmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_both_subclasses[__matmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_rhs_subclass_but_not_implemented[matmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_rhs_subclass_but_not_implemented[__matmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_rhs_not_substituting_for_lhs[matmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_rhs_not_substituting_for_lhs[__matmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_lhs_not_substituting_for_rhs[matmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_lhs_not_substituting_for_rhs[__matmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_lhs_not_implemented[matmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_lhs_not_implemented[__matmul__]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_rhs_not_implemented[matmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_rhs_not_implemented[__matmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_lhs_not_implemented_but_rhs_is[matmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_lhs_not_implemented_but_rhs_is[__matmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_both_sides_not_implemented[matmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_both_sides_not_implemented[__matmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_all_methods_not_implemented_same_type[matmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_all_methods_not_implemented_same_type[__matmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_all_methods_not_implemented_different_types_same_impl[matmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_all_methods_not_implemented_different_types_same_impl[__matmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_all_methods_not_implemented_different_types[matmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_all_methods_not_implemented_different_types[__matmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_function_name[matmul]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestMatrixMultiplication",
                "name": "test_function_name[__matmul__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_lhs_called[truediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_lhs_called[__truediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_rhs_called[truediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_rhs_called[__truediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_lhs_over_rhs[truediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_lhs_over_rhs[__truediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_rhs_subclass_over_lhs[truediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_rhs_subclass_over_lhs[__truediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_rhs_subclass_with_same_methods[truediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_rhs_subclass_with_same_methods[__truediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_both_subclasses[truediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_both_subclasses[__truediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_rhs_subclass_but_not_implemented[truediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_rhs_subclass_but_not_implemented[__truediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_rhs_not_substituting_for_lhs[truediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_rhs_not_substituting_for_lhs[__truediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_lhs_not_substituting_for_rhs[truediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_lhs_not_substituting_for_rhs[__truediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_lhs_not_implemented[truediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_lhs_not_implemented[__truediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_rhs_not_implemented[truediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_rhs_not_implemented[__truediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_lhs_not_implemented_but_rhs_is[truediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_lhs_not_implemented_but_rhs_is[__truediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_both_sides_not_implemented[truediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_both_sides_not_implemented[__truediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_all_methods_not_implemented_same_type[truediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_all_methods_not_implemented_same_type[__truediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_all_methods_not_implemented_different_types_same_impl[truediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_all_methods_not_implemented_different_types_same_impl[__truediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_all_methods_not_implemented_different_types[truediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_all_methods_not_implemented_different_types[__truediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_function_name[truediv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestTrueDivision",
                "name": "test_function_name[__truediv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_lhs_called[floordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_lhs_called[__floordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_rhs_called[floordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_rhs_called[__floordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_lhs_over_rhs[floordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_lhs_over_rhs[__floordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_rhs_subclass_over_lhs[floordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_rhs_subclass_over_lhs[__floordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_rhs_subclass_with_same_methods[floordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_rhs_subclass_with_same_methods[__floordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_both_subclasses[floordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_both_subclasses[__floordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_rhs_subclass_but_not_implemented[floordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_rhs_subclass_but_not_implemented[__floordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_rhs_not_substituting_for_lhs[floordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_rhs_not_substituting_for_lhs[__floordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_lhs_not_substituting_for_rhs[floordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_lhs_not_substituting_for_rhs[__floordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_lhs_not_implemented[floordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_lhs_not_implemented[__floordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_rhs_not_implemented[floordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_rhs_not_implemented[__floordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_lhs_not_implemented_but_rhs_is[floordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_lhs_not_implemented_but_rhs_is[__floordiv__]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_both_sides_not_implemented[floordiv]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_both_sides_not_implemented[__floordiv__]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_all_methods_not_implemented_same_type[floordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_all_methods_not_implemented_same_type[__floordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_all_methods_not_implemented_different_types_same_impl[floordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_all_methods_not_implemented_different_types_same_impl[__floordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_all_methods_not_implemented_different_types[floordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_all_methods_not_implemented_different_types[__floordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_function_name[floordiv]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestFloorDivision",
                "name": "test_function_name[__floordiv__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_lhs_called[mod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_lhs_called[__mod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_rhs_called[mod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_rhs_called[__mod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_lhs_over_rhs[mod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_lhs_over_rhs[__mod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_rhs_subclass_over_lhs[mod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_rhs_subclass_over_lhs[__mod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_rhs_subclass_with_same_methods[mod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_rhs_subclass_with_same_methods[__mod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_both_subclasses[mod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_both_subclasses[__mod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_rhs_subclass_but_not_implemented[mod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_rhs_subclass_but_not_implemented[__mod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_rhs_not_substituting_for_lhs[mod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_rhs_not_substituting_for_lhs[__mod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_lhs_not_substituting_for_rhs[mod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_lhs_not_substituting_for_rhs[__mod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_lhs_not_implemented[mod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_lhs_not_implemented[__mod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_rhs_not_implemented[mod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_rhs_not_implemented[__mod__]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_lhs_not_implemented_but_rhs_is[mod]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_lhs_not_implemented_but_rhs_is[__mod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_both_sides_not_implemented[mod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_both_sides_not_implemented[__mod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_all_methods_not_implemented_same_type[mod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_all_methods_not_implemented_same_type[__mod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_all_methods_not_implemented_different_types_same_impl[mod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_all_methods_not_implemented_different_types_same_impl[__mod__]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_all_methods_not_implemented_different_types[mod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_all_methods_not_implemented_different_types[__mod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_function_name[mod]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestModulo",
                "name": "test_function_name[__mod__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_lhs_called[pow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_lhs_called[__pow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_rhs_called[pow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_rhs_called[__pow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_lhs_over_rhs[pow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_lhs_over_rhs[__pow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_rhs_subclass_over_lhs[pow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_rhs_subclass_over_lhs[__pow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_rhs_subclass_with_same_methods[pow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_rhs_subclass_with_same_methods[__pow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_both_subclasses[pow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_both_subclasses[__pow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_rhs_subclass_but_not_implemented[pow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_rhs_subclass_but_not_implemented[__pow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_rhs_not_substituting_for_lhs[pow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_rhs_not_substituting_for_lhs[__pow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_lhs_not_substituting_for_rhs[pow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_lhs_not_substituting_for_rhs[__pow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_lhs_not_implemented[pow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_lhs_not_implemented[__pow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_rhs_not_implemented[pow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_rhs_not_implemented[__pow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_lhs_not_implemented_but_rhs_is[pow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_lhs_not_implemented_but_rhs_is[__pow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_both_sides_not_implemented[pow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_both_sides_not_implemented[__pow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_all_methods_not_implemented_same_type[pow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_all_methods_not_implemented_same_type[__pow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_all_methods_not_implemented_different_types_same_impl[pow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_all_methods_not_implemented_different_types_same_impl[__pow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_all_methods_not_implemented_different_types[pow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_all_methods_not_implemented_different_types[__pow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_function_name[pow]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestPower",
                "name": "test_function_name[__pow__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_lhs_called[lshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_lhs_called[__lshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_rhs_called[lshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_rhs_called[__lshift__]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_lhs_over_rhs[lshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_lhs_over_rhs[__lshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_rhs_subclass_over_lhs[lshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_rhs_subclass_over_lhs[__lshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_rhs_subclass_with_same_methods[lshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_rhs_subclass_with_same_methods[__lshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_both_subclasses[lshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_both_subclasses[__lshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_rhs_subclass_but_not_implemented[lshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_rhs_subclass_but_not_implemented[__lshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_rhs_not_substituting_for_lhs[lshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_rhs_not_substituting_for_lhs[__lshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_lhs_not_substituting_for_rhs[lshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_lhs_not_substituting_for_rhs[__lshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_lhs_not_implemented[lshift]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_lhs_not_implemented[__lshift__]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_rhs_not_implemented[lshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_rhs_not_implemented[__lshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_lhs_not_implemented_but_rhs_is[lshift]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_lhs_not_implemented_but_rhs_is[__lshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_both_sides_not_implemented[lshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_both_sides_not_implemented[__lshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_all_methods_not_implemented_same_type[lshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_all_methods_not_implemented_same_type[__lshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_all_methods_not_implemented_different_types_same_impl[lshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_all_methods_not_implemented_different_types_same_impl[__lshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_all_methods_not_implemented_different_types[lshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_all_methods_not_implemented_different_types[__lshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_function_name[lshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestLeftShift",
                "name": "test_function_name[__lshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_lhs_called[rshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_lhs_called[__rshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_rhs_called[rshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_rhs_called[__rshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_lhs_over_rhs[rshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_lhs_over_rhs[__rshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_rhs_subclass_over_lhs[rshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_rhs_subclass_over_lhs[__rshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_rhs_subclass_with_same_methods[rshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_rhs_subclass_with_same_methods[__rshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_both_subclasses[rshift]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_both_subclasses[__rshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_rhs_subclass_but_not_implemented[rshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_rhs_subclass_but_not_implemented[__rshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_rhs_not_substituting_for_lhs[rshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_rhs_not_substituting_for_lhs[__rshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_lhs_not_substituting_for_rhs[rshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_lhs_not_substituting_for_rhs[__rshift__]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_lhs_not_implemented[rshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_lhs_not_implemented[__rshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_rhs_not_implemented[rshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_rhs_not_implemented[__rshift__]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_lhs_not_implemented_but_rhs_is[rshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_lhs_not_implemented_but_rhs_is[__rshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_both_sides_not_implemented[rshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_both_sides_not_implemented[__rshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_all_methods_not_implemented_same_type[rshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_all_methods_not_implemented_same_type[__rshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_all_methods_not_implemented_different_types_same_impl[rshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_all_methods_not_implemented_different_types_same_impl[__rshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_all_methods_not_implemented_different_types[rshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_all_methods_not_implemented_different_types[__rshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_function_name[rshift]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestRightShift",
                "name": "test_function_name[__rshift__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_lhs_called[and_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_lhs_called[__and__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_rhs_called[and_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_rhs_called[__and__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_lhs_over_rhs[and_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_lhs_over_rhs[__and__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_rhs_subclass_over_lhs[and_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_rhs_subclass_over_lhs[__and__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_rhs_subclass_with_same_methods[and_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_rhs_subclass_with_same_methods[__and__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_both_subclasses[and_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_both_subclasses[__and__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_rhs_subclass_but_not_implemented[and_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_rhs_subclass_but_not_implemented[__and__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_rhs_not_substituting_for_lhs[and_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_rhs_not_substituting_for_lhs[__and__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_lhs_not_substituting_for_rhs[and_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_lhs_not_substituting_for_rhs[__and__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_lhs_not_implemented[and_]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_lhs_not_implemented[__and__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_rhs_not_implemented[and_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_rhs_not_implemented[__and__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_lhs_not_implemented_but_rhs_is[and_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_lhs_not_implemented_but_rhs_is[__and__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_both_sides_not_implemented[and_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_both_sides_not_implemented[__and__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_all_methods_not_implemented_same_type[and_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_all_methods_not_implemented_same_type[__and__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_all_methods_not_implemented_different_types_same_impl[and_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_all_methods_not_implemented_different_types_same_impl[__and__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_all_methods_not_implemented_different_types[and_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_all_methods_not_implemented_different_types[__and__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_function_name[and_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestAnd",
                "name": "test_function_name[__and__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_lhs_called[xor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_lhs_called[__xor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_rhs_called[xor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_rhs_called[__xor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_lhs_over_rhs[xor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_lhs_over_rhs[__xor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_rhs_subclass_over_lhs[xor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_rhs_subclass_over_lhs[__xor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_rhs_subclass_with_same_methods[xor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_rhs_subclass_with_same_methods[__xor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_both_subclasses[xor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_both_subclasses[__xor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_rhs_subclass_but_not_implemented[xor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_rhs_subclass_but_not_implemented[__xor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_rhs_not_substituting_for_lhs[xor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_rhs_not_substituting_for_lhs[__xor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_lhs_not_substituting_for_rhs[xor]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_lhs_not_substituting_for_rhs[__xor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_lhs_not_implemented[xor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_lhs_not_implemented[__xor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_rhs_not_implemented[xor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_rhs_not_implemented[__xor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_lhs_not_implemented_but_rhs_is[xor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_lhs_not_implemented_but_rhs_is[__xor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_both_sides_not_implemented[xor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_both_sides_not_implemented[__xor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_all_methods_not_implemented_same_type[xor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_all_methods_not_implemented_same_type[__xor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_all_methods_not_implemented_different_types_same_impl[xor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_all_methods_not_implemented_different_types_same_impl[__xor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_all_methods_not_implemented_different_types[xor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_all_methods_not_implemented_different_types[__xor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_function_name[xor]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestExclusiveOr",
                "name": "test_function_name[__xor__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_lhs_called[or_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_lhs_called[__or__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_rhs_called[or_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_rhs_called[__or__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_lhs_over_rhs[or_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_lhs_over_rhs[__or__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_rhs_subclass_over_lhs[or_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_rhs_subclass_over_lhs[__or__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_rhs_subclass_with_same_methods[or_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_rhs_subclass_with_same_methods[__or__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_both_subclasses[or_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_both_subclasses[__or__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_rhs_subclass_but_not_implemented[or_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_rhs_subclass_but_not_implemented[__or__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_rhs_not_substituting_for_lhs[or_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_rhs_not_substituting_for_lhs[__or__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_lhs_not_substituting_for_rhs[or_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_lhs_not_substituting_for_rhs[__or__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_lhs_not_implemented[or_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_lhs_not_implemented[__or__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_rhs_not_implemented[or_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_rhs_not_implemented[__or__]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_lhs_not_implemented_but_rhs_is[or_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_lhs_not_implemented_but_rhs_is[__or__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_both_sides_not_implemented[or_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_both_sides_not_implemented[__or__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_all_methods_not_implemented_same_type[or_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_all_methods_not_implemented_same_type[__or__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_all_methods_not_implemented_different_types_same_impl[or_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_all_methods_not_implemented_different_types_same_impl[__or__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_all_methods_not_implemented_different_types[or_]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_all_methods_not_implemented_different_types[__or__]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_function_name[or_]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_binary_arithmetic.TestOr",
                "name": "test_function_name[__or__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestTruth",
                "name": "test_true[truth0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestTruth",
                "name": "test_true[truth1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestTruth",
                "name": "test_false[truth0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestTruth",
                "name": "test_false[truth1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestTruth",
                "name": "test_none[truth0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestTruth",
                "name": "test_none[truth1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestTruth",
                "name": "test___bool__[True-truth0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestTruth",
                "name": "test___bool__[True-truth1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestTruth",
                "name": "test___bool__[False-truth0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestTruth",
                "name": "test___bool__[False-truth1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestTruth",
                "name": "test___bool__not_bool[truth0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestTruth",
                "name": "test___bool__not_bool[truth1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestTruth",
                "name": "test_len[0-False-truth0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestTruth",
                "name": "test_len[0-False-truth1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestTruth",
                "name": "test_len[1-True-truth0]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestTruth",
                "name": "test_len[1-True-truth1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestTruth",
                "name": "test_len[42-True-truth0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestTruth",
                "name": "test_len[42-True-truth1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestTruth",
                "name": "test_true_default[truth0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestTruth",
                "name": "test_true_default[truth1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestNot",
                "name": "test_true[not_0]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestNot",
                "name": "test_true[not_1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestNot",
                "name": "test_false[not_0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestNot",
                "name": "test_false[not_1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestNot",
                "name": "test_conversion[given0-False-not_0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestNot",
                "name": "test_conversion[given0-False-not_1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestNot",
                "name": "test_conversion[given1-True-not_0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_bool.TestNot",
                "name": "test_conversion[given1-True-not_1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_identity_comparisons.TestIs",
                "name": "test_same[is_0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_identity_comparisons.TestIs",
                "name": "test_same[is_1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_identity_comparisons.TestIs",
                "name": "test_different[is_0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_identity_comparisons.TestIs",
                "name": "test_different[is_1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_identity_comparisons.TestIs",
                "name": "test_different_types[is_0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_identity_comparisons.TestIs",
                "name": "test_different_types[is_1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_identity_comparisons.TestIsNot",
                "name": "test_different[is_not0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_identity_comparisons.TestIsNot",
                "name": "test_different[is_not1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_identity_comparisons.TestIsNot",
                "name": "test_same[is_not0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_identity_comparisons.TestIsNot",
                "name": "test_same[is_not1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_identity_comparisons.TestIsNot",
                "name": "test_different_types[is_not0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_identity_comparisons.TestIsNot",
                "name": "test_different_types[is_not1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_membership_testing.TestMembershipTesting",
                "name": "test_non_container[contains]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_membership_testing.TestMembershipTesting",
                "name": "test_non_container[__contains__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_membership_testing.TestMembershipTesting",
                "name": "test_contains[contains]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_membership_testing.TestMembershipTesting",
                "name": "test_contains[__contains__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_membership_testing.TestMembershipTesting",
                "name": "test_contains_non_bool[contains]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_membership_testing.TestMembershipTesting",
                "name": "test_contains_non_bool[__contains__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_membership_testing.TestMembershipTesting",
                "name": "test_contains_none[contains]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_membership_testing.TestMembershipTesting",
                "name": "test_contains_none[__contains__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_membership_testing.TestMembershipTesting",
                "name": "test_iterable_id_success[contains]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_membership_testing.TestMembershipTesting",
                "name": "test_iterable_id_success[__contains__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_membership_testing.TestMembershipTesting",
                "name": "test_iterable_eq_success[contains]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_membership_testing.TestMembershipTesting",
                "name": "test_iterable_eq_success[__contains__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_membership_testing.TestMembershipTesting",
                "name": "test_iterable_failure[contains]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_membership_testing.TestMembershipTesting",
                "name": "test_iterable_failure[__contains__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_membership_testing.TestMembershipTesting",
                "name": "test_iterable_undefined[contains]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_membership_testing.TestMembershipTesting",
                "name": "test_iterable_undefined[__contains__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThan",
                "name": "test_method_only[gt]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThan",
                "name": "test_method_only[__gt__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThan",
                "name": "test_method_first[gt]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThan",
                "name": "test_method_first[__gt__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThan",
                "name": "test_reflected_only[gt]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThan",
                "name": "test_reflected_only[__gt__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThan",
                "name": "test_method_not_implemented[gt]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThan",
                "name": "test_method_not_implemented[__gt__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThan",
                "name": "test_reflection_not_implemented[gt]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThan",
                "name": "test_reflection_not_implemented[__gt__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThan",
                "name": "test_method_then_reflection[gt]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThan",
                "name": "test_method_then_reflection[__gt__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThan",
                "name": "test_method_then_reflection_same_class[gt]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThan",
                "name": "test_method_then_reflection_same_class[__gt__]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThan",
                "name": "test_reflection_then_method_subclasses[gt]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThan",
                "name": "test_reflection_then_method_subclasses[__gt__]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThan",
                "name": "test_function_name[gt]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "only check function names for desugar",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThan",
                "name": "test_function_name[__gt__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestLessThan",
                "name": "test_method_only[le]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestLessThan",
                "name": "test_method_only[__le__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestLessThan",
                "name": "test_method_first[le]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestLessThan",
                "name": "test_method_first[__le__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestLessThan",
                "name": "test_reflected_only[le]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestLessThan",
                "name": "test_reflected_only[__le__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestLessThan",
                "name": "test_method_not_implemented[le]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestLessThan",
                "name": "test_method_not_implemented[__le__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestLessThan",
                "name": "test_reflection_not_implemented[le]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestLessThan",
                "name": "test_reflection_not_implemented[__le__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestLessThan",
                "name": "test_method_then_reflection[le]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestLessThan",
                "name": "test_method_then_reflection[__le__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestLessThan",
                "name": "test_method_then_reflection_same_class[le]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestLessThan",
                "name": "test_method_then_reflection_same_class[__le__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestLessThan",
                "name": "test_reflection_then_method_subclasses[le]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestLessThan",
                "name": "test_reflection_then_method_subclasses[__le__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestLessThan",
                "name": "test_function_name[le]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "only check function names for desugar",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestLessThan",
                "name": "test_function_name[__le__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThanEqual",
                "name": "test_method_only[ge]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThanEqual",
                "name": "test_method_only[__ge__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThanEqual",
                "name": "test_method_first[ge]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThanEqual",
                "name": "test_method_first[__ge__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThanEqual",
                "name": "test_reflected_only[ge]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThanEqual",
                "name": "test_reflected_only[__ge__]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThanEqual",
                "name": "test_method_not_implemented[ge]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThanEqual",
                "name": "test_method_not_implemented[__ge__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThanEqual",
                "name": "test_reflection_not_implemented[ge]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThanEqual",
                "name": "test_reflection_not_implemented[__ge__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThanEqual",
                "name": "test_method_then_reflection[ge]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThanEqual",
                "name": "test_method_then_reflection[__ge__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThanEqual",
                "name": "test_method_then_reflection_same_class[ge]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThanEqual",
                "name": "test_method_then_reflection_same_class[__ge__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThanEqual",
                "name": "test_reflection_then_method_subclasses[ge]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThanEqual",
                "name": "test_reflection_then_method_subclasses[__ge__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThanEqual",
                "name": "test_function_name[ge]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "only check function names for desugar",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestGreaterThanEqual",
                "name": "test_function_name[__ge__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestEquals",
                "name": "test_method_only[eq]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestEquals",
                "name": "test_method_only[__eq__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestEquals",
                "name": "test_method_first[eq]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestEquals",
                "name": "test_method_first[__eq__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestEquals",
                "name": "test_reflected_only[eq]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestEquals",
                "name": "test_reflected_only[__eq__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestEquals",
                "name": "test_method_not_implemented[eq]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestEquals",
                "name": "test_method_not_implemented[__eq__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestEquals",
                "name": "test_reflection_not_implemented[eq]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestEquals",
                "name": "test_reflection_not_implemented[__eq__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestEquals",
                "name": "test_method_then_reflection[eq]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestEquals",
                "name": "test_method_then_reflection[__eq__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestEquals",
                "name": "test_method_then_reflection_same_class[eq]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestEquals",
                "name": "test_method_then_reflection_same_class[__eq__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestEquals",
                "name": "test_reflection_then_method_subclasses[eq]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestEquals",
                "name": "test_reflection_then_method_subclasses[__eq__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestEquals",
                "name": "test_function_name[eq]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "only check function names for desugar",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestEquals",
                "name": "test_function_name[__eq__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestNotEquals",
                "name": "test_method_only[ne]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestNotEquals",
                "name": "test_method_only[__ne__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestNotEquals",
                "name": "test_method_first[ne]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestNotEquals",
                "name": "test_method_first[__ne__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestNotEquals",
                "name": "test_reflected_only[ne]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestNotEquals",
                "name": "test_reflected_only[__ne__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestNotEquals",
                "name": "test_method_not_implemented[ne]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestNotEquals",
                "name": "test_method_not_implemented[__ne__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestNotEquals",
                "name": "test_reflection_not_implemented[ne]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestNotEquals",
                "name": "test_reflection_not_implemented[__ne__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestNotEquals",
                "name": "test_method_then_reflection[ne]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestNotEquals",
                "name": "test_method_then_reflection[__ne__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestNotEquals",
                "name": "test_method_then_reflection_same_class[ne]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestNotEquals",
                "name": "test_method_then_reflection_same_class[__ne__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestNotEquals",
                "name": "test_reflection_then_method_subclasses[ne]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestNotEquals",
                "name": "test_reflection_then_method_subclasses[__ne__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestNotEquals",
                "name": "test_function_name[ne]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "only check function names for desugar",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_rich_comparisons.TestNotEquals",
                "name": "test_function_name[__ne__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_subscription.TestGetitem",
                "name": "test_get[getitem]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_subscription.TestGetitem",
                "name": "test_get[__getitem__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_subscription.TestGetitem",
                "name": "test_no_getitem[getitem]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_subscription.TestGetitem",
                "name": "test_no_getitem[__getitem__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_subscription.TestSetitem",
                "name": "test_set[setitem]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_subscription.TestSetitem",
                "name": "test_set[__setitem__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_subscription.TestSetitem",
                "name": "test_no_setitem[setitem]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_subscription.TestSetitem",
                "name": "test_no_setitem[__setitem__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_subscription.TestDelitem",
                "name": "test_set[delitem]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_subscription.TestDelitem",
                "name": "test_set[__delitem__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_subscription.TestDelitem",
                "name": "test_no_delitem[delitem]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_subscription.TestDelitem",
                "name": "test_no_delitem[__delitem__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_unary_arithmetic.TestNeg",
                "name": "test_called[neg]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_unary_arithmetic.TestNeg",
                "name": "test_called[__neg__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_unary_arithmetic.TestNeg",
                "name": "test_no_method[neg]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_unary_arithmetic.TestNeg",
                "name": "test_no_method[__neg__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_unary_arithmetic.TestPos",
                "name": "test_called[pos]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_unary_arithmetic.TestPos",
                "name": "test_called[__pos__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_unary_arithmetic.TestPos",
                "name": "test_no_method[pos]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_unary_arithmetic.TestPos",
                "name": "test_no_method[__pos__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_unary_arithmetic.TestInvert",
                "name": "test_called[invert]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_unary_arithmetic.TestInvert",
                "name": "test_called[__invert__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_unary_arithmetic.TestInvert",
                "name": "test_no_method[invert]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.operator.test_unary_arithmetic.TestInvert",
                "name": "test_no_method[__invert__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[06d24705-89d9-4086-932e-6f5316702552/format] \ud83d\ude80  Start image=crawlergpt:latest\n[06d24705-89d9-4086-932e-6f5316702552/test  ] \ud83d\ude80  Start image=crawlergpt:latest\n[06d24705-89d9-4086-932e-6f5316702552/build ] \ud83d\ude80  Start image=crawlergpt:latest\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/brettcannon-desugar] user=0 workdir=\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/brettcannon-desugar] user=0 workdir=\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/brettcannon-desugar] user=0 workdir=\n[06d24705-89d9-4086-932e-6f5316702552/format]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[06d24705-89d9-4086-932e-6f5316702552/format] \u2b50 Run Main actions/checkout@v2\n[06d24705-89d9-4086-932e-6f5316702552/format]   \u2705  Success - Main actions/checkout@v2\n[06d24705-89d9-4086-932e-6f5316702552/build ] \u2b50 Run Main actions/checkout@v2\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \u2705  Success - Main actions/checkout@v2\n[06d24705-89d9-4086-932e-6f5316702552/format] \u2b50 Run Main Setup Python\n[06d24705-89d9-4086-932e-6f5316702552/test  ] \u2b50 Run Main actions/checkout@v2\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udc33  docker cp src=/tmp/act-cache/65507294-7818-4821-9b96-5e07c9825a14/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \u2705  Success - Main actions/checkout@v2\n[06d24705-89d9-4086-932e-6f5316702552/build ] \u2b50 Run Main Setup Python\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udc33  docker cp src=/tmp/act-cache/65507294-7818-4821-9b96-5e07c9825a14/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udcac  ::debug::isExplicit: \n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udcac  ::debug::explicit? false\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udcac  ::debug::explicit? true\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udcac  ::debug::explicit? true\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udcac  ::debug::explicit? true\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udcac  ::debug::explicit? true\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udcac  ::debug::explicit? true\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udcac  ::debug::explicit? true\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udcac  ::debug::evaluating 6 versions\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udcac  ::debug::matched: 3.8.11\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Successfully setup CPython (3.8.11)\n[06d24705-89d9-4086-932e-6f5316702552/format]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[06d24705-89d9-4086-932e-6f5316702552/format]   \u2705  Success - Main Setup Python\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[06d24705-89d9-4086-932e-6f5316702552/format]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[06d24705-89d9-4086-932e-6f5316702552/format]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[06d24705-89d9-4086-932e-6f5316702552/test  ] \u2b50 Run Main Setup Python\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udcac  ::debug::isExplicit: \n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udcac  ::debug::explicit? false\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udcac  ::debug::explicit? true\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udcac  ::debug::explicit? true\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udcac  ::debug::explicit? true\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udcac  ::debug::explicit? true\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udcac  ::debug::explicit? true\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udcac  ::debug::explicit? true\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udc33  docker cp src=/tmp/act-cache/65507294-7818-4821-9b96-5e07c9825a14/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udcac  ::debug::matched: 3.8.11\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[06d24705-89d9-4086-932e-6f5316702552/build ]   | Successfully setup CPython (3.8.11)\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \u2705  Success - Main Setup Python\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[06d24705-89d9-4086-932e-6f5316702552/format]   \u2699  ::set-output:: python-version=3.8.11\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[06d24705-89d9-4086-932e-6f5316702552/format]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[06d24705-89d9-4086-932e-6f5316702552/format]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[06d24705-89d9-4086-932e-6f5316702552/format] \u2b50 Run Main Install flit\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \u2699  ::set-output:: python-version=3.8.11\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udcac  ::debug::isExplicit: \n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udcac  ::debug::explicit? false\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udcac  ::debug::explicit? true\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udcac  ::debug::explicit? true\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udcac  ::debug::explicit? true\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udcac  ::debug::explicit? true\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udcac  ::debug::explicit? true\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udcac  ::debug::explicit? true\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udcac  ::debug::matched: 3.8.11\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Successfully setup CPython (3.8.11)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \u2705  Success - Main Setup Python\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[06d24705-89d9-4086-932e-6f5316702552/build ] \u2b50 Run Main Install flit\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \u2699  ::set-output:: python-version=3.8.11\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[06d24705-89d9-4086-932e-6f5316702552/test  ] \u2b50 Run Main Install flit\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting flit\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading flit-3.9.0-py3-none-any.whl (49 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting tomli-w\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading tomli_w-1.0.0-py3-none-any.whl (6.0 kB)\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting requests\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[06d24705-89d9-4086-932e-6f5316702552/build ]   | Collecting flit\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting flit_core>=3.9.0\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading flit_core-3.9.0-py3-none-any.whl (63 kB)\n[06d24705-89d9-4086-932e-6f5316702552/build ]   |   Downloading flit-3.9.0-py3-none-any.whl (49 kB)\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting docutils\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading docutils-0.20.1-py3-none-any.whl (572 kB)\n[06d24705-89d9-4086-932e-6f5316702552/build ]   | Collecting requests\n[06d24705-89d9-4086-932e-6f5316702552/build ]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[06d24705-89d9-4086-932e-6f5316702552/build ]   | Collecting flit_core>=3.9.0\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting urllib3<3,>=1.21.1\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[06d24705-89d9-4086-932e-6f5316702552/build ]   |   Downloading flit_core-3.9.0-py3-none-any.whl (63 kB)\n[06d24705-89d9-4086-932e-6f5316702552/build ]   | Collecting tomli-w\n[06d24705-89d9-4086-932e-6f5316702552/build ]   |   Downloading tomli_w-1.0.0-py3-none-any.whl (6.0 kB)\n[06d24705-89d9-4086-932e-6f5316702552/build ]   | Collecting docutils\n[06d24705-89d9-4086-932e-6f5316702552/build ]   |   Downloading docutils-0.20.1-py3-none-any.whl (572 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting flit\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading flit-3.9.0-py3-none-any.whl (49 kB)\n[06d24705-89d9-4086-932e-6f5316702552/build ]   | Collecting idna<4,>=2.5\n[06d24705-89d9-4086-932e-6f5316702552/build ]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting charset-normalizer<4,>=2\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading charset_normalizer-3.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (195 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting tomli-w\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading tomli_w-1.0.0-py3-none-any.whl (6.0 kB)\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting idna<4,>=2.5\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting docutils\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading docutils-0.20.1-py3-none-any.whl (572 kB)\n[06d24705-89d9-4086-932e-6f5316702552/build ]   | Collecting charset-normalizer<4,>=2\n[06d24705-89d9-4086-932e-6f5316702552/build ]   |   Downloading charset_normalizer-3.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (195 kB)\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting certifi>=2017.4.17\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting flit_core>=3.9.0\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading flit_core-3.9.0-py3-none-any.whl (63 kB)\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Installing collected packages: urllib3, idna, charset-normalizer, certifi, tomli-w, requests, flit-core, docutils, flit\n[06d24705-89d9-4086-932e-6f5316702552/build ]   | Collecting urllib3<3,>=1.21.1\n[06d24705-89d9-4086-932e-6f5316702552/build ]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[06d24705-89d9-4086-932e-6f5316702552/build ]   | Collecting certifi>=2017.4.17\n[06d24705-89d9-4086-932e-6f5316702552/build ]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting requests\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[06d24705-89d9-4086-932e-6f5316702552/build ]   | Installing collected packages: urllib3, idna, charset-normalizer, certifi, tomli-w, requests, flit-core, docutils, flit\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting urllib3<3,>=1.21.1\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting certifi>=2017.4.17\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting charset-normalizer<4,>=2\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading charset_normalizer-3.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (195 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting idna<4,>=2.5\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Installing collected packages: urllib3, idna, charset-normalizer, certifi, tomli-w, requests, flit-core, docutils, flit\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Successfully installed certifi-2023.5.7 charset-normalizer-3.1.0 docutils-0.20.1 flit-3.9.0 flit-core-3.9.0 idna-3.4 requests-2.31.0 tomli-w-1.0.0 urllib3-2.0.3\n[06d24705-89d9-4086-932e-6f5316702552/format]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[06d24705-89d9-4086-932e-6f5316702552/format]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.8.11/x64/bin/python -m pip install --upgrade pip' command.\n[06d24705-89d9-4086-932e-6f5316702552/format]   \u2705  Success - Main Install flit\n[06d24705-89d9-4086-932e-6f5316702552/format] \u2b50 Run Main Install dev dependencies\n[06d24705-89d9-4086-932e-6f5316702552/build ]   | Successfully installed certifi-2023.5.7 charset-normalizer-3.1.0 docutils-0.20.1 flit-3.9.0 flit-core-3.9.0 idna-3.4 requests-2.31.0 tomli-w-1.0.0 urllib3-2.0.3\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[06d24705-89d9-4086-932e-6f5316702552/build ]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[06d24705-89d9-4086-932e-6f5316702552/build ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.8.11/x64/bin/python -m pip install --upgrade pip' command.\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \u2705  Success - Main Install flit\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Successfully installed certifi-2023.5.7 charset-normalizer-3.1.0 docutils-0.20.1 flit-3.9.0 flit-core-3.9.0 idna-3.4 requests-2.31.0 tomli-w-1.0.0 urllib3-2.0.3\n[06d24705-89d9-4086-932e-6f5316702552/build ] \u2b50 Run Main Build sdist and wheel\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.8.11/x64/bin/python -m pip install --upgrade pip' command.\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \u2705  Success - Main Install flit\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[06d24705-89d9-4086-932e-6f5316702552/test  ] \u2b50 Run Main Install test dependencies\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[06d24705-89d9-4086-932e-6f5316702552/build ]   | Fetching list of valid trove classifiers               I-flit.validate\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Fetching list of valid trove classifiers               I-flit.validate\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Fetching list of valid trove classifiers               I-flit.validate\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Extras to install for deps 'all': {'.none', 'test', 'dev'}  I-flit.install\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Extras to install for deps 'all': {'dev', 'test', '.none'}  I-flit.install\n[06d24705-89d9-4086-932e-6f5316702552/build ]   | Untracked or deleted files in the source directory. Commit, undo or ignore these files in your VCS.\n[06d24705-89d9-4086-932e-6f5316702552/build ]   \u274c  Failure - Main Build sdist and wheel\n[06d24705-89d9-4086-932e-6f5316702552/build ] exitcode '1': failure\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Processing /tmp/558156d8-17ed-11ee-8a50-bb14de238602/brettcannon-desugar\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   DEPRECATION: A future pip version will change local packages to be built in-place without first copying to a temporary directory. We recommend you use --use-feature=in-tree-build to test your packages with this new behavior before it becomes the default.\n[06d24705-89d9-4086-932e-6f5316702552/format]   |    pip 21.3 will remove support for this functionality. You can find discussion regarding this at https://github.com/pypa/pip/issues/7555.\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Processing /tmp/558156d8-17ed-11ee-8a50-bb14de238602/brettcannon-desugar\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   DEPRECATION: A future pip version will change local packages to be built in-place without first copying to a temporary directory. We recommend you use --use-feature=in-tree-build to test your packages with this new behavior before it becomes the default.\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |    pip 21.3 will remove support for this functionality. You can find discussion regarding this at https://github.com/pypa/pip/issues/7555.\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Installing build dependencies: started\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Installing build dependencies: started\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Installing build dependencies: finished with status 'done'\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Getting requirements to build wheel: started\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Getting requirements to build wheel: finished with status 'done'\n[06d24705-89d9-4086-932e-6f5316702552/format]   |     Preparing wheel metadata: started\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Installing build dependencies: finished with status 'done'\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Getting requirements to build wheel: started\n[06d24705-89d9-4086-932e-6f5316702552/format]   |     Preparing wheel metadata: finished with status 'done'\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Getting requirements to build wheel: finished with status 'done'\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |     Preparing wheel metadata: started\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |     Preparing wheel metadata: finished with status 'done'\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting black==20.8b1\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading black-20.8b1.tar.gz (1.1 MB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting pytest==6.2.5\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading pytest-6.2.5-py3-none-any.whl (280 kB)\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Installing build dependencies: started\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting pytest-asyncio==0.15.1\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading pytest_asyncio-0.15.1-py3-none-any.whl (12 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting black==20.8b1\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading black-20.8b1.tar.gz (1.1 MB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Installing build dependencies: started\n[06d24705-89d9-4086-932e-6f5316702552/build ] \ud83c\udfc1  Job failed\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Installing build dependencies: finished with status 'done'\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Getting requirements to build wheel: started\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Getting requirements to build wheel: finished with status 'done'\n[06d24705-89d9-4086-932e-6f5316702552/format]   |     Preparing wheel metadata: started\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Installing build dependencies: finished with status 'done'\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Getting requirements to build wheel: started\n[06d24705-89d9-4086-932e-6f5316702552/format]   |     Preparing wheel metadata: finished with status 'done'\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Getting requirements to build wheel: finished with status 'done'\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |     Preparing wheel metadata: started\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting pytest==6.2.5\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading pytest-6.2.5-py3-none-any.whl (280 kB)\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting pytest-asyncio==0.15.1\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading pytest_asyncio-0.15.1-py3-none-any.whl (12 kB)\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting toml>=0.10.1\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading toml-0.10.2-py2.py3-none-any.whl (16 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |     Preparing wheel metadata: finished with status 'done'\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting mypy-extensions>=0.4.3\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting click>=7.1.2\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting typed-ast>=1.4.0\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading typed_ast-1.5.4-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (897 kB)\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting typing-extensions>=3.7.4\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Using cached typing_extensions-4.7.0-py3-none-any.whl (33 kB)\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting pathspec<1,>=0.6\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading pathspec-0.11.1-py3-none-any.whl (29 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting appdirs\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading appdirs-1.4.4-py2.py3-none-any.whl (9.6 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting pathspec<1,>=0.6\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading pathspec-0.11.1-py3-none-any.whl (29 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting mypy-extensions>=0.4.3\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting toml>=0.10.1\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading toml-0.10.2-py2.py3-none-any.whl (16 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting typing-extensions>=3.7.4\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Using cached typing_extensions-4.7.0-py3-none-any.whl (33 kB)\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting regex>=2020.1.8\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading regex-2023.6.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (772 kB)\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting appdirs\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading appdirs-1.4.4-py2.py3-none-any.whl (9.6 kB)\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting typed-ast>=1.4.0\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading typed_ast-1.5.4-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (897 kB)\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting attrs>=19.2.0\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting py>=1.8.2\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting regex>=2020.1.8\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading regex-2023.6.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (772 kB)\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting packaging\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Using cached packaging-23.1-py3-none-any.whl (48 kB)\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting pluggy<2.0,>=0.12\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting click>=7.1.2\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Collecting iniconfig\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting packaging\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Using cached packaging-23.1-py3-none-any.whl (48 kB)\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Building wheels for collected packages: black, desugar\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Building wheel for black (PEP 517): started\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting iniconfig\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting py>=1.8.2\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting attrs>=19.2.0\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Collecting pluggy<2.0,>=0.12\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Building wheels for collected packages: black, desugar\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Building wheel for black (PEP 517): started\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Building wheel for black (PEP 517): finished with status 'done'\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Created wheel for black: filename=black-20.8b1-py3-none-any.whl size=124177 sha256=7345300795eed78843022cfa8277e4de3f63023a72f0b118ee20a516c372319b\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/95/a4/59/10cd5378d52f92cdb45025f040e4686e10ae5217961c25fd66\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Building wheel for desugar (PEP 517): started\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Building wheel for desugar (PEP 517): finished with status 'done'\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Created wheel for desugar: filename=desugar-0-py3-none-any.whl size=13462 sha256=161a395fae1d32df92cae56e74175a00629b653e6fa3884e6c21d7b4f8e97a9b\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/e9/7b/a6/17409de327beb13f52cdf191e77ba1e123c77c5db99acfd08e\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Successfully built black desugar\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Installing collected packages: toml, py, pluggy, packaging, iniconfig, attrs, typing-extensions, typed-ast, regex, pytest, pathspec, mypy-extensions, click, appdirs, pytest-asyncio, desugar, black\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Building wheel for black (PEP 517): finished with status 'done'\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Created wheel for black: filename=black-20.8b1-py3-none-any.whl size=124177 sha256=114434c4569bbd620556e8d5c199abd828334cdd174b578e5beaaded8ac7b073\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/95/a4/59/10cd5378d52f92cdb45025f040e4686e10ae5217961c25fd66\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Building wheel for desugar (PEP 517): started\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Building wheel for desugar (PEP 517): finished with status 'done'\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Created wheel for desugar: filename=desugar-0-py3-none-any.whl size=13462 sha256=161a395fae1d32df92cae56e74175a00629b653e6fa3884e6c21d7b4f8e97a9b\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/e9/7b/a6/17409de327beb13f52cdf191e77ba1e123c77c5db99acfd08e\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Successfully built black desugar\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Installing collected packages: toml, py, pluggy, packaging, iniconfig, attrs, typing-extensions, typed-ast, regex, pytest, pathspec, mypy-extensions, click, appdirs, pytest-asyncio, desugar, black\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Successfully installed appdirs-1.4.4 attrs-23.1.0 black-20.8b1 click-8.1.3 desugar-0 iniconfig-2.0.0 mypy-extensions-1.0.0 packaging-23.1 pathspec-0.11.1 pluggy-1.2.0 py-1.11.0 pytest-6.2.5 pytest-asyncio-0.15.1 regex-2023.6.3 toml-0.10.2 typed-ast-1.5.4 typing-extensions-4.7.0\n[06d24705-89d9-4086-932e-6f5316702552/format]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[06d24705-89d9-4086-932e-6f5316702552/format]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.8.11/x64/bin/python -m pip install --upgrade pip' command.\n[06d24705-89d9-4086-932e-6f5316702552/format]   \u2705  Success - Main Install dev dependencies\n[06d24705-89d9-4086-932e-6f5316702552/format] \u2b50 Run Main Run formatter\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | Successfully installed appdirs-1.4.4 attrs-23.1.0 black-20.8b1 click-8.1.3 desugar-0 iniconfig-2.0.0 mypy-extensions-1.0.0 packaging-23.1 pathspec-0.11.1 pluggy-1.2.0 py-1.11.0 pytest-6.2.5 pytest-asyncio-0.15.1 regex-2023.6.3 toml-0.10.2 typed-ast-1.5.4 typing-extensions-4.7.0\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.8.11/x64/bin/python -m pip install --upgrade pip' command.\n[06d24705-89d9-4086-932e-6f5316702552/format]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \u2705  Success - Main Install test dependencies\n[06d24705-89d9-4086-932e-6f5316702552/test  ] \u2b50 Run Main Run tests\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[06d24705-89d9-4086-932e-6f5316702552/format]   | Traceback (most recent call last):\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   File \"/opt/hostedtoolcache/Python/3.8.11/x64/bin/black\", line 8, in <module>\n[06d24705-89d9-4086-932e-6f5316702552/format]   |     sys.exit(patched_main())\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   File \"/opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/black/__init__.py\", line 6606, in patched_main\n[06d24705-89d9-4086-932e-6f5316702552/format]   |     patch_click()\n[06d24705-89d9-4086-932e-6f5316702552/format]   |   File \"/opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/black/__init__.py\", line 6595, in patch_click\n[06d24705-89d9-4086-932e-6f5316702552/format]   |     from click import _unicodefun  # type: ignore\n[06d24705-89d9-4086-932e-6f5316702552/format]   | ImportError: cannot import name '_unicodefun' from 'click' (/opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/click/__init__.py)\n[06d24705-89d9-4086-932e-6f5316702552/format]   \u274c  Failure - Main Run formatter\n[06d24705-89d9-4086-932e-6f5316702552/format] exitcode '1': failure\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | ============================= test session starts ==============================\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | platform linux -- Python 3.8.11, pytest-6.2.5, py-1.11.0, pluggy-1.2.0\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/brettcannon-desugar\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | plugins: asyncio-0.15.1\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | collected 953 items\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | \n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | tests/test_builtins.py ................................................. [  5%]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | ........................................................................ [ 12%]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | ............                                                             [ 13%]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | tests/operator/test_augmented_arithmetic_assignment.py ................. [ 15%]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | ........................................................................ [ 23%]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | ...........................s............................................ [ 30%]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | ...............................................                          [ 35%]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | tests/operator/test_binary_arithmetic.py ............................... [ 39%]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | ........................................................................ [ 46%]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | ........................................................................ [ 54%]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | ........................................................................ [ 61%]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | ........................................................................ [ 69%]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | ........................................................................ [ 76%]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | ...................................................                      [ 82%]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | tests/operator/test_bool.py ............................                 [ 85%]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | tests/operator/test_identity_comparisons.py ............                 [ 86%]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | tests/operator/test_membership_testing.py ................               [ 88%]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | tests/operator/test_rich_comparisons.py ................s............... [ 91%]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | ..s.................s.................s.................s.               [ 97%]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | tests/operator/test_subscription.py ............                         [ 98%]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | tests/operator/test_unary_arithmetic.py ............                     [100%]\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | \n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/brettcannon-desugar/report.xml -\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   | ======================== 947 passed, 6 skipped in 3.13s ========================\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \u2705  Success - Main Run tests\n[06d24705-89d9-4086-932e-6f5316702552/test  ] \u2b50 Run Post Setup Python\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[06d24705-89d9-4086-932e-6f5316702552/format] \ud83c\udfc1  Job failed\n[06d24705-89d9-4086-932e-6f5316702552/test  ]   \u2705  Success - Post Setup Python\n[06d24705-89d9-4086-932e-6f5316702552/test  ] \ud83c\udfc1  Job succeeded\n",
        "stderr": "Error: Job 'build' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/brettcannon-desugar/.github/workflows/main-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "06d24705-89d9-4086-932e-6f5316702552",
        "build_tool": "pytest",
        "elapsed_time": 233.51521944999695
    }
}