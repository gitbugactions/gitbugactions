{
    "repository": "Doist/todoist-api-python",
    "stars": 120,
    "language": "python",
    "size": 259,
    "clone_url": "https://github.com/Doist/todoist-api-python.git",
    "timestamp": "2023-06-28T17:32:48.798033Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tests.test_api_async",
                "name": "test_constructs_api_with_token",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_comments",
                "name": "test_get_comment",
                "time": 0.093,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_comments",
                "name": "test_get_comments",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_comments",
                "name": "test_add_comment",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_comments",
                "name": "test_update_comment",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_comments",
                "name": "test_delete_comment",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_labels",
                "name": "test_get_label",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_labels",
                "name": "test_get_labels",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_labels",
                "name": "test_add_label_minimal",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_labels",
                "name": "test_add_label_full",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_labels",
                "name": "test_update_label",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_labels",
                "name": "test_delete_label",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_projects",
                "name": "test_get_project",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_projects",
                "name": "test_get_projects",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_projects",
                "name": "test_add_project_minimal",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_projects",
                "name": "test_add_project_full",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_projects",
                "name": "test_update_project",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_projects",
                "name": "test_delete_project",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_projects",
                "name": "test_get_collaborators",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_sections",
                "name": "test_get_section",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_sections",
                "name": "test_get_all_sections",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_sections",
                "name": "test_get_project_sections",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_sections",
                "name": "test_add_section",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_sections",
                "name": "test_update_section",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_sections",
                "name": "test_delete_section",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_tasks",
                "name": "test_get_task",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_tasks",
                "name": "test_get_tasks_minimal",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_tasks",
                "name": "test_get_tasks_full",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_tasks",
                "name": "test_add_task_minimal",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_tasks",
                "name": "test_add_task_full",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_tasks",
                "name": "test_update_task",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_tasks",
                "name": "test_close_task",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_tasks",
                "name": "test_reopen_task",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_tasks",
                "name": "test_delete_task",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api_tasks",
                "name": "test_quick_add_task",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_authentication",
                "name": "test_get_authentication_url",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_authentication",
                "name": "test_get_auth_token",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_authentication",
                "name": "test_revoke_auth_token",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_headers",
                "name": "test_create_headers_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_headers",
                "name": "test_create_headers_authorization",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_headers",
                "name": "test_create_headers_request_id",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_headers",
                "name": "test_create_headers_content_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http_requests",
                "name": "test_get_with_params",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http_requests",
                "name": "test_get_raise_for_status",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http_requests",
                "name": "test_post_with_data",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http_requests",
                "name": "test_post_return_ok_when_no_response_body",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http_requests",
                "name": "test_post_raise_for_status",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http_requests",
                "name": "test_delete_with_request_id",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http_requests",
                "name": "test_delete_raise_for_status",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_project_from_dict",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_section_from_dict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_due_from_dict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_task_from_dict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_collaborator_from_dict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_attachment_from_dict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_comment_from_dict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_label_from_dict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_quick_add_result_minimal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_quick_add_result_full",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_quick_add_broken_data",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_auth_result_from_dict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[d634955b-1795-4923-b955-05650dc97d30/build-test] \ud83d\ude80  Start image=crawlergpt:latest\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Doist-todoist-api-python] user=0 workdir=\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v3\n[d634955b-1795-4923-b955-05650dc97d30/build-test] \u2b50 Run Main actions/checkout@v3\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \u2705  Success - Main actions/checkout@v3\n[d634955b-1795-4923-b955-05650dc97d30/build-test] \u2b50 Run Main Set up Python\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udc33  docker cp src=/tmp/act-cache/0ac9a4bf-0b7e-4bd0-bd00-a24a5cf0faa0/act/actions-setup-python@v3/ dst=/var/run/act/actions/actions-setup-python@v3/\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v3/] user=0 workdir=\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/setup/index.js] user= workdir=\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udcac  ::debug::Semantic version spec of 3.9 is 3.9\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udcac  ::debug::isExplicit: \n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udcac  ::debug::explicit? false\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udcac  ::debug::explicit? true\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udcac  ::debug::explicit? true\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udcac  ::debug::explicit? true\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udcac  ::debug::explicit? true\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udcac  ::debug::explicit? true\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udcac  ::debug::explicit? true\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udcac  ::debug::evaluating 6 versions\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udcac  ::debug::matched: 3.9.6\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Successfully setup CPython (3.9.6)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \u2753 add-matcher /run/act/actions/actions-setup-python@v3/.github/python.json\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \u2705  Success - Main Set up Python\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \u2699  ::set-output:: python-version=3.9.6\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[d634955b-1795-4923-b955-05650dc97d30/build-test] \u2b50 Run Main Install dependencies\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | + curl -sSL https://install.python-poetry.org\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | + POETRY_HOME=/home/runneradmin/.poetry\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | + python3 - --yes\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Retrieving Poetry metadata\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | \n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | # Welcome to Poetry!\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | \n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | This will download and install the latest version of Poetry,\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | a dependency and package manager for Python.\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | \n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | \n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | /home/runneradmin/.poetry/bin\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | \n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | You can uninstall at any time by executing this script with the --uninstall option,\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | and these changes will be reverted.\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | \n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Installing Poetry (1.5.1)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Installing Poetry (1.5.1): Creating environment\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Installing Poetry (1.5.1): Installing Poetry\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Installing Poetry (1.5.1): Creating script\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Installing Poetry (1.5.1): Done\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | \n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Poetry (1.5.1) is installed now. Great!\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | \n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | To get started you need Poetry's bin directory (/home/runneradmin/.poetry/bin) in your `PATH`\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | environment variable.\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | \n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Add `export PATH=\"/home/runneradmin/.poetry/bin:$PATH\"` to your shell configuration file.\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | \n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.poetry/bin/poetry`.\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | \n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | You can test that everything is set up by executing:\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | \n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | `poetry --version`\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | \n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | + /home/runneradmin/.poetry/bin/poetry install\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Creating virtualenv todoist-api-python-0TVZTtym-py3.9 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Installing dependencies from lock file\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | \n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Package operations: 37 installs, 1 update, 0 removals\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | \n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing pyparsing (3.0.9)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing attrs (22.1.0)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing certifi (2022.12.7)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing distlib (0.3.5)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing filelock (3.8.0)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing charset-normalizer (2.1.1)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing idna (3.3)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing iniconfig (1.1.1)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing packaging (21.3)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing platformdirs (2.5.2)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing pluggy (1.0.0)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing py (1.11.0)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Updating setuptools (67.8.0 -> 65.3.0)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing tomli (2.0.1)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing urllib3 (1.26.12)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing cfgv (3.3.1)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing click (8.1.3)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing identify (2.5.3)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing mccabe (0.7.0)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing mypy-extensions (0.4.3)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing nodeenv (1.7.0)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing pathspec (0.9.0)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing pycodestyle (2.10.0)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing pyflakes (3.0.1)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing pytest (7.1.2)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing pyyaml (6.0)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing requests (2.31.0)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing toml (0.10.2)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing types-toml (0.10.8)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing typing-extensions (4.3.0)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing virtualenv (20.16.3)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing black (22.12.0)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing flake8 (6.0.0)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing isort (5.10.1)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing mypy (0.990)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing pytest-asyncio (0.21.0)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing pre-commit (2.20.0)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   |   \u2022 Installing responses (0.22.0)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | \n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | Installing the current project: todoist_api_python (2.0.2)\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \u2705  Success - Main Install dependencies\n[d634955b-1795-4923-b955-05650dc97d30/build-test] \u2b50 Run Main Test with pytest\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | + /home/runneradmin/.poetry/bin/poetry run pytest --junitxml=report.xml\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | ============================= test session starts ==============================\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | platform linux -- Python 3.9.6, pytest-7.1.2, pluggy-1.0.0\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Doist-todoist-api-python\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | plugins: asyncio-0.21.0\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | asyncio: mode=strict\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | collected 61 items\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | \n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | tests/test_api_async.py .                                                [  1%]\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | tests/test_api_comments.py .....                                         [  9%]\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | tests/test_api_labels.py ......                                          [ 19%]\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | tests/test_api_projects.py .......                                       [ 31%]\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | tests/test_api_sections.py ......                                        [ 40%]\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | tests/test_api_tasks.py ..........                                       [ 57%]\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | tests/test_authentication.py ...                                         [ 62%]\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | tests/test_headers.py ....                                               [ 68%]\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | tests/test_http_requests.py .......                                      [ 80%]\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | tests/test_models.py ............                                        [100%]\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | \n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Doist-todoist-api-python/report.xml -\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   | ============================== 61 passed in 1.22s ==============================\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \u2705  Success - Main Test with pytest\n[d634955b-1795-4923-b955-05650dc97d30/build-test] \u2b50 Run Post Set up Python\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/cache-save/index.js] user= workdir=\n[d634955b-1795-4923-b955-05650dc97d30/build-test]   \u2705  Success - Post Set up Python\n[d634955b-1795-4923-b955-05650dc97d30/build-test] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/71e84d13a25a21898094a77d9a9f1dc165a3dc11f4723bda3a25eb857b39e6e9?force=1&v=1\": context deadline exceeded\n[d634955b-1795-4923-b955-05650dc97d30/build-test] \ud83c\udfc1  Job succeeded\n",
        "stderr": "Error: Error occurred running finally: Error occurred running finally: context deadline exceeded (original error: <nil>) (original error: <nil>)\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Doist-todoist-api-python/.github/workflows/ci-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 544.8258502483368
    }
}