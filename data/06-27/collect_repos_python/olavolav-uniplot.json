{
    "repository": "olavolav/uniplot",
    "stars": 260,
    "language": "python",
    "size": 53942,
    "clone_url": "https://github.com/olavolav/uniplot.git",
    "timestamp": "2023-06-28T15:53:05.823377Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.acceptance.test_performance",
                "name": "test_plotting_one_million_points",
                "time": 0.249,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.acceptance.test_user_behavior",
                "name": "test_normal_plotting",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.acceptance.test_user_behavior",
                "name": "test_normal_plotting_to_string",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.acceptance.test_user_behavior",
                "name": "test_plotting_with_forced_ascii",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.acceptance.test_user_behavior",
                "name": "test_normal_plotting_with_x_series",
                "time": 0.093,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.acceptance.test_user_behavior",
                "name": "test_logarithmic_plotting",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.acceptance.test_user_behavior",
                "name": "test_multi_series_plotting",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.acceptance.test_user_behavior",
                "name": "test_massively_multi_series_plotting",
                "time": 0.829,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.acceptance.test_user_behavior",
                "name": "test_just_single_point_plotting",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.acceptance.test_user_behavior",
                "name": "test_random_line_plotting",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.axis_labels.test_extended_talbot_labels",
                "name": "test_simple_labeling_case",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.axis_labels.test_extended_talbot_labels",
                "name": "test_typical_labeling_case_with_small_range",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.axis_labels.test_extended_talbot_labels",
                "name": "test_vertical_labelling_case_of_some_konux_displacement_data",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.axis_labels.test_extended_talbot_labels",
                "name": "test_weird_offset_case1",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.axis_labels.test_extended_talbot_labels",
                "name": "test_weird_offset_case2",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.axis_labels.test_label_set",
                "name": "test_redering_to_string",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.axis_labels.test_label_set",
                "name": "test_redering_detects_overlap",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.axis_labels.test_label_set",
                "name": "test_redering_to_string_with_unit",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.axis_labels.test_label_set",
                "name": "test_floating_point_wrapping_issue",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_discretizer",
                "name": "test_correct_discretization_for_number",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_discretizer",
                "name": "test_correct_discretization_for_array",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_discretizer",
                "name": "test_correct_discretization_for_array_with_nans_should_be_negative_one",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_discretizer",
                "name": "test_compute_y_at_middle_of_row_simple_case",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_discretizer",
                "name": "test_compute_y_at_middle_of_row_complex_case",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_discretizer",
                "name": "test_invert_discretize_with_single_index",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_discretizer",
                "name": "test_invert_discretize_with_list_of_indices",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_multi_series",
                "name": "test_length_and_shape_when_only_passing_single_ys_as_list",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_multi_series",
                "name": "test_length_and_shape_when_passing_multiple_lists",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_multi_series",
                "name": "test_min_and_max",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_multi_series",
                "name": "test_occasional_nans_should_be_tolerated",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_param_initializer",
                "name": "test_passing_simple_list",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_param_initializer",
                "name": "test_lines_option_with_simple_list",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_param_initializer",
                "name": "test_lines_option_with_multiple_lists",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_param_initializer",
                "name": "test_invalid_lines_option_with_multiple_lists",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_empty_plot",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_single_pixel",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_diagonal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_diagonal_in_bigger_window",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_diagonal_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_horizontal_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_vertical_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_no_mysterious_extra_vertical_lines",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_forward_line_with_steep_upward_slope",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_forward_line_with_shallow_upward_slope",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_forward_line_with_steep_downward_slope",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_forward_line_with_shallow_downward_slope",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_backward_line_with_steep_upward_slope",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_backward_line_with_shallow_upward_slope",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_backward_line_with_steep_downward_slope",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_backward_line_with_shallow_downward_slope",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_draw_triangular_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_lines_outside_of_the_field_of_view",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_lines_with_steep_ends_due_to_point_near_pixel_edges",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_should_plot_no_lines_where_nan_values_are",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_merge_two_empty_pixel_matrices",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_merge_with_empty_lower_layer",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_merge_with_effective_shadow_small_patch",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_merge_with_effective_shadow_bigger_patch",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_pixel_matrix",
                "name": "test_merge_without_shadow_bigger_patch",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_plot",
                "name": "test_plotting",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_plot_elements",
                "name": "test_empty_square",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_plot_elements",
                "name": "test_full_square",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_plot_elements",
                "name": "test_top_left_quarter_square",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_plot_elements",
                "name": "test_left_half_square",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build] \ud83d\ude80  Start image=crawlergpt:latest\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/olavolav-uniplot] user=0 workdir=\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build] \u2b50 Run Pre Install Poetry\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \u2705  Success - Pre Install Poetry\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build] \ud83e\uddea  Matrix: map[python-version:3.8]\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build] \u2b50 Run Main Check out code\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \u2705  Success - Main Check out code\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build] \u2b50 Run Main Set up Python 3.8\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/435da6fd-f86e-40cb-8d0f-f5bead906aee/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udcac  ::debug::isExplicit: \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udcac  ::debug::explicit? false\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udcac  ::debug::explicit? true\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udcac  ::debug::explicit? true\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udcac  ::debug::explicit? true\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udcac  ::debug::explicit? true\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udcac  ::debug::explicit? true\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udcac  ::debug::explicit? true\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udcac  ::debug::matched: 3.8.11\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | Successfully setup CPython (3.8.11)\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \u2705  Success - Main Set up Python 3.8\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \u2699  ::set-output:: python-version=3.8.11\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build] \u2b50 Run Main Install Poetry\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/435da6fd-f86e-40cb-8d0f-f5bead906aee/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build] \u2b50 Run Main Install and configure Poetry\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | Retrieving Poetry metadata\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | # Welcome to Poetry!\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | This will download and install the latest version of Poetry,\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | a dependency and package manager for Python.\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | /home/runneradmin/.local/bin\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | You can uninstall at any time by executing this script with the --uninstall option,\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | and these changes will be reverted.\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | Installing Poetry (1.1.12)\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | Installing Poetry (1.1.12): Creating environment\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | Installing Poetry (1.1.12): Installing Poetry\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | Installing Poetry (1.1.12): Creating script\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | Installing Poetry (1.1.12): Done\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | Poetry (1.1.12) is installed now. Great!\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | environment variable.\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | You can test that everything is set up by executing:\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | `poetry --version`\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \u001b[33mDone \u2705\u001b[0m\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \u2705  Success - Main Install and configure Poetry\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \u2705  Success - Main Install Poetry\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build] \u2b50 Run Main Install dependencies\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | Creating virtualenv uniplot in /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/olavolav-uniplot/.venv\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | Installing dependencies from lock file\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | Package operations: 15 installs, 0 updates, 0 removals\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   |   \u2022 Installing attrs (22.1.0)\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   |   \u2022 Installing click (8.1.3)\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   |   \u2022 Installing exceptiongroup (1.0.4)\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   |   \u2022 Installing iniconfig (1.1.1)\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   |   \u2022 Installing mypy-extensions (0.4.3)\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   |   \u2022 Installing packaging (22.0)\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   |   \u2022 Installing pathspec (0.10.3)\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   |   \u2022 Installing platformdirs (2.6.0)\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   |   \u2022 Installing pluggy (1.0.0)\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   |   \u2022 Installing tomli (2.0.1)\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   |   \u2022 Installing typing-extensions (4.4.0)\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   |   \u2022 Installing black (22.12.0)\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   |   \u2022 Installing mypy (1.0.0)\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   |   \u2022 Installing numpy (1.24.0)\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   |   \u2022 Installing pytest (7.2.0)\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \u2705  Success - Main Install dependencies\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build] \u2b50 Run Main Run unit tests\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | ============================= test session starts ==============================\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | platform linux -- Python 3.8.11, pytest-7.2.0, pluggy-1.0.0\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/olavolav-uniplot\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | collected 64 items\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | tests/acceptance/test_performance.py .                                   [  1%]\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | tests/acceptance/test_user_behavior.py .........                         [ 15%]\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | tests/axis_labels/test_extended_talbot_labels.py .....                   [ 23%]\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | tests/axis_labels/test_label_set.py ....                                 [ 29%]\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | tests/unit/test_discretizer.py .......                                   [ 40%]\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | tests/unit/test_multi_series.py ....                                     [ 46%]\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | tests/unit/test_param_initializer.py ....                                [ 53%]\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | tests/unit/test_pixel_matrix.py .........................                [ 92%]\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | tests/unit/test_plot.py .                                                [ 93%]\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | tests/unit/test_plot_elements.py ....                                    [100%]\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | \n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/olavolav-uniplot/report.xml -\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   | ============================== 64 passed in 2.12s ==============================\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \u2705  Success - Main Run unit tests\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build] \u2b50 Run Post Install Poetry\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/435da6fd-f86e-40cb-8d0f-f5bead906aee/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \u2705  Success - Post Install Poetry\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build] \u2b50 Run Post Set up Python 3.8\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build]   \u2705  Success - Post Set up Python 3.8\n[689001bc-16dd-47b0-bf3c-e05924e3e7ef/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/olavolav-uniplot/.github/workflows/unit_tests-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 255.97645807266235
    }
}