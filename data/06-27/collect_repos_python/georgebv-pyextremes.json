{
    "repository": "georgebv/pyextremes",
    "stars": 171,
    "language": "python",
    "size": 6361,
    "clone_url": "https://github.com/georgebv/pyextremes.git",
    "timestamp": "2023-07-01T14:44:59.437798Z",
    "clone_success": true,
    "number_of_actions": 4,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "unknown",
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [],
        "stdout": "[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ] \ud83d\ude80  Start image=crawlergpt:latest\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage] \ud83d\ude80  Start image=crawlergpt:latest\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/georgebv-pyextremes] user=0 workdir=\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/georgebv-pyextremes] user=0 workdir=\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ] \ud83e\uddea  Matrix: map[python-version:3.9]\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ] \u2b50 Run Main Checkout\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \u2705  Success - Main Checkout\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ] \u2b50 Run Main Install python\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udc33  docker cp src=/tmp/act-cache/6ed117fb-0b6d-4ac8-b3a9-f9452417e006/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \u2753  ::group::Installed versions\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udcac  ::debug::Semantic version spec of 3.9 is 3.9\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udcac  ::debug::isExplicit: \n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udcac  ::debug::explicit? false\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udcac  ::debug::explicit? true\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udcac  ::debug::explicit? true\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udcac  ::debug::explicit? true\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udcac  ::debug::explicit? true\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udcac  ::debug::explicit? true\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udcac  ::debug::explicit? true\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udcac  ::debug::matched: 3.9.6\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   | Successfully set up CPython (3.9.6)\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \u2753  ::endgroup::\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \u2705  Success - Main Install python\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib/pkgconfig\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \u2699  ::set-output:: python-version=3.9.6\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.9.6/x64/bin/python\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ] \u2b50 Run Main Install poetry\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   | /var/run/act/workflow/2: line 2: syntax error near unexpected token `.Content'\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ]   \u274c  Failure - Main Install poetry\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ] exitcode '2': failure\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage] \ud83e\uddea  Matrix: map[python-version:3.9]\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage] \u2b50 Run Main Checkout\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \u2705  Success - Main Checkout\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage] \u2b50 Run Main Install python\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udc33  docker cp src=/tmp/act-cache/6ed117fb-0b6d-4ac8-b3a9-f9452417e006/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[324866e3-8dcd-4689-a024-7483339ef464/Test on windows                    ] \ud83c\udfc1  Job failed\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \u2753  ::group::Installed versions\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::Semantic version spec of 3.9 is 3.9\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::isExplicit: \n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::explicit? false\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::explicit? true\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::explicit? true\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::explicit? true\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::explicit? true\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::explicit? true\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::explicit? true\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::evaluating 6 versions\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::matched: 3.9.6\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | Successfully set up CPython (3.9.6)\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \u2753  ::endgroup::\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \u2705  Success - Main Install python\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib/pkgconfig\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \u2699  ::set-output:: python-version=3.9.6\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.9.6/x64/bin/python\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage] \u2b50 Run Main Cache poetry installation\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udc33  docker cp src=/tmp/act-cache/6ed117fb-0b6d-4ac8-b3a9-f9452417e006/act/actions-cache@v3/ dst=/var/run/act/actions/actions-cache@v3/\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v3/] user=0 workdir=\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/restore/index.js] user= workdir=\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::Resolved Keys:\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::[\"poetry-7ff653ea64e30906bff37eb66d56cd5495477d6cc8e1992730111b2e410e8008\"]\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::1.5.0\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:37289/_apis/artifactcache/cache?keys=poetry-7ff653ea64e30906bff37eb66d56cd5495477d6cc8e1992730111b2e410e8008&version=99265c7959b2fa90c890a947d4d3ccb7d72bc5de5df37346d1e9073cc65d4c17\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | Cache not found for input keys: poetry-7ff653ea64e30906bff37eb66d56cd5495477d6cc8e1992730111b2e410e8008\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \u2705  Success - Main Cache poetry installation\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage] \u2b50 Run Main Install poetry\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | Retrieving Poetry metadata\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | \n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | # Welcome to Poetry!\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | \n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | This will download and install the latest version of Poetry,\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | a dependency and package manager for Python.\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | \n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | \n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | /home/runneradmin/.local/bin\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | \n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | You can uninstall at any time by executing this script with the --uninstall option,\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | and these changes will be reverted.\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | \n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | Installing Poetry (1.5.1)\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | Installing Poetry (1.5.1): Creating environment\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | Installing Poetry (1.5.1): Installing Poetry\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | Installing Poetry (1.5.1): Creating script\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | Installing Poetry (1.5.1): Done\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | \n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | Poetry (1.5.1) is installed now. Great!\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | \n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | environment variable.\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | \n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | \n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | \n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | You can test that everything is set up by executing:\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | \n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | `poetry --version`\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | \n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \u2705  Success - Main Install poetry\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage] \u2b50 Run Main Install project and its dependencies\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   | /var/run/act/workflow/4: line 3: poetry: command not found\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage]   \u274c  Failure - Main Install project and its dependencies\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[324866e3-8dcd-4689-a024-7483339ef464/Test on linux and generate coverage] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'Test on linux and generate coverage' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/georgebv-pyextremes/.github/workflows/test-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "324866e3-8dcd-4689-a024-7483339ef464",
        "build_tool": "pytest",
        "elapsed_time": 255.91072487831116
    }
}