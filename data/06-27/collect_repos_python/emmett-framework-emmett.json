{
    "repository": "emmett-framework/emmett",
    "stars": 855,
    "language": "python",
    "size": 3852,
    "clone_url": "https://github.com/emmett-framework/emmett.git",
    "timestamp": "2023-06-28T10:39:56.375930Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tests.test_auth",
                "name": "test_models",
                "time": 0.153,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlite3.OperationalError: disk I/O error\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_auth",
                "name": "test_registration",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlite3.OperationalError: disk I/O error\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_auth",
                "name": "test_login",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlite3.OperationalError: disk I/O error\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_auth",
                "name": "test_password_change",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlite3.OperationalError: disk I/O error\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_auth",
                "name": "test_password_retrieval",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlite3.OperationalError: disk I/O error\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cache",
                "name": "test_basecache",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cache",
                "name": "test_ramcache",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cache",
                "name": "test_diskcache",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cache",
                "name": "test_cache",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cache",
                "name": "test_cache_decorator_sync",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cache",
                "name": "test_cache_decorator_loop",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http",
                "name": "test_http_default",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http",
                "name": "test_http_bytes",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http",
                "name": "test_http",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http",
                "name": "test_redirect",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_logger",
                "name": "test_user_assign_valid_level",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_logger",
                "name": "test_user_assign_invaild_level",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_logger",
                "name": "test_user_no_assign_level",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_message_init",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_recipients",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_all_recipients",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_sender",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_sender_as_tuple",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_reply_to",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_missing_sender",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_missing_recipients",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_bcc",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_cc",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_attach",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_bad_subject",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_subject",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_empty_subject",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_multiline_subject",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_bad_sender",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_bad_reply_to",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_bad_recipient",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_address_sanitize",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_plain_message",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_plain_message_with_attachments",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_plain_message_with_unicode_attachments",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_html_message",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_json_message",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_html_message_with_attachments",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_date",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_msgid",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_unicode_addresses",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_extra_headers",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_send",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mailer",
                "name": "test_send_mail",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_migrations",
                "name": "test_step_one_create_table",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_migrations",
                "name": "test_step_one_no_diff_in_migration",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_migrations",
                "name": "test_step_one_drop_table",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_migrations",
                "name": "test_step_two_create_table",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_migrations",
                "name": "test_step_three_create_column",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_migrations",
                "name": "test_step_three_drop_column",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_migrations",
                "name": "test_step_four_alter_table",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_migrations",
                "name": "test_step_five_indexes",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_migrations",
                "name": "test_step_six_id_types",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_migrations",
                "name": "test_step_seven_composed_pks",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_db_instance",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_table_definition",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_fields",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_validators",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_visibility",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_labels",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_comments",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_updates",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_representation",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_widgets",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_computations",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_callbacks",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_save",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_destroy",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_commit_callbacks",
                "time": 0.13,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_callbacks_skip",
                "time": 0.123,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_rowattrs",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_rowmethods",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_modelmethods",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_relations",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_tablenames",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_inheritance",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_scopes",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_relations_scopes",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_model_where",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_model_first",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm",
                "name": "test_model_last",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_connections",
                "name": "test_connection_ctx_sync",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_connections",
                "name": "test_connection_ctx_loop",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_gis",
                "name": "test_field_types",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_gis",
                "name": "test_gis_insert",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_gis",
                "name": "test_gis_select",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_pks",
                "name": "test_insert",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_pks",
                "name": "test_save_insert",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_pks",
                "name": "test_save_update",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_pks",
                "name": "test_destroy_delete",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_pks",
                "name": "test_relations",
                "time": 5.014,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"RuntimeError: Failure to connect, tried 5 times:\nTraceback (most recent call last):\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/base.py\", line 455, in __init__\n    self._adapter = adapter(**kwargs)\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 13, in __call__\n    return AdapterMeta.__call__(cls, *args, **kwargs)\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/__init__.py\", line 40, in __call__\n    obj = super(AdapterMeta, cls).__call__(*args, **kwargs)\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 46, in __init__\n    super(Postgre, self).__init__(\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 367, in __init__\n    super(SQLAdapter, self).__init__(*args, **kwargs)\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 52, in __init__\n    self.reconnect()\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 329, in _connect_sync\n    self.connection, _opened = self._connection_manager.connect_sync()\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 228, in connect_sync\n    rv = self._acquire_sync()\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 258, in _acquire_sync\n    conn, _opened = self._connection_open_sync()\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 156, in _connection_open_sync\n    return self._connector_sync(), True\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 151, in _connector_sync\n    return self.adapter.connector()\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 103, in connector\n    return self.driver.connect(**self.driver_args)\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/psycopg2/__init__.py\", line 122, in connect\n    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\npsycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_pks",
                "name": "test_via_relations",
                "time": 0.011,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"RuntimeError: Failure to connect, tried 5 times:\nTraceback (most recent call last):\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/base.py\", line 455, in __init__\n    self._adapter = adapter(**kwargs)\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 13, in __call__\n    return AdapterMeta.__call__(cls, *args, **kwargs)\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/__init__.py\", line 40, in __call__\n    obj = super(AdapterMeta, cls).__call__(*args, **kwargs)\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 46, in __init__\n    super(Postgre, self).__init__(\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 367, in __init__\n    super(SQLAdapter, self).__init__(*args, **kwargs)\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 52, in __init__\n    self.reconnect()\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 329, in _connect_sync\n    self.connection, _opened = self._connection_manager.connect_sync()\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 228, in connect_sync\n    rv = self._acquire_sync()\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 258, in _acquire_sync\n    conn, _opened = self._connection_open_sync()\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 156, in _connection_open_sync\n    return self._connector_sync(), True\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 151, in _connector_sync\n    return self.adapter.connector()\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 103, in connector\n    return self.driver.connect(**self.driver_args)\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/psycopg2/__init__.py\", line 122, in connect\n    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\npsycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_pks",
                "name": "test_relations_set",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"RuntimeError: Failure to connect, tried 5 times:\nTraceback (most recent call last):\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/base.py\", line 455, in __init__\n    self._adapter = adapter(**kwargs)\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 13, in __call__\n    return AdapterMeta.__call__(cls, *args, **kwargs)\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/__init__.py\", line 40, in __call__\n    obj = super(AdapterMeta, cls).__call__(*args, **kwargs)\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 46, in __init__\n    super(Postgre, self).__init__(\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 367, in __init__\n    super(SQLAdapter, self).__init__(*args, **kwargs)\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 52, in __init__\n    self.reconnect()\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 329, in _connect_sync\n    self.connection, _opened = self._connection_manager.connect_sync()\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 228, in connect_sync\n    rv = self._acquire_sync()\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 258, in _acquire_sync\n    conn, _opened = self._connection_open_sync()\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 156, in _connection_open_sync\n    return self._connector_sync(), True\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 151, in _connector_sync\n    return self.adapter.connector()\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 103, in connector\n    return self.driver.connect(**self.driver_args)\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/psycopg2/__init__.py\", line 122, in connect\n    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\npsycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_pks",
                "name": "test_row",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"RuntimeError: Failure to connect, tried 5 times:\nTraceback (most recent call last):\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/base.py\", line 455, in __init__\n    self._adapter = adapter(**kwargs)\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 13, in __call__\n    return AdapterMeta.__call__(cls, *args, **kwargs)\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/__init__.py\", line 40, in __call__\n    obj = super(AdapterMeta, cls).__call__(*args, **kwargs)\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 46, in __init__\n    super(Postgre, self).__init__(\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 367, in __init__\n    super(SQLAdapter, self).__init__(*args, **kwargs)\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 52, in __init__\n    self.reconnect()\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 329, in _connect_sync\n    self.connection, _opened = self._connection_manager.connect_sync()\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 228, in connect_sync\n    rv = self._acquire_sync()\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 258, in _acquire_sync\n    conn, _opened = self._connection_open_sync()\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 156, in _connection_open_sync\n    return self._connector_sync(), True\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 151, in _connector_sync\n    return self.adapter.connector()\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 103, in connector\n    return self.driver.connect(**self.driver_args)\n  File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/psycopg2/__init__.py\", line 122, in connect\n    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\npsycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_row",
                "name": "test_rowclass",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_row",
                "name": "test_concrete",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_row",
                "name": "test_changes",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_row",
                "name": "test_validation_methods",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_row",
                "name": "test_clone_methods",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_row",
                "name": "test_refresh",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_row",
                "name": "test_methods_override",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_row",
                "name": "test_attributes",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_row",
                "name": "test_relation_wrappers",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_row",
                "name": "test_password_wrapper",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_row",
                "name": "test_pickle",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_transactions",
                "name": "test_transactions",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_transactions",
                "name": "test_commit_rollback",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_transactions",
                "name": "test_commit_rollback_nested",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_transactions",
                "name": "test_nested_transaction_obj",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_orm_transactions",
                "name": "test_savepoint_commit",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pipeline",
                "name": "test_ok_flow",
                "time": 0.113,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pipeline",
                "name": "test_httperror_flow",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pipeline",
                "name": "test_error_flow",
                "time": 0.103,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pipeline",
                "name": "test_open_error",
                "time": 0.107,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pipeline",
                "name": "test_close_error",
                "time": 0.208,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pipeline",
                "name": "test_flow_interrupt",
                "time": 0.104,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pipeline",
                "name": "test_pipeline_composition",
                "time": 0.207,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pipeline",
                "name": "test_module_pipeline",
                "time": 0.105,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pipeline",
                "name": "test_module_pipeline_composition",
                "time": 0.106,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pipeline",
                "name": "test_module_group_pipeline",
                "time": 0.104,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pipeline",
                "name": "test_module_group_pipeline_composition",
                "time": 0.105,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pipeline",
                "name": "test_receive_send_flow",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pipeline",
                "name": "test_injectors",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_routing",
                "name": "test_routing",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_routing",
                "name": "test_route_args",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_routing",
                "name": "test_routing_valid_route",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_routing",
                "name": "test_routing_not_found_route",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_routing",
                "name": "test_routing_exception_route",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_routing",
                "name": "test_static_url",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_routing",
                "name": "test_module_url",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_routing",
                "name": "test_global_url_prefix",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_session",
                "name": "test_session_cookie",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_templates",
                "name": "test_helpers",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_templates",
                "name": "test_meta",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_templates",
                "name": "test_static",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_templates",
                "name": "test_render",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_translator",
                "name": "test_translation",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_cachedprop_sync",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_cachedprop_loop",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_is_valid_ip_address",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_dict_to_sdict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_validators",
                "name": "test_defaults",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_validators",
                "name": "test_defaults_disable",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_validators",
                "name": "test_requires_vs_validators",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_validators",
                "name": "test_is",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_validators",
                "name": "test_len",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_validators",
                "name": "test_in",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_validators",
                "name": "test_numerical",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_validators",
                "name": "test_eq",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_validators",
                "name": "test_match",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_validators",
                "name": "test_any",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_validators",
                "name": "test_processors",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_validators",
                "name": "test_presence",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_validators",
                "name": "test_unique",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_validators",
                "name": "test_allow",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_validators",
                "name": "test_validation",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_validators",
                "name": "test_multi",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wrappers",
                "name": "test_request",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wrappers",
                "name": "test_response",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wrappers",
                "name": "test_req_ctx",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ] \ud83d\ude80  Start image=crawlergpt:latest\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ] \ud83d\ude80  Start image=crawlergpt:latest\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows] \ud83d\ude80  Start image=crawlergpt:latest\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett] user=0 workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett] user=0 workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett] user=0 workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \u2601  git clone 'https://github.com/gi0baro/setup-poetry-bin' # ref=v1.3\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \u2601  git clone 'https://github.com/gi0baro/setup-poetry-bin' # ref=v1.3\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \u2601  git clone 'https://github.com/gi0baro/setup-poetry-bin' # ref=v1.3\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows] \u2b50 Run Pre Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \u2705  Success - Pre Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ] \u2b50 Run Pre Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \u2705  Success - Pre Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows] \ud83e\uddea  Matrix: map[python-version:3.8]\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ] \u2b50 Run Pre Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows] \u2b50 Run Main actions/checkout@v2\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \u2705  Success - Main actions/checkout@v2\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \u2705  Success - Pre Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ] \ud83e\uddea  Matrix: map[python-version:3.8]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ] \u2b50 Run Main actions/checkout@v2\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \u2705  Success - Main actions/checkout@v2\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows] \u2b50 Run Main Set up Python 3.8\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ] \ud83e\uddea  Matrix: map[python-version:3.8]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udc33  docker cp src=/tmp/act-cache/9b1b2262-ed57-4a92-8249-ca7479b99448/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ] \u2b50 Run Main actions/checkout@v2\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \u2705  Success - Main actions/checkout@v2\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ] \u2b50 Run Main Set up Python 3.8\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udc33  docker cp src=/tmp/act-cache/9b1b2262-ed57-4a92-8249-ca7479b99448/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ] \u2b50 Run Main Set up Python 3.8\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udc33  docker cp src=/tmp/act-cache/9b1b2262-ed57-4a92-8249-ca7479b99448/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udcac  ::debug::isExplicit: \n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udcac  ::debug::explicit? false\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udcac  ::debug::explicit? true\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udcac  ::debug::explicit? true\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udcac  ::debug::explicit? true\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udcac  ::debug::explicit? true\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udcac  ::debug::explicit? true\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udcac  ::debug::explicit? true\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udcac  ::debug::matched: 3.8.11\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | Successfully setup CPython (3.8.11)\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \u2705  Success - Main Set up Python 3.8\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udcac  ::debug::isExplicit: \n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udcac  ::debug::explicit? false\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udcac  ::debug::explicit? true\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udcac  ::debug::explicit? true\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udcac  ::debug::explicit? true\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udcac  ::debug::explicit? true\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udcac  ::debug::explicit? true\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udcac  ::debug::explicit? true\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udcac  ::debug::evaluating 6 versions\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udcac  ::debug::matched: 3.8.11\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | Successfully setup CPython (3.8.11)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \u2705  Success - Main Set up Python 3.8\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udcac  ::debug::isExplicit: \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udcac  ::debug::explicit? false\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udcac  ::debug::explicit? true\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udcac  ::debug::explicit? true\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udcac  ::debug::explicit? true\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udcac  ::debug::explicit? true\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udcac  ::debug::explicit? true\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udcac  ::debug::explicit? true\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udcac  ::debug::matched: 3.8.11\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | Successfully setup CPython (3.8.11)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \u2705  Success - Main Set up Python 3.8\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \u2699  ::set-output:: python-version=3.8.11\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \u2699  ::set-output:: python-version=3.8.11\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \u2699  ::set-output:: python-version=3.8.11\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ] \u2b50 Run Main Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ] \u2b50 Run Main Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows] \u2b50 Run Main Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udc33  docker cp src=/tmp/act-cache/9b1b2262-ed57-4a92-8249-ca7479b99448/act/gi0baro-setup-poetry-bin@v1.3/ dst=/var/run/act/actions/gi0baro-setup-poetry-bin@v1.3/\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udc33  docker cp src=/tmp/act-cache/9b1b2262-ed57-4a92-8249-ca7479b99448/act/gi0baro-setup-poetry-bin@v1.3/ dst=/var/run/act/actions/gi0baro-setup-poetry-bin@v1.3/\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/gi0baro-setup-poetry-bin@v1.3/] user=0 workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/gi0baro-setup-poetry-bin@v1.3/] user=0 workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ] \u2b50 Run Main Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ] \u2b50 Run Main Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udc33  docker cp src=/tmp/act-cache/9b1b2262-ed57-4a92-8249-ca7479b99448/act/gi0baro-setup-poetry-bin@v1.3/ dst=/var/run/act/actions/gi0baro-setup-poetry-bin@v1.3/\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/gi0baro-setup-poetry-bin@v1.3/] user=0 workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | \u001b[33mSetting Poetry installation path as: /home/runneradmin/.local/poetry-bin\u001b[0m\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | \u001b[33mInstalling Poetry 1.3.2-1\u001b[0m\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \u001b[33mSetting Poetry installation path as: /home/runneradmin/.local/poetry-bin\u001b[0m\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \u001b[33mInstalling Poetry 1.3.2-1\u001b[0m\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | \u001b[33mConfiguring Poetry..\u001b[0m\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \u001b[33mConfiguring Poetry..\u001b[0m\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | \u001b[33mInstallation completed \u2705\u001b[0m\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \u2705  Success - Main Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \u2699  ::add-path:: /home/runneradmin/.local/poetry-bin\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \u2705  Success - Main Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \u2699  ::add-path:: /home/runneradmin/.local/poetry-bin\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ] \u2b50 Run Main Install dependencies\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \u001b[33mInstallation completed \u2705\u001b[0m\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \u2705  Success - Main Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \u2699  ::add-path:: /home/runneradmin/.local/poetry-bin\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \u2705  Success - Main Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \u2699  ::add-path:: /home/runneradmin/.local/poetry-bin\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ] \u2b50 Run Main Install dependencies\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows] \u2b50 Run Main Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | \u001b[33mSetting Poetry installation path as: /home/runneradmin/.local/poetry-bin\u001b[0m\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | \u001b[33mInstalling Poetry 1.3.2-1\u001b[0m\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | Creating virtualenv emmett in /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | Creating virtualenv emmett in /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | Using virtualenv: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | Updating dependencies\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | Resolving dependencies...\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | Using virtualenv: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | Updating dependencies\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | Resolving dependencies...\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | \u001b[33mConfiguring Poetry..\u001b[0m\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | Writing lock file\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | Finding the necessary packages for the current system\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | Finding the necessary packages for the current system\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | Package operations: 28 installs, 0 updates, 0 removals, 5 skipped\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   |   \u2022 Installing exceptiongroup (1.1.1)\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   |   \u2022 Installing idna (3.4)\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   |   \u2022 Installing sniffio (1.3.0)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | \u001b[33mInstallation completed \u2705\u001b[0m\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \u2705  Success - Main Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | Package operations: 28 installs, 0 updates, 0 removals, 5 skipped\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing exceptiongroup (1.1.1)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing idna (3.4)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing sniffio (1.3.0)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \u2699  ::add-path:: /home/runneradmin/.local/poetry-bin\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \u2705  Success - Main Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \u2699  ::add-path:: /home/runneradmin/.local/poetry-bin\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows] \u2b50 Run Main Install dependencies\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3.sh] user= workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing anyio (3.7.0)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing click (8.1.3)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing packaging (23.1)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing pluggy (1.2.0)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing iniconfig (2.0.0)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing six (1.16.0)\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   |   FileNotFoundError\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   |   [Errno 2] No such file or directory: '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/idna-3.4.dist-info/direct_url.json'\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   |   at pathlib:1206 in unlink\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing tomli (2.0.1)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing typing-extensions (4.6.3)\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \u274c  Failure - Main Install dependencies\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ] exitcode '1': failure\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ] \u2b50 Run Post Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing h11 (0.14.0): Skipped for the following reason: Not required\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing pytest (7.4.0)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing pytzdata (2020.1)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing pyyaml (6.0)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing typer (0.9.0)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing uvloop (0.17.0)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing python-dateutil (2.8.2)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing watchfiles (0.19.0)\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udc33  docker cp src=/tmp/act-cache/9b1b2262-ed57-4a92-8249-ca7479b99448/act/gi0baro-setup-poetry-bin@v1.3/ dst=/var/run/act/actions/gi0baro-setup-poetry-bin@v1.3/\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/gi0baro-setup-poetry-bin@v1.3/] user=0 workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing emmett-crypto (0.3.0)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing granian (0.5.0)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing ipaddress (1.0.23)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing orjson (3.8.14): Skipped for the following reason: Not required\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing psycopg2-binary (2.9.6)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing pytest-asyncio (0.15.1)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing httptools (0.5.0): Skipped for the following reason: Not required\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing severus (1.2.2)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing pydal (17.3)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing websockets (10.4): Skipped for the following reason: Not required\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing renoir (1.6.1)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing uvicorn (0.19.0): Skipped for the following reason: Not required\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing pendulum (2.1.2)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   \u2022 Installing python-rapidjson (1.10)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | Using virtualenv: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | Installing dependencies from lock file\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | Finding the necessary packages for the current system\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | Package operations: 4 installs, 3 updates, 0 removals, 26 skipped\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing h11 (0.14.0): Skipped for the following reason: Not required\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing anyio (3.7.0): Skipped for the following reason: Already installed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing click (8.1.3): Skipped for the following reason: Already installed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing emmett-crypto (0.3.0): Skipped for the following reason: Already installed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing exceptiongroup (1.1.1): Skipped for the following reason: Already installed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing httptools (0.5.0): Skipped for the following reason: Not required\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing granian (0.5.0)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing idna (3.4): Skipped for the following reason: Already installed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing iniconfig (2.0.0): Skipped for the following reason: Already installed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing orjson (3.8.14): Skipped for the following reason: Not required\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing packaging (23.1): Skipped for the following reason: Already installed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Updating ipaddress (1.0.23 /home/runneradmin/.cache/pypoetry/artifacts/c9/d4/0c/eed788b7555ddf37fbe9ac2f5053af4fef5638189e49dd82fdb269e507/ipaddress-1.0.23-py2.py3-none-any.whl -> 1.0.23)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing psycopg2-binary (2.9.6)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing pluggy (1.2.0): Skipped for the following reason: Already installed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing pydal (17.3): Skipped for the following reason: Already installed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing pytest (7.4.0): Skipped for the following reason: Already installed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing pendulum (2.1.2)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing python-rapidjson (1.10)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Updating pytest-asyncio (0.15.1 /home/runneradmin/.cache/pypoetry/artifacts/ef/b5/11/5512df76aa16e8d35cd42e9ee8aa0380b3badf9412ec800aee00dc6478/pytest_asyncio-0.15.1-py3-none-any.whl -> 0.15.1)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Updating renoir (1.6.1 /home/runneradmin/.cache/pypoetry/artifacts/0d/0f/e0/d5e4dadcce3cf3e12bf686a67630ee72163b3408b360a5757b3e4e9028/renoir-1.6.1-py3-none-any.whl -> 1.6.1)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing severus (1.2.2): Skipped for the following reason: Already installed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing typer (0.9.0): Skipped for the following reason: Already installed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing sniffio (1.3.0): Skipped for the following reason: Already installed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing tomli (2.0.1): Skipped for the following reason: Already installed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing pyyaml (6.0): Skipped for the following reason: Already installed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing six (1.16.0): Skipped for the following reason: Already installed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing uvloop (0.17.0): Skipped for the following reason: Already installed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing typing-extensions (4.6.3): Skipped for the following reason: Already installed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing uvicorn (0.19.0): Skipped for the following reason: Not required\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing python-dateutil (2.8.2): Skipped for the following reason: Already installed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing watchfiles (0.19.0): Skipped for the following reason: Already installed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing websockets (10.4): Skipped for the following reason: Not required\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   |   \u2022 Installing pytzdata (2020.1): Skipped for the following reason: Already installed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | Installing the current project: emmett (2.5.3)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \u2705  Success - Main Install dependencies\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ]   \u2705  Success - Post Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ] \u2b50 Run Main Test\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | Installing the current project: emmett (2.5.3)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \u2705  Success - Main Install dependencies\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows] \u2b50 Run Main Test\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4.sh] user= workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/MacOS  ] \ud83c\udfc1  Job failed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | ============================= test session starts ==============================\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | ============================= test session starts ==============================\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | platform linux -- Python 3.8.11, pytest-7.4.0, pluggy-1.2.0 -- /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/bin/python\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | cachedir: .pytest_cache\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | plugins: anyio-3.7.0, asyncio-0.15.1\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | platform linux -- Python 3.8.11, pytest-7.4.0, pluggy-1.2.0 -- /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/bin/python\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | cachedir: .pytest_cache\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | plugins: anyio-3.7.0, asyncio-0.15.1\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | collecting ... collected 165 items\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | collecting ... collected 165 items\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_auth.py::test_models PASSED                                   [  0%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_auth.py::test_models ERROR                                    [  0%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_auth.py::test_registration PASSED                             [  1%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_auth.py::test_login PASSED                                    [  1%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_auth.py::test_registration ERROR                              [  1%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_auth.py::test_login ERROR                                     [  1%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_auth.py::test_password_change PASSED                          [  2%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_auth.py::test_password_change ERROR                           [  2%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_auth.py::test_password_retrieval PASSED                       [  3%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_cache.py::test_basecache PASSED                               [  3%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_cache.py::test_ramcache PASSED                                [  4%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_cache.py::test_diskcache PASSED                               [  4%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_cache.py::test_cache PASSED                                   [  5%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_cache.py::test_cache_decorator_sync PASSED                    [  6%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_cache.py::test_cache_decorator_loop PASSED                    [  6%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_http.py::test_http_default PASSED                             [  7%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_http.py::test_http_bytes PASSED                               [  7%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_http.py::test_http PASSED                                     [  8%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_http.py::test_redirect PASSED                                 [  9%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_logger.py::test_user_assign_valid_level PASSED                [  9%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_logger.py::test_user_assign_invaild_level PASSED              [ 10%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_logger.py::test_user_no_assign_level PASSED                   [ 10%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_message_init PASSED                           [ 11%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_recipients PASSED                             [ 12%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_all_recipients PASSED                         [ 12%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_sender PASSED                                 [ 13%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_sender_as_tuple PASSED                        [ 13%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_reply_to PASSED                               [ 14%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_missing_sender PASSED                         [ 15%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_missing_recipients PASSED                     [ 15%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_bcc PASSED                                    [ 16%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_cc PASSED                                     [ 16%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_attach PASSED                                 [ 17%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_bad_subject PASSED                            [ 18%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_subject PASSED                                [ 18%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_empty_subject PASSED                          [ 19%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_multiline_subject PASSED                      [ 20%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_auth.py::test_password_retrieval ERROR                        [  3%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_cache.py::test_basecache PASSED                               [  3%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_bad_sender PASSED                             [ 20%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_cache.py::test_ramcache PASSED                                [  4%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_bad_reply_to PASSED                           [ 21%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_bad_recipient PASSED                          [ 21%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_address_sanitize PASSED                       [ 22%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_plain_message PASSED                          [ 23%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_plain_message_with_attachments PASSED         [ 23%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_plain_message_with_unicode_attachments PASSED [ 24%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_cache.py::test_diskcache PASSED                               [  4%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_html_message PASSED                           [ 24%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_cache.py::test_cache PASSED                                   [  5%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_cache.py::test_cache_decorator_sync PASSED                    [  6%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_json_message PASSED                           [ 25%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_cache.py::test_cache_decorator_loop PASSED                    [  6%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_http.py::test_http_default PASSED                             [  7%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_http.py::test_http_bytes PASSED                               [  7%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_http.py::test_http PASSED                                     [  8%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_html_message_with_attachments PASSED          [ 26%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_date PASSED                                   [ 26%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_http.py::test_redirect PASSED                                 [  9%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_msgid PASSED                                  [ 27%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_logger.py::test_user_assign_valid_level PASSED                [  9%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_logger.py::test_user_assign_invaild_level PASSED              [ 10%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_logger.py::test_user_no_assign_level PASSED                   [ 10%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_unicode_addresses PASSED                      [ 27%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_message_init PASSED                           [ 11%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_extra_headers PASSED                          [ 28%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_recipients PASSED                             [ 12%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_send PASSED                                   [ 29%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_all_recipients PASSED                         [ 12%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_mailer.py::test_send_mail PASSED                              [ 29%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_sender PASSED                                 [ 13%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_sender_as_tuple PASSED                        [ 13%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_reply_to PASSED                               [ 14%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_missing_sender PASSED                         [ 15%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_missing_recipients PASSED                     [ 15%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_bcc PASSED                                    [ 16%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_cc PASSED                                     [ 16%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_attach PASSED                                 [ 17%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_bad_subject PASSED                            [ 18%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_migrations.py::test_step_one_create_table PASSED              [ 30%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_subject PASSED                                [ 18%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_empty_subject PASSED                          [ 19%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_multiline_subject PASSED                      [ 20%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_migrations.py::test_step_one_no_diff_in_migration PASSED      [ 30%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_bad_sender PASSED                             [ 20%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_bad_reply_to PASSED                           [ 21%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_bad_recipient PASSED                          [ 21%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_address_sanitize PASSED                       [ 22%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_migrations.py::test_step_one_drop_table PASSED                [ 31%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_migrations.py::test_step_two_create_table PASSED              [ 32%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_plain_message PASSED                          [ 23%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_plain_message_with_attachments PASSED         [ 23%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_migrations.py::test_step_three_create_column PASSED           [ 32%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_plain_message_with_unicode_attachments PASSED [ 24%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_migrations.py::test_step_three_drop_column PASSED             [ 33%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_html_message PASSED                           [ 24%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_migrations.py::test_step_four_alter_table PASSED              [ 33%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_json_message PASSED                           [ 25%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_migrations.py::test_step_five_indexes PASSED                  [ 34%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_migrations.py::test_step_six_id_types PASSED                  [ 35%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_html_message_with_attachments PASSED          [ 26%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_date PASSED                                   [ 26%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_migrations.py::test_step_seven_composed_pks PASSED            [ 35%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_msgid PASSED                                  [ 27%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_unicode_addresses PASSED                      [ 27%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_extra_headers PASSED                          [ 28%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_send PASSED                                   [ 29%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_mailer.py::test_send_mail PASSED                              [ 29%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_migrations.py::test_step_one_create_table PASSED              [ 30%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_migrations.py::test_step_one_no_diff_in_migration PASSED      [ 30%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_db_instance PASSED                               [ 36%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_migrations.py::test_step_one_drop_table PASSED                [ 31%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_table_definition PASSED                          [ 36%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_migrations.py::test_step_two_create_table PASSED              [ 32%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_migrations.py::test_step_three_create_column PASSED           [ 32%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_fields PASSED                                    [ 37%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_migrations.py::test_step_three_drop_column PASSED             [ 33%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_validators PASSED                                [ 38%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_migrations.py::test_step_four_alter_table PASSED              [ 33%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_migrations.py::test_step_five_indexes PASSED                  [ 34%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_migrations.py::test_step_six_id_types PASSED                  [ 35%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_migrations.py::test_step_seven_composed_pks PASSED            [ 35%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_visibility PASSED                                [ 38%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_labels PASSED                                    [ 39%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_db_instance PASSED                               [ 36%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_comments PASSED                                  [ 40%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_updates PASSED                                   [ 40%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_table_definition PASSED                          [ 36%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_representation PASSED                            [ 41%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_fields PASSED                                    [ 37%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_widgets PASSED                                   [ 41%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_validators PASSED                                [ 38%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_computations PASSED                              [ 42%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_callbacks PASSED                                 [ 43%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_visibility PASSED                                [ 38%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_save PASSED                                      [ 43%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_labels PASSED                                    [ 39%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_comments PASSED                                  [ 40%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_destroy PASSED                                   [ 44%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_updates PASSED                                   [ 40%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_representation PASSED                            [ 41%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_widgets PASSED                                   [ 41%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_computations PASSED                              [ 42%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_callbacks PASSED                                 [ 43%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_save PASSED                                      [ 43%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_destroy PASSED                                   [ 44%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_commit_callbacks PASSED                          [ 44%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_commit_callbacks PASSED                          [ 44%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_callbacks_skip PASSED                            [ 45%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_rowattrs PASSED                                  [ 46%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_callbacks_skip PASSED                            [ 45%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_rowmethods PASSED                                [ 46%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_rowattrs PASSED                                  [ 46%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_modelmethods PASSED                              [ 47%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_relations PASSED                                 [ 47%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_rowmethods PASSED                                [ 46%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_tablenames PASSED                                [ 48%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_modelmethods PASSED                              [ 47%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_inheritance PASSED                               [ 49%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_relations PASSED                                 [ 47%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_tablenames PASSED                                [ 48%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_inheritance PASSED                               [ 49%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_scopes PASSED                                    [ 49%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_scopes PASSED                                    [ 49%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_relations_scopes PASSED                          [ 50%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_relations_scopes PASSED                          [ 50%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_model_where PASSED                               [ 50%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_model_first PASSED                               [ 51%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_model_where PASSED                               [ 50%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm.py::test_model_last PASSED                                [ 52%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_connections.py::test_connection_ctx_sync PASSED           [ 52%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_model_first PASSED                               [ 51%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_connections.py::test_connection_ctx_loop PASSED           [ 53%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_gis.py::test_field_types PASSED                           [ 53%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm.py::test_model_last PASSED                                [ 52%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_connections.py::test_connection_ctx_sync PASSED           [ 52%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_connections.py::test_connection_ctx_loop PASSED           [ 53%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_gis.py::test_field_types SKIPPED (No postgres database)   [ 53%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_gis.py::test_gis_insert SKIPPED (No postgres database)    [ 54%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_gis.py::test_gis_select SKIPPED (No postgres database)    [ 55%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_pks.py::test_insert PASSED                                [ 55%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_pks.py::test_save_insert PASSED                           [ 56%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_gis.py::test_gis_insert ERROR                             [ 54%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_pks.py::test_save_update PASSED                           [ 56%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_pks.py::test_destroy_delete PASSED                        [ 57%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_pks.py::test_relations SKIPPED (No postgres database)     [ 58%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_pks.py::test_via_relations SKIPPED (No postgres database) [ 58%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_pks.py::test_relations_set SKIPPED (No postgres database) [ 59%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_pks.py::test_row SKIPPED (No postgres database)           [ 60%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_row.py::test_rowclass PASSED                              [ 60%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_row.py::test_concrete PASSED                              [ 61%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_row.py::test_changes PASSED                               [ 61%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_row.py::test_validation_methods PASSED                    [ 62%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_row.py::test_clone_methods PASSED                         [ 63%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_row.py::test_refresh PASSED                               [ 63%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_row.py::test_methods_override PASSED                      [ 64%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_row.py::test_attributes PASSED                            [ 64%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_gis.py::test_gis_select ERROR                             [ 55%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_row.py::test_relation_wrappers PASSED                     [ 65%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_pks.py::test_insert PASSED                                [ 55%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_row.py::test_password_wrapper PASSED                      [ 66%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_pks.py::test_save_insert PASSED                           [ 56%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_row.py::test_pickle PASSED                                [ 66%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_pks.py::test_save_update PASSED                           [ 56%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_transactions.py::test_transactions PASSED                 [ 67%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_transactions.py::test_commit_rollback PASSED              [ 67%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_transactions.py::test_commit_rollback_nested PASSED       [ 68%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_transactions.py::test_nested_transaction_obj PASSED       [ 69%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_orm_transactions.py::test_savepoint_commit PASSED             [ 69%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_pks.py::test_destroy_delete PASSED                        [ 57%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_pipeline.py::test_ok_flow PASSED                              [ 70%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_pipeline.py::test_httperror_flow PASSED                       [ 70%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_pipeline.py::test_error_flow PASSED                           [ 71%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_pipeline.py::test_open_error PASSED                           [ 72%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_pipeline.py::test_close_error PASSED                          [ 72%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_pipeline.py::test_flow_interrupt PASSED                       [ 73%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_pipeline.py::test_pipeline_composition PASSED                 [ 73%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_pipeline.py::test_module_pipeline PASSED                      [ 74%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_pipeline.py::test_module_pipeline_composition PASSED          [ 75%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_pipeline.py::test_module_group_pipeline PASSED                [ 75%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_pipeline.py::test_module_group_pipeline_composition PASSED    [ 76%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_pipeline.py::test_receive_send_flow PASSED                    [ 76%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_pipeline.py::test_injectors PASSED                            [ 77%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_routing.py::test_routing PASSED                               [ 78%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_routing.py::test_route_args PASSED                            [ 78%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_routing.py::test_routing_valid_route PASSED                   [ 79%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_routing.py::test_routing_not_found_route PASSED               [ 80%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_routing.py::test_routing_exception_route PASSED               [ 80%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_routing.py::test_static_url PASSED                            [ 81%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_routing.py::test_module_url PASSED                            [ 81%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_routing.py::test_global_url_prefix PASSED                     [ 82%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_session.py::test_session_cookie PASSED                        [ 83%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_templates.py::test_helpers PASSED                             [ 83%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_templates.py::test_meta PASSED                                [ 84%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_templates.py::test_static PASSED                              [ 84%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_templates.py::test_render PASSED                              [ 85%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_translator.py::test_translation PASSED                        [ 86%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_utils.py::test_cachedprop_sync PASSED                         [ 86%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_utils.py::test_cachedprop_loop PASSED                         [ 87%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_utils.py::test_is_valid_ip_address PASSED                     [ 87%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_utils.py::test_dict_to_sdict PASSED                           [ 88%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_validators.py::test_defaults PASSED                           [ 89%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_validators.py::test_defaults_disable PASSED                   [ 89%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_validators.py::test_requires_vs_validators PASSED             [ 90%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_validators.py::test_is PASSED                                 [ 90%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_validators.py::test_len PASSED                                [ 91%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_validators.py::test_in PASSED                                 [ 92%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_validators.py::test_numerical PASSED                          [ 92%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_validators.py::test_eq PASSED                                 [ 93%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_validators.py::test_match PASSED                              [ 93%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_validators.py::test_any PASSED                                [ 94%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_validators.py::test_processors PASSED                         [ 95%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_validators.py::test_presence PASSED                           [ 95%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_validators.py::test_unique PASSED                             [ 96%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_validators.py::test_allow PASSED                              [ 96%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_validators.py::test_validation PASSED                         [ 97%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_validators.py::test_multi PASSED                              [ 98%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_wrappers.py::test_request PASSED                              [ 98%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_wrappers.py::test_response PASSED                             [ 99%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | tests/test_wrappers.py::test_req_ctx PASSED                              [100%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/report.xml -\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   | ======================== 158 passed, 7 skipped in 6.99s ========================\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \u2705  Success - Main Test\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows] \u2b50 Run Post Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udc33  docker cp src=/tmp/act-cache/9b1b2262-ed57-4a92-8249-ca7479b99448/act/gi0baro-setup-poetry-bin@v1.3/ dst=/var/run/act/actions/gi0baro-setup-poetry-bin@v1.3/\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/gi0baro-setup-poetry-bin@v1.3/] user=0 workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_pks.py::test_relations ERROR                              [ 58%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_pks.py::test_via_relations ERROR                          [ 58%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_pks.py::test_relations_set ERROR                          [ 59%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_pks.py::test_row ERROR                                    [ 60%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_row.py::test_rowclass PASSED                              [ 60%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_row.py::test_concrete PASSED                              [ 61%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_row.py::test_changes PASSED                               [ 61%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_row.py::test_validation_methods PASSED                    [ 62%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_row.py::test_clone_methods PASSED                         [ 63%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_row.py::test_refresh PASSED                               [ 63%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_row.py::test_methods_override PASSED                      [ 64%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_row.py::test_attributes PASSED                            [ 64%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_row.py::test_relation_wrappers PASSED                     [ 65%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_row.py::test_password_wrapper PASSED                      [ 66%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_row.py::test_pickle PASSED                                [ 66%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_transactions.py::test_transactions PASSED                 [ 67%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_transactions.py::test_commit_rollback PASSED              [ 67%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_transactions.py::test_commit_rollback_nested PASSED       [ 68%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_transactions.py::test_nested_transaction_obj PASSED       [ 69%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_transactions.py::test_savepoint_commit PASSED             [ 69%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_pipeline.py::test_ok_flow PASSED                              [ 70%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_pipeline.py::test_httperror_flow PASSED                       [ 70%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_pipeline.py::test_error_flow PASSED                           [ 71%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_pipeline.py::test_open_error PASSED                           [ 72%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_pipeline.py::test_close_error PASSED                          [ 72%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_pipeline.py::test_flow_interrupt PASSED                       [ 73%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_pipeline.py::test_pipeline_composition PASSED                 [ 73%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_pipeline.py::test_module_pipeline PASSED                      [ 74%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_pipeline.py::test_module_pipeline_composition PASSED          [ 75%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_pipeline.py::test_module_group_pipeline PASSED                [ 75%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_pipeline.py::test_module_group_pipeline_composition PASSED    [ 76%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_pipeline.py::test_receive_send_flow PASSED                    [ 76%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_pipeline.py::test_injectors PASSED                            [ 77%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_routing.py::test_routing PASSED                               [ 78%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_routing.py::test_route_args PASSED                            [ 78%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_routing.py::test_routing_valid_route PASSED                   [ 79%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_routing.py::test_routing_not_found_route PASSED               [ 80%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_routing.py::test_routing_exception_route PASSED               [ 80%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_routing.py::test_static_url PASSED                            [ 81%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_routing.py::test_module_url PASSED                            [ 81%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_routing.py::test_global_url_prefix PASSED                     [ 82%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_session.py::test_session_cookie PASSED                        [ 83%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_templates.py::test_helpers PASSED                             [ 83%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_templates.py::test_meta PASSED                                [ 84%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_templates.py::test_static PASSED                              [ 84%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_templates.py::test_render PASSED                              [ 85%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_translator.py::test_translation PASSED                        [ 86%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_utils.py::test_cachedprop_sync PASSED                         [ 86%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_utils.py::test_cachedprop_loop PASSED                         [ 87%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_utils.py::test_is_valid_ip_address PASSED                     [ 87%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_utils.py::test_dict_to_sdict PASSED                           [ 88%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_validators.py::test_defaults PASSED                           [ 89%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_validators.py::test_defaults_disable PASSED                   [ 89%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_validators.py::test_requires_vs_validators PASSED             [ 90%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_validators.py::test_is PASSED                                 [ 90%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_validators.py::test_len PASSED                                [ 91%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_validators.py::test_in PASSED                                 [ 92%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_validators.py::test_numerical PASSED                          [ 92%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_validators.py::test_eq PASSED                                 [ 93%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_validators.py::test_match PASSED                              [ 93%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_validators.py::test_any PASSED                                [ 94%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_validators.py::test_processors PASSED                         [ 95%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_validators.py::test_presence PASSED                           [ 95%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_validators.py::test_unique PASSED                             [ 96%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_validators.py::test_allow PASSED                              [ 96%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_validators.py::test_validation PASSED                         [ 97%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_validators.py::test_multi PASSED                              [ 98%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_wrappers.py::test_request PASSED                              [ 98%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_wrappers.py::test_response PASSED                             [ 99%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_wrappers.py::test_req_ctx PASSED                              [100%]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | ==================================== ERRORS ====================================\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | ________________________ ERROR at setup of test_models _________________________\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | app = <emmett.app.App object at 0x7f84b67874f0>\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _db = <DAL uri=\"sqlite://dummy.db\">\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | mailer = <emmett.tools.mailer.Mailer object at 0x7f84b71c6640>\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     @pytest.fixture(scope='module')\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     def auth(app, _db, mailer):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | >       auth = Auth(app, _db, user_model=User)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_auth.py:62: \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/tools/auth/apis.py:33: in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.ext.use_database(db, user_model)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/tools/auth/ext.py:199: in use_database\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.define_models()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/tools/auth/ext.py:277: in define_models\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.db.define_models(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/base.py:202: in define_models\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     model.table = self.define_table(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/base.py:587: in define_table\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     table = self.lazy_define_table(tablename, *fields, **args)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/base.py:618: in lazy_define_table\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self._adapter.create_table(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/adapters/base.py:795: in create_table\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self.migrator.create_table(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/migrator.py:278: in create_table\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     db.commit()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/base.py:252: in commit\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     txn.commit()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/transactions.py:69: in commit\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.adapter.commit()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/adapters/__init__.py:56: in wrap\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return f(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | self = <emmett.orm.engines.sqlite.SQLite object at 0x7f84b67e6280>\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     @with_connection\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     def commit(self):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | >       return self.connection.commit()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E       sqlite3.OperationalError: disk I/O error\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/adapters/base.py:859: OperationalError\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _____________________ ERROR at setup of test_registration ______________________\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | app = <emmett.app.App object at 0x7f84b67874f0>\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _db = <DAL uri=\"sqlite://dummy.db\">\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | mailer = <emmett.tools.mailer.Mailer object at 0x7f84b71c6640>\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     @pytest.fixture(scope='module')\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     def auth(app, _db, mailer):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | >       auth = Auth(app, _db, user_model=User)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_auth.py:62: \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/tools/auth/apis.py:33: in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.ext.use_database(db, user_model)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/tools/auth/ext.py:199: in use_database\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.define_models()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/tools/auth/ext.py:277: in define_models\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.db.define_models(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/base.py:202: in define_models\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     model.table = self.define_table(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/base.py:587: in define_table\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     table = self.lazy_define_table(tablename, *fields, **args)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/base.py:618: in lazy_define_table\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self._adapter.create_table(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/adapters/base.py:795: in create_table\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self.migrator.create_table(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/migrator.py:278: in create_table\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     db.commit()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/base.py:252: in commit\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     txn.commit()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/transactions.py:69: in commit\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.adapter.commit()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/adapters/__init__.py:56: in wrap\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return f(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | self = <emmett.orm.engines.sqlite.SQLite object at 0x7f84b67e6280>\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     @with_connection\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     def commit(self):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | >       return self.connection.commit()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E       sqlite3.OperationalError: disk I/O error\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/adapters/base.py:859: OperationalError\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _________________________ ERROR at setup of test_login _________________________\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | app = <emmett.app.App object at 0x7f84b67874f0>\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _db = <DAL uri=\"sqlite://dummy.db\">\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | mailer = <emmett.tools.mailer.Mailer object at 0x7f84b71c6640>\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     @pytest.fixture(scope='module')\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     def auth(app, _db, mailer):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | >       auth = Auth(app, _db, user_model=User)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_auth.py:62: \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/tools/auth/apis.py:33: in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.ext.use_database(db, user_model)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/tools/auth/ext.py:199: in use_database\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.define_models()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/tools/auth/ext.py:277: in define_models\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.db.define_models(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/base.py:202: in define_models\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     model.table = self.define_table(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/base.py:587: in define_table\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     table = self.lazy_define_table(tablename, *fields, **args)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/base.py:618: in lazy_define_table\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self._adapter.create_table(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/adapters/base.py:795: in create_table\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self.migrator.create_table(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/migrator.py:278: in create_table\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     db.commit()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/base.py:252: in commit\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     txn.commit()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/transactions.py:69: in commit\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.adapter.commit()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/adapters/__init__.py:56: in wrap\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return f(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | self = <emmett.orm.engines.sqlite.SQLite object at 0x7f84b67e6280>\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     @with_connection\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     def commit(self):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | >       return self.connection.commit()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E       sqlite3.OperationalError: disk I/O error\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/adapters/base.py:859: OperationalError\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | ____________________ ERROR at setup of test_password_change ____________________\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | app = <emmett.app.App object at 0x7f84b67874f0>\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _db = <DAL uri=\"sqlite://dummy.db\">\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | mailer = <emmett.tools.mailer.Mailer object at 0x7f84b71c6640>\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     @pytest.fixture(scope='module')\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     def auth(app, _db, mailer):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | >       auth = Auth(app, _db, user_model=User)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_auth.py:62: \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/tools/auth/apis.py:33: in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.ext.use_database(db, user_model)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/tools/auth/ext.py:199: in use_database\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.define_models()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/tools/auth/ext.py:277: in define_models\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.db.define_models(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/base.py:202: in define_models\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     model.table = self.define_table(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/base.py:587: in define_table\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     table = self.lazy_define_table(tablename, *fields, **args)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/base.py:618: in lazy_define_table\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self._adapter.create_table(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/adapters/base.py:795: in create_table\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self.migrator.create_table(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/migrator.py:278: in create_table\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     db.commit()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/base.py:252: in commit\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     txn.commit()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/transactions.py:69: in commit\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.adapter.commit()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/adapters/__init__.py:56: in wrap\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return f(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | self = <emmett.orm.engines.sqlite.SQLite object at 0x7f84b67e6280>\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     @with_connection\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     def commit(self):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | >       return self.connection.commit()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E       sqlite3.OperationalError: disk I/O error\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/adapters/base.py:859: OperationalError\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | __________________ ERROR at setup of test_password_retrieval ___________________\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | app = <emmett.app.App object at 0x7f84b67874f0>\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _db = <DAL uri=\"sqlite://dummy.db\">\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | mailer = <emmett.tools.mailer.Mailer object at 0x7f84b71c6640>\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     @pytest.fixture(scope='module')\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     def auth(app, _db, mailer):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | >       auth = Auth(app, _db, user_model=User)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_auth.py:62: \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/tools/auth/apis.py:33: in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.ext.use_database(db, user_model)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/tools/auth/ext.py:199: in use_database\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.define_models()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/tools/auth/ext.py:277: in define_models\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.db.define_models(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/base.py:202: in define_models\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     model.table = self.define_table(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/base.py:587: in define_table\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     table = self.lazy_define_table(tablename, *fields, **args)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/base.py:618: in lazy_define_table\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self._adapter.create_table(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/adapters/base.py:795: in create_table\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self.migrator.create_table(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/migrator.py:278: in create_table\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     db.commit()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/base.py:252: in commit\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     txn.commit()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/transactions.py:69: in commit\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.adapter.commit()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/adapters/__init__.py:56: in wrap\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return f(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | self = <emmett.orm.engines.sqlite.SQLite object at 0x7f84b67e6280>\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     @with_connection\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     def commit(self):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | >       return self.connection.commit()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E       sqlite3.OperationalError: disk I/O error\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/adapters/base.py:859: OperationalError\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | ______________________ ERROR at setup of test_gis_insert _______________________\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _db = <DAL uri=\"postgres:******@localhost:5432/test\">\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     @pytest.fixture(scope='function')\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     def db(_db):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         migration = generate_runtime_migration(_db)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | >       with _db.connection():\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_gis.py:62: \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/helpers.py:493: in __enter__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.conn = self.db.connection_open(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/base.py:157: in connection_open\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self._adapter.reconnect(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/connection.py:329: in _connect_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.connection, _opened = self._connection_manager.connect_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/connection.py:228: in connect_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     rv = self._acquire_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/connection.py:258: in _acquire_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     conn, _opened = self._connection_open_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/connection.py:156: in _connection_open_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self._connector_sync(), True\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/connection.py:151: in _connector_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self.adapter.connector()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/adapters/postgres.py:103: in connector\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self.driver.connect(**self.driver_args)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | dsn = 'user=postgres host=localhost port=5432 password=postgres dbname=test'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | connection_factory = None, cursor_factory = None\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | kwargs = {'database': 'test', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | kwasync = {}\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         \"\"\"\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         Create a new database connection.\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         The connection parameters can be specified as a string:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         or using a set of keyword arguments:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         Or as a mix of both. The basic connection parameters are:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         - *dbname*: the database name\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         - *database*: the database name (only as keyword argument)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         - *user*: user name used to authenticate\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         - *password*: password used to authenticate\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         Using the *connection_factory* parameter a different class or connections\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         factory can be specified. It should be a callable object taking a dsn\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         argument.\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         used by cursor().\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         Any other keyword parameter will be passed to the underlying client\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         library: the list of supported parameters depends on the library version.\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         \"\"\"\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         kwasync = {}\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if 'async' in kwargs:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             kwasync['async'] = kwargs.pop('async')\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if 'async_' in kwargs:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             kwasync['async_'] = kwargs.pop('async_')\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/psycopg2/__init__.py:122: OperationalError\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | ______________________ ERROR at setup of test_gis_select _______________________\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _db = <DAL uri=\"postgres:******@localhost:5432/test\">\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     @pytest.fixture(scope='function')\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     def db(_db):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         migration = generate_runtime_migration(_db)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | >       with _db.connection():\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_gis.py:62: \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/helpers.py:493: in __enter__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.conn = self.db.connection_open(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/base.py:157: in connection_open\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self._adapter.reconnect(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/connection.py:329: in _connect_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.connection, _opened = self._connection_manager.connect_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/connection.py:228: in connect_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     rv = self._acquire_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/connection.py:258: in _acquire_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     conn, _opened = self._connection_open_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/connection.py:156: in _connection_open_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self._connector_sync(), True\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/connection.py:151: in _connector_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self.adapter.connector()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/adapters/postgres.py:103: in connector\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self.driver.connect(**self.driver_args)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | dsn = 'user=postgres host=localhost port=5432 password=postgres dbname=test'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | connection_factory = None, cursor_factory = None\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | kwargs = {'database': 'test', 'host': 'localhost', 'password': 'postgres', 'port': 5432, ...}\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | kwasync = {}\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         \"\"\"\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         Create a new database connection.\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         The connection parameters can be specified as a string:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         or using a set of keyword arguments:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         Or as a mix of both. The basic connection parameters are:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         - *dbname*: the database name\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         - *database*: the database name (only as keyword argument)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         - *user*: user name used to authenticate\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         - *password*: password used to authenticate\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         Using the *connection_factory* parameter a different class or connections\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         factory can be specified. It should be a callable object taking a dsn\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         argument.\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         used by cursor().\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         Any other keyword parameter will be passed to the underlying client\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         library: the list of supported parameters depends on the library version.\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         \"\"\"\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         kwasync = {}\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if 'async' in kwargs:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             kwasync['async'] = kwargs.pop('async')\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if 'async_' in kwargs:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             kwasync['async_'] = kwargs.pop('async_')\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/psycopg2/__init__.py:122: OperationalError\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _______________________ ERROR at setup of test_relations _______________________\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     @pytest.fixture(scope='module')\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     def _pgs():\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         app = App(__name__)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | >       db = Database(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             app,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             config=sdict(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 uri=f\"postgres://{os.environ.get('POSTGRES_URI')}\",\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 auto_connect=True\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_pks.py:210: \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/base.py:170: in __call__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     obj = super(MetaDAL, cls).__call__(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/base.py:142: in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     super(Database, self).__init__(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | self = <[AttributeError(\"'Database' object has no attribute '_adapter'\") raised in repr()] Database object at 0x7f84b6ef3b50>\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | uri = 'postgres://postgres:postgres@localhost:5432/test', pool_size = 5\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | folder = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/tests/databases'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | db_codec = 'UTF-8', check_reserved = None, migrate = False, fake_migrate = False\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | migrate_enabled = True, fake_migrate_all = False, decode_credentials = False\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | driver_args = None, adapter_args = None, attempts = 5, auto_import = False\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | bigint_id = False, debug = False, lazy_tables = False, db_uid = None\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | do_connect = True, after_connection = None, tables = None\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | ignore_field_case = True, entity_quoting = True, table_hash = None\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     def __init__(self, uri='sqlite://dummy.db',\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  pool_size=0, folder=None,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  db_codec='UTF-8', check_reserved=None,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  migrate=True, fake_migrate=False,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  migrate_enabled=True, fake_migrate_all=False,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  decode_credentials=False, driver_args=None,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  adapter_args=None, attempts=5, auto_import=False,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  bigint_id=False, debug=False, lazy_tables=False,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  db_uid=None, do_connect=True,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  after_connection=None, tables=None, ignore_field_case=True,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  entity_quoting=True, table_hash=None):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if uri == '<zombie>' and db_uid is not None:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             return\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         super(DAL, self).__init__()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if not issubclass(self.Rows, Rows):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             raise RuntimeError(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 '`Rows` class must be a subclass of pydal.objects.Rows'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if not issubclass(self.Row, Row):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             raise RuntimeError(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 '`Row` class must be a subclass of pydal.objects.Row'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         from .drivers import DRIVERS, is_jdbc\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._drivers_available = DRIVERS\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if not decode_credentials:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             credential_decoder = lambda cred: cred\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         else:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             credential_decoder = lambda cred: urllib.unquote(cred)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._folder = folder\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if folder:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             self.set_folder(folder)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._uri = uri\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._pool_size = pool_size\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._db_codec = db_codec\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._pending_references = {}\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._request_tenant = 'request_tenant'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._common_fields = []\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._referee_name = '%(table)s'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._bigint_id = bigint_id\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._debug = debug\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._migrated = []\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._LAZY_TABLES = {}\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._lazy_tables = lazy_tables\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._tables = SQLCallableList()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._driver_args = driver_args\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._adapter_args = adapter_args\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._check_reserved = check_reserved\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._decode_credentials = decode_credentials\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._attempts = attempts\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._do_connect = do_connect\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._ignore_field_case = ignore_field_case\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if not str(attempts).isdigit() or attempts < 0:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             attempts = 5\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if uri:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             uris = isinstance(uri, (list, tuple)) and uri or [uri]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             connected = False\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             for k in range(attempts):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 for uri in uris:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     try:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         from .adapters import adapters\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         if is_jdbc and not uri.startswith('jdbc:'):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                             uri = 'jdbc:' + uri\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         self._dbname = REGEX_DBNAME.match(uri).group()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         # notice that driver args or {} else driver_args\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         # defaults to {} global, not correct\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         kwargs = dict(db=self,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       uri=uri,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       pool_size=pool_size,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       folder=folder,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       db_codec=db_codec,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       credential_decoder=credential_decoder,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       driver_args=driver_args or {},\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       adapter_args=adapter_args or {},\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       do_connect=do_connect,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       after_connection=after_connection,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       entity_quoting=entity_quoting)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         adapter = adapters.get_for(self._dbname)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         self._adapter = adapter(**kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         #self._adapter.ignore_field_case = ignore_field_case\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         if bigint_id:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                             self._adapter.dialect._force_bigints()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         connected = True\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         break\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     except SyntaxError:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         raise\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     except Exception:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         tb = traceback.format_exc()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         self.logger.debug(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                             'DEBUG: connect attempt %i, connection error:\\n%s'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                             % (k, tb)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 if connected:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     break\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 else:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     time.sleep(1)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             if not connected:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | >               raise RuntimeError(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     \"Failure to connect, tried %d times:\\n%s\" % (attempts, tb)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E               RuntimeError: Failure to connect, tried 5 times:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E               Traceback (most recent call last):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/base.py\", line 455, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   self._adapter = adapter(**kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 13, in __call__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   return AdapterMeta.__call__(cls, *args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/__init__.py\", line 40, in __call__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   obj = super(AdapterMeta, cls).__call__(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 46, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   super(Postgre, self).__init__(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 367, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   super(SQLAdapter, self).__init__(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 52, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   self.reconnect()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 329, in _connect_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   self.connection, _opened = self._connection_manager.connect_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 228, in connect_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   rv = self._acquire_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 258, in _acquire_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   conn, _opened = self._connection_open_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 156, in _connection_open_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   return self._connector_sync(), True\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 151, in _connector_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   return self.adapter.connector()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 103, in connector\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   return self.driver.connect(**self.driver_args)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/psycopg2/__init__.py\", line 122, in connect\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E               psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E               \tIs the server running on that host and accepting TCP/IP connections?\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/base.py:474: RuntimeError\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _____________________ ERROR at setup of test_via_relations _____________________\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     @pytest.fixture(scope='module')\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     def _pgs():\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         app = App(__name__)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | >       db = Database(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             app,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             config=sdict(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 uri=f\"postgres://{os.environ.get('POSTGRES_URI')}\",\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 auto_connect=True\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_pks.py:210: \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/base.py:170: in __call__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     obj = super(MetaDAL, cls).__call__(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/base.py:142: in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     super(Database, self).__init__(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | self = <[AttributeError(\"'Database' object has no attribute '_adapter'\") raised in repr()] Database object at 0x7f84b6ef3b50>\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | uri = 'postgres://postgres:postgres@localhost:5432/test', pool_size = 5\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | folder = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/tests/databases'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | db_codec = 'UTF-8', check_reserved = None, migrate = False, fake_migrate = False\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | migrate_enabled = True, fake_migrate_all = False, decode_credentials = False\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | driver_args = None, adapter_args = None, attempts = 5, auto_import = False\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | bigint_id = False, debug = False, lazy_tables = False, db_uid = None\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | do_connect = True, after_connection = None, tables = None\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | ignore_field_case = True, entity_quoting = True, table_hash = None\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     def __init__(self, uri='sqlite://dummy.db',\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  pool_size=0, folder=None,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  db_codec='UTF-8', check_reserved=None,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  migrate=True, fake_migrate=False,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  migrate_enabled=True, fake_migrate_all=False,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  decode_credentials=False, driver_args=None,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  adapter_args=None, attempts=5, auto_import=False,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  bigint_id=False, debug=False, lazy_tables=False,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  db_uid=None, do_connect=True,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  after_connection=None, tables=None, ignore_field_case=True,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  entity_quoting=True, table_hash=None):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if uri == '<zombie>' and db_uid is not None:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             return\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         super(DAL, self).__init__()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if not issubclass(self.Rows, Rows):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             raise RuntimeError(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 '`Rows` class must be a subclass of pydal.objects.Rows'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if not issubclass(self.Row, Row):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             raise RuntimeError(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 '`Row` class must be a subclass of pydal.objects.Row'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         from .drivers import DRIVERS, is_jdbc\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._drivers_available = DRIVERS\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if not decode_credentials:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             credential_decoder = lambda cred: cred\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         else:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             credential_decoder = lambda cred: urllib.unquote(cred)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._folder = folder\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if folder:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             self.set_folder(folder)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._uri = uri\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._pool_size = pool_size\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._db_codec = db_codec\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._pending_references = {}\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._request_tenant = 'request_tenant'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._common_fields = []\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._referee_name = '%(table)s'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._bigint_id = bigint_id\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._debug = debug\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._migrated = []\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._LAZY_TABLES = {}\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._lazy_tables = lazy_tables\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._tables = SQLCallableList()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._driver_args = driver_args\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._adapter_args = adapter_args\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._check_reserved = check_reserved\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._decode_credentials = decode_credentials\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._attempts = attempts\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._do_connect = do_connect\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._ignore_field_case = ignore_field_case\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if not str(attempts).isdigit() or attempts < 0:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             attempts = 5\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if uri:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             uris = isinstance(uri, (list, tuple)) and uri or [uri]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             connected = False\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             for k in range(attempts):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 for uri in uris:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     try:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         from .adapters import adapters\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         if is_jdbc and not uri.startswith('jdbc:'):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                             uri = 'jdbc:' + uri\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         self._dbname = REGEX_DBNAME.match(uri).group()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         # notice that driver args or {} else driver_args\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         # defaults to {} global, not correct\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         kwargs = dict(db=self,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       uri=uri,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       pool_size=pool_size,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       folder=folder,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       db_codec=db_codec,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       credential_decoder=credential_decoder,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       driver_args=driver_args or {},\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       adapter_args=adapter_args or {},\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       do_connect=do_connect,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       after_connection=after_connection,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       entity_quoting=entity_quoting)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         adapter = adapters.get_for(self._dbname)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         self._adapter = adapter(**kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         #self._adapter.ignore_field_case = ignore_field_case\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         if bigint_id:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                             self._adapter.dialect._force_bigints()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         connected = True\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         break\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     except SyntaxError:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         raise\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     except Exception:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         tb = traceback.format_exc()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         self.logger.debug(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                             'DEBUG: connect attempt %i, connection error:\\n%s'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                             % (k, tb)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 if connected:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     break\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 else:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     time.sleep(1)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             if not connected:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | >               raise RuntimeError(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     \"Failure to connect, tried %d times:\\n%s\" % (attempts, tb)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E               RuntimeError: Failure to connect, tried 5 times:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E               Traceback (most recent call last):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/base.py\", line 455, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   self._adapter = adapter(**kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 13, in __call__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   return AdapterMeta.__call__(cls, *args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/__init__.py\", line 40, in __call__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   obj = super(AdapterMeta, cls).__call__(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 46, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   super(Postgre, self).__init__(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 367, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   super(SQLAdapter, self).__init__(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 52, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   self.reconnect()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 329, in _connect_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   self.connection, _opened = self._connection_manager.connect_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 228, in connect_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   rv = self._acquire_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 258, in _acquire_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   conn, _opened = self._connection_open_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 156, in _connection_open_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   return self._connector_sync(), True\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 151, in _connector_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   return self.adapter.connector()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 103, in connector\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   return self.driver.connect(**self.driver_args)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/psycopg2/__init__.py\", line 122, in connect\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E               psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E               \tIs the server running on that host and accepting TCP/IP connections?\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/base.py:474: RuntimeError\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _____________________ ERROR at setup of test_relations_set _____________________\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     @pytest.fixture(scope='module')\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     def _pgs():\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         app = App(__name__)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | >       db = Database(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             app,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             config=sdict(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 uri=f\"postgres://{os.environ.get('POSTGRES_URI')}\",\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 auto_connect=True\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_pks.py:210: \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/base.py:170: in __call__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     obj = super(MetaDAL, cls).__call__(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/base.py:142: in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     super(Database, self).__init__(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | self = <[AttributeError(\"'Database' object has no attribute '_adapter'\") raised in repr()] Database object at 0x7f84b6ef3b50>\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | uri = 'postgres://postgres:postgres@localhost:5432/test', pool_size = 5\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | folder = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/tests/databases'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | db_codec = 'UTF-8', check_reserved = None, migrate = False, fake_migrate = False\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | migrate_enabled = True, fake_migrate_all = False, decode_credentials = False\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | driver_args = None, adapter_args = None, attempts = 5, auto_import = False\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | bigint_id = False, debug = False, lazy_tables = False, db_uid = None\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | do_connect = True, after_connection = None, tables = None\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | ignore_field_case = True, entity_quoting = True, table_hash = None\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     def __init__(self, uri='sqlite://dummy.db',\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  pool_size=0, folder=None,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  db_codec='UTF-8', check_reserved=None,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  migrate=True, fake_migrate=False,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  migrate_enabled=True, fake_migrate_all=False,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  decode_credentials=False, driver_args=None,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  adapter_args=None, attempts=5, auto_import=False,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  bigint_id=False, debug=False, lazy_tables=False,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  db_uid=None, do_connect=True,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  after_connection=None, tables=None, ignore_field_case=True,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  entity_quoting=True, table_hash=None):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if uri == '<zombie>' and db_uid is not None:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             return\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         super(DAL, self).__init__()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if not issubclass(self.Rows, Rows):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             raise RuntimeError(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 '`Rows` class must be a subclass of pydal.objects.Rows'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if not issubclass(self.Row, Row):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             raise RuntimeError(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 '`Row` class must be a subclass of pydal.objects.Row'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         from .drivers import DRIVERS, is_jdbc\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._drivers_available = DRIVERS\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if not decode_credentials:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             credential_decoder = lambda cred: cred\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         else:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             credential_decoder = lambda cred: urllib.unquote(cred)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._folder = folder\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if folder:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             self.set_folder(folder)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._uri = uri\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._pool_size = pool_size\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._db_codec = db_codec\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._pending_references = {}\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._request_tenant = 'request_tenant'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._common_fields = []\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._referee_name = '%(table)s'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._bigint_id = bigint_id\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._debug = debug\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._migrated = []\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._LAZY_TABLES = {}\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._lazy_tables = lazy_tables\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._tables = SQLCallableList()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._driver_args = driver_args\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._adapter_args = adapter_args\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._check_reserved = check_reserved\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._decode_credentials = decode_credentials\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._attempts = attempts\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._do_connect = do_connect\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._ignore_field_case = ignore_field_case\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if not str(attempts).isdigit() or attempts < 0:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             attempts = 5\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if uri:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             uris = isinstance(uri, (list, tuple)) and uri or [uri]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             connected = False\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             for k in range(attempts):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 for uri in uris:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     try:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         from .adapters import adapters\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         if is_jdbc and not uri.startswith('jdbc:'):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                             uri = 'jdbc:' + uri\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         self._dbname = REGEX_DBNAME.match(uri).group()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         # notice that driver args or {} else driver_args\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         # defaults to {} global, not correct\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         kwargs = dict(db=self,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       uri=uri,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       pool_size=pool_size,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       folder=folder,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       db_codec=db_codec,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       credential_decoder=credential_decoder,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       driver_args=driver_args or {},\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       adapter_args=adapter_args or {},\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       do_connect=do_connect,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       after_connection=after_connection,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       entity_quoting=entity_quoting)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         adapter = adapters.get_for(self._dbname)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         self._adapter = adapter(**kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         #self._adapter.ignore_field_case = ignore_field_case\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         if bigint_id:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                             self._adapter.dialect._force_bigints()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         connected = True\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         break\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     except SyntaxError:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         raise\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     except Exception:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         tb = traceback.format_exc()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         self.logger.debug(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                             'DEBUG: connect attempt %i, connection error:\\n%s'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                             % (k, tb)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 if connected:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     break\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 else:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     time.sleep(1)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             if not connected:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | >               raise RuntimeError(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     \"Failure to connect, tried %d times:\\n%s\" % (attempts, tb)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E               RuntimeError: Failure to connect, tried 5 times:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E               Traceback (most recent call last):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/base.py\", line 455, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   self._adapter = adapter(**kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 13, in __call__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   return AdapterMeta.__call__(cls, *args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/__init__.py\", line 40, in __call__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   obj = super(AdapterMeta, cls).__call__(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 46, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   super(Postgre, self).__init__(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 367, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   super(SQLAdapter, self).__init__(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 52, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   self.reconnect()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 329, in _connect_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   self.connection, _opened = self._connection_manager.connect_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 228, in connect_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   rv = self._acquire_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 258, in _acquire_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   conn, _opened = self._connection_open_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 156, in _connection_open_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   return self._connector_sync(), True\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 151, in _connector_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   return self.adapter.connector()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 103, in connector\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   return self.driver.connect(**self.driver_args)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/psycopg2/__init__.py\", line 122, in connect\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E               psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E               \tIs the server running on that host and accepting TCP/IP connections?\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/base.py:474: RuntimeError\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | __________________________ ERROR at setup of test_row __________________________\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     @pytest.fixture(scope='module')\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     def _pgs():\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         app = App(__name__)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | >       db = Database(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             app,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             config=sdict(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 uri=f\"postgres://{os.environ.get('POSTGRES_URI')}\",\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 auto_connect=True\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | tests/test_orm_pks.py:210: \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/base.py:170: in __call__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     obj = super(MetaDAL, cls).__call__(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | emmett/orm/base.py:142: in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     super(Database, self).__init__(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | self = <[AttributeError(\"'Database' object has no attribute '_adapter'\") raised in repr()] Database object at 0x7f84b6ef3b50>\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | uri = 'postgres://postgres:postgres@localhost:5432/test', pool_size = 5\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | folder = '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/tests/databases'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | db_codec = 'UTF-8', check_reserved = None, migrate = False, fake_migrate = False\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | migrate_enabled = True, fake_migrate_all = False, decode_credentials = False\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | driver_args = None, adapter_args = None, attempts = 5, auto_import = False\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | bigint_id = False, debug = False, lazy_tables = False, db_uid = None\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | do_connect = True, after_connection = None, tables = None\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | ignore_field_case = True, entity_quoting = True, table_hash = None\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     def __init__(self, uri='sqlite://dummy.db',\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  pool_size=0, folder=None,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  db_codec='UTF-8', check_reserved=None,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  migrate=True, fake_migrate=False,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  migrate_enabled=True, fake_migrate_all=False,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  decode_credentials=False, driver_args=None,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  adapter_args=None, attempts=5, auto_import=False,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  bigint_id=False, debug=False, lazy_tables=False,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  db_uid=None, do_connect=True,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  after_connection=None, tables=None, ignore_field_case=True,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                  entity_quoting=True, table_hash=None):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if uri == '<zombie>' and db_uid is not None:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             return\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         super(DAL, self).__init__()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if not issubclass(self.Rows, Rows):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             raise RuntimeError(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 '`Rows` class must be a subclass of pydal.objects.Rows'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if not issubclass(self.Row, Row):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             raise RuntimeError(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 '`Row` class must be a subclass of pydal.objects.Row'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         from .drivers import DRIVERS, is_jdbc\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._drivers_available = DRIVERS\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if not decode_credentials:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             credential_decoder = lambda cred: cred\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         else:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             credential_decoder = lambda cred: urllib.unquote(cred)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._folder = folder\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if folder:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             self.set_folder(folder)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._uri = uri\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._pool_size = pool_size\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._db_codec = db_codec\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._pending_references = {}\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._request_tenant = 'request_tenant'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._common_fields = []\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._referee_name = '%(table)s'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._bigint_id = bigint_id\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._debug = debug\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._migrated = []\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._LAZY_TABLES = {}\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._lazy_tables = lazy_tables\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._tables = SQLCallableList()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._driver_args = driver_args\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._adapter_args = adapter_args\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._check_reserved = check_reserved\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._decode_credentials = decode_credentials\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._attempts = attempts\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._do_connect = do_connect\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         self._ignore_field_case = ignore_field_case\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if not str(attempts).isdigit() or attempts < 0:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             attempts = 5\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |         if uri:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             uris = isinstance(uri, (list, tuple)) and uri or [uri]\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             connected = False\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             for k in range(attempts):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 for uri in uris:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     try:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         from .adapters import adapters\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         if is_jdbc and not uri.startswith('jdbc:'):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                             uri = 'jdbc:' + uri\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         self._dbname = REGEX_DBNAME.match(uri).group()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         # notice that driver args or {} else driver_args\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         # defaults to {} global, not correct\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         kwargs = dict(db=self,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       uri=uri,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       pool_size=pool_size,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       folder=folder,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       db_codec=db_codec,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       credential_decoder=credential_decoder,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       driver_args=driver_args or {},\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       adapter_args=adapter_args or {},\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       do_connect=do_connect,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       after_connection=after_connection,\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                                       entity_quoting=entity_quoting)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         adapter = adapters.get_for(self._dbname)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         self._adapter = adapter(**kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         #self._adapter.ignore_field_case = ignore_field_case\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         if bigint_id:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                             self._adapter.dialect._force_bigints()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         connected = True\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         break\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     except SyntaxError:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         raise\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     except Exception:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         tb = traceback.format_exc()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         self.logger.debug(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                             'DEBUG: connect attempt %i, connection error:\\n%s'\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                             % (k, tb)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                         )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 if connected:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     break\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 else:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     time.sleep(1)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |             if not connected:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | >               raise RuntimeError(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                     \"Failure to connect, tried %d times:\\n%s\" % (attempts, tb)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |                 )\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E               RuntimeError: Failure to connect, tried 5 times:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E               Traceback (most recent call last):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/base.py\", line 455, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   self._adapter = adapter(**kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 13, in __call__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   return AdapterMeta.__call__(cls, *args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/__init__.py\", line 40, in __call__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   obj = super(AdapterMeta, cls).__call__(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 46, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   super(Postgre, self).__init__(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 367, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   super(SQLAdapter, self).__init__(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 52, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   self.reconnect()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 329, in _connect_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   self.connection, _opened = self._connection_manager.connect_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 228, in connect_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   rv = self._acquire_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 258, in _acquire_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   conn, _opened = self._connection_open_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 156, in _connection_open_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   return self._connector_sync(), True\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 151, in _connector_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   return self.adapter.connector()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 103, in connector\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   return self.driver.connect(**self.driver_args)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                 File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/psycopg2/__init__.py\", line 122, in connect\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E                   conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E               psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | E               \tIs the server running on that host and accepting TCP/IP connections?\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | .venv/lib/python3.8/site-packages/pydal/base.py:474: RuntimeError\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/report.xml -\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | =========================== short test summary info ============================\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | ERROR tests/test_auth.py::test_models - sqlite3.OperationalError: disk I/O error\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | ERROR tests/test_auth.py::test_registration - sqlite3.OperationalError: disk I/O error\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | ERROR tests/test_auth.py::test_login - sqlite3.OperationalError: disk I/O error\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | ERROR tests/test_auth.py::test_password_change - sqlite3.OperationalError: disk I/O error\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | ERROR tests/test_auth.py::test_password_retrieval - sqlite3.OperationalError: disk I/O error\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | ERROR tests/test_orm_gis.py::test_gis_insert - psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \tIs the server running on that host and accepting TCP/IP connections?\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | ERROR tests/test_orm_gis.py::test_gis_select - psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \tIs the server running on that host and accepting TCP/IP connections?\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | ERROR tests/test_orm_pks.py::test_relations - RuntimeError: Failure to connect, tried 5 times:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | Traceback (most recent call last):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/base.py\", line 455, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self._adapter = adapter(**kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 13, in __call__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return AdapterMeta.__call__(cls, *args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/__init__.py\", line 40, in __call__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     obj = super(AdapterMeta, cls).__call__(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 46, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     super(Postgre, self).__init__(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 367, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     super(SQLAdapter, self).__init__(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 52, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.reconnect()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 329, in _connect_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.connection, _opened = self._connection_manager.connect_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 228, in connect_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     rv = self._acquire_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 258, in _acquire_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     conn, _opened = self._connection_open_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 156, in _connection_open_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self._connector_sync(), True\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 151, in _connector_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self.adapter.connector()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 103, in connector\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self.driver.connect(**self.driver_args)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/psycopg2/__init__.py\", line 122, in connect\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \tIs the server running on that host and accepting TCP/IP connections?\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | ERROR tests/test_orm_pks.py::test_via_relations - RuntimeError: Failure to connect, tried 5 times:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | Traceback (most recent call last):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/base.py\", line 455, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self._adapter = adapter(**kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 13, in __call__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return AdapterMeta.__call__(cls, *args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/__init__.py\", line 40, in __call__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     obj = super(AdapterMeta, cls).__call__(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 46, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     super(Postgre, self).__init__(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 367, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     super(SQLAdapter, self).__init__(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 52, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.reconnect()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 329, in _connect_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.connection, _opened = self._connection_manager.connect_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 228, in connect_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     rv = self._acquire_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 258, in _acquire_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     conn, _opened = self._connection_open_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 156, in _connection_open_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self._connector_sync(), True\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 151, in _connector_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self.adapter.connector()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 103, in connector\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self.driver.connect(**self.driver_args)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/psycopg2/__init__.py\", line 122, in connect\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \tIs the server running on that host and accepting TCP/IP connections?\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | ERROR tests/test_orm_pks.py::test_relations_set - RuntimeError: Failure to connect, tried 5 times:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | Traceback (most recent call last):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/base.py\", line 455, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self._adapter = adapter(**kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 13, in __call__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return AdapterMeta.__call__(cls, *args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/__init__.py\", line 40, in __call__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     obj = super(AdapterMeta, cls).__call__(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 46, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     super(Postgre, self).__init__(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 367, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     super(SQLAdapter, self).__init__(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 52, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.reconnect()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 329, in _connect_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.connection, _opened = self._connection_manager.connect_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 228, in connect_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     rv = self._acquire_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 258, in _acquire_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     conn, _opened = self._connection_open_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 156, in _connection_open_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self._connector_sync(), True\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 151, in _connector_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self.adapter.connector()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 103, in connector\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self.driver.connect(**self.driver_args)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/psycopg2/__init__.py\", line 122, in connect\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \tIs the server running on that host and accepting TCP/IP connections?\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | ERROR tests/test_orm_pks.py::test_row - RuntimeError: Failure to connect, tried 5 times:\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | Traceback (most recent call last):\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/base.py\", line 455, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self._adapter = adapter(**kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 13, in __call__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return AdapterMeta.__call__(cls, *args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/__init__.py\", line 40, in __call__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     obj = super(AdapterMeta, cls).__call__(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 46, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     super(Postgre, self).__init__(\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 367, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     super(SQLAdapter, self).__init__(*args, **kwargs)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/base.py\", line 52, in __init__\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.reconnect()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 329, in _connect_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     self.connection, _opened = self._connection_manager.connect_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 228, in connect_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     rv = self._acquire_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 258, in _acquire_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     conn, _opened = self._connection_open_sync()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 156, in _connection_open_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self._connector_sync(), True\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/emmett/orm/connection.py\", line 151, in _connector_sync\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self.adapter.connector()\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/pydal/adapters/postgres.py\", line 103, in connector\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     return self.driver.connect(**self.driver_args)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.venv/lib/python3.8/site-packages/psycopg2/__init__.py\", line 122, in connect\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | \tIs the server running on that host and accepting TCP/IP connections?\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   | ======================= 154 passed, 11 errors in 11.80s ========================\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \u274c  Failure - Main Test\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ] exitcode '1': failure\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ] \u2b50 Run Post Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udc33  docker cp src=/tmp/act-cache/9b1b2262-ed57-4a92-8249-ca7479b99448/act/gi0baro-setup-poetry-bin@v1.3/ dst=/var/run/act/actions/gi0baro-setup-poetry-bin@v1.3/\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/gi0baro-setup-poetry-bin@v1.3/] user=0 workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \u2705  Success - Post Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows] \u2b50 Run Post Set up Python 3.8\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ]   \u2705  Success - Post Install and configure Poetry\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows]   \u2705  Success - Post Set up Python 3.8\n[5d12349c-16cd-418d-9434-08cab12f2f43/Linux  ] \ud83c\udfc1  Job failed\n[5d12349c-16cd-418d-9434-08cab12f2f43/Windows] \ud83c\udfc1  Job succeeded\n",
        "stderr": "Error: Job 'Linux' failed\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/emmett-framework-emmett/.github/workflows/tests-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 268.92347741127014
    }
}