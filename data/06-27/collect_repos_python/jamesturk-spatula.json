{
    "repository": "jamesturk/spatula",
    "stars": 226,
    "language": "python",
    "size": 1446,
    "clone_url": "https://github.com/jamesturk/spatula.git",
    "timestamp": "2023-07-01T11:23:42.510478Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_cli",
                "name": "test_shell_command",
                "time": 3.612,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_scrape_command_basic",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_scrape_command_module",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_scrape_command_output_dir_flag",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_scrape_command_source_flag",
                "time": 5.432,
                "results": [
                    {
                        "result": "Failure",
                        "message": "assert 1 == 0\n +  where 1 = <Result ReadTimeout(ReadTimeoutError(\"HTTPSConnectionPool(host='httpbin.org', port=443): Read timed out. (read timeout=5)\"))>.exit_code",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_scout_command_basic",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_scout_command_subpages",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_test_command_basic",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_test_command_example_source",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_test_command_source_flag",
                "time": 0.471,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_test_command_paginated",
                "time": 2.421,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_test_command_no_pagination",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_test_command_subpages",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_test_command_input",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_test_command_input_data_flag",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_test_command_input_interactive_flag",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_test_command_input_with_example",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_page_base",
                "name": "test_page_init_and_str",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_page_base",
                "name": "test_fetch_data_dependencies",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_page_base",
                "name": "test_get_source_from_input_called",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_page_base",
                "name": "test_fetch_data_get_source_from_input_missing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_page_base",
                "name": "test_fetch_data_sets_response",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_page_base",
                "name": "test_fetch_data_handle_error_response",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_page_base",
                "name": "test_retry_success",
                "time": 0.202,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_page_base",
                "name": "test_retry_still_fails",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_page_base",
                "name": "test_fetch_data_postprocess",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_page_base",
                "name": "test_default_processing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_page_base",
                "name": "test_do_scrape_simple",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_page_base",
                "name": "test_to_items_scout",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_page_base",
                "name": "test_paginated_page",
                "time": 8.621,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_page_base",
                "name": "test_paginated_list_page",
                "time": 6.424,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_page_base",
                "name": "test_paginated_single_value_page",
                "time": 2.43,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_page_base",
                "name": "test_paginated_page_with_error",
                "time": 3.169,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_page_base",
                "name": "test_skip_item",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_page_base",
                "name": "test_skip_item_on_detail_page",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pages",
                "name": "test_html_page",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pages",
                "name": "test_xml_page",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pages",
                "name": "test_json_page",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pages",
                "name": "test_csv_list_page",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pages",
                "name": "test_html_list_page",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pages",
                "name": "test_xml_list_page",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pages",
                "name": "test_json_list_page",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_selectors",
                "name": "test_num_items",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_selectors",
                "name": "test_min_items",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_selectors",
                "name": "test_max_items",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_selectors",
                "name": "test_match_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_selectors",
                "name": "test_css_selector",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_selectors",
                "name": "test_xpath_selector",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_selectors",
                "name": "test_similar_link_selector",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_sources",
                "name": "test_source_no_timeout",
                "time": 5.241,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_sources",
                "name": "test_source_timeout",
                "time": 0.241,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_display_pretty[data0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_display_pretty[data1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_display_element[<b>test</b>-<b> @ line 1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_display_element[<p id='p1'>test</p>-<p id='p1'> @ line 1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_display_element[<p class='styled'>test</p>-<p class='styled'> @ line 1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_display_element[<p id='p2' class='styled'>test</p>-<p id='p2'> @ line 1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_display_element[<p class='styled' data-elem='ignored'>test</p>-<p class='styled'> @ line 1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_display_simple[some str-some str]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_display_simple[True-True]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_display_simple[None-None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_display_simple[1234-1234]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_display_pydantic",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_display_dataclass",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_display_attr",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build] \ud83d\ude80  Start image=crawlergpt:latest\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/jamesturk-spatula] user=0 workdir=\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1.2.1\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build] \u2b50 Run Pre install Poetry\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u2705  Success - Pre install Poetry\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build] \ud83e\uddea  Matrix: map[python-version:3.7]\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build] \u2b50 Run Main actions/checkout@v2\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u2705  Success - Main actions/checkout@v2\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build] \u2b50 Run Main setup Python 3.7\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/a39451fd-63c3-4b43-b878-bf30c6dc2f1d/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udcac  ::debug::isExplicit: \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udcac  ::debug::explicit? false\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udcac  ::debug::explicit? true\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udcac  ::debug::explicit? true\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udcac  ::debug::explicit? true\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udcac  ::debug::explicit? true\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udcac  ::debug::explicit? true\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udcac  ::debug::explicit? true\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udcac  ::debug::matched: 3.7.11\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | Successfully setup CPython (3.7.11)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u2705  Success - Main setup Python 3.7\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u2699  ::set-output:: python-version=3.7.11\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build] \u2b50 Run Main install Poetry\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/a39451fd-63c3-4b43-b878-bf30c6dc2f1d/act/snok-install-poetry@v1.2.1/ dst=/var/run/act/actions/snok-install-poetry@v1.2.1/\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1.2.1/] user=0 workdir=\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build] \u2b50 Run Main Install and configure Poetry\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local/\u001b[0m\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | Retrieving Poetry metadata\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | # Welcome to Poetry!\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | This will download and install the latest version of Poetry,\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | a dependency and package manager for Python.\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | /home/runneradmin/.local/bin\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | You can uninstall at any time by executing this script with the --uninstall option,\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | and these changes will be reverted.\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | Installing Poetry (1.5.1)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | Installing Poetry (1.5.1): Creating environment\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | Installing Poetry (1.5.1): Installing Poetry\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | Installing Poetry (1.5.1): Creating script\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | Installing Poetry (1.5.1): Done\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | Poetry (1.5.1) is installed now. Great!\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | environment variable.\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | You can test that everything is set up by executing:\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | `poetry --version`\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \u001b[33mDone \u2705\u001b[0m\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u2705  Success - Main Install and configure Poetry\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u2699  ::add-path:: /home/runneradmin/.local//bin\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u2705  Success - Main install Poetry\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u2699  ::add-path:: /home/runneradmin/.local//bin\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build] \u2b50 Run Main set poetry config path\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u2705  Success - Main set poetry config path\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build] \u2b50 Run Main install dependencies\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | Creating virtualenv spatula-zK82f6Q4-py3.7 in /home/runneradmin/.virtualenvs\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | Updating dependencies\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | Resolving dependencies...\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | Package operations: 72 installs, 1 update, 0 removals\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing six (1.16.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing typing-extensions (4.7.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing zipp (3.15.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing importlib-metadata (4.13.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing markupsafe (2.1.3)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing python-dateutil (2.8.2)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing pyyaml (6.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing click (8.1.3)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing ghp-import (2.1.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing jinja2 (3.1.2)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing markdown (3.4.3)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing mergedeep (1.3.4)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing packaging (23.1)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing pyyaml-env-tag (0.1)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing watchdog (3.0.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing mkdocs (1.3.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing attrs (20.3.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing cached-property (1.5.2)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing certifi (2023.5.7)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing charset-normalizer (3.1.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing colorama (0.4.6)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing idna (3.4)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing iniconfig (2.0.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing mkdocs-autorefs (0.4.1)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing parso (0.8.3)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing pluggy (1.2.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing ptyprocess (0.7.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing py (1.11.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing pymdown-extensions (10.0.1)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing toml (0.10.2)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing traitlets (5.9.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing urllib3 (1.26.16)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing wcwidth (0.2.6)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing backcall (0.2.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing coverage (7.2.7)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing decorator (5.1.1)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing et-xmlfile (1.1.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing griffe (0.30.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing jedi (0.18.2)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing matplotlib-inline (0.1.6)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing mccabe (0.6.1)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing mkdocs-material-extensions (1.1.1)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing mkdocstrings (0.19.1)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing mypy-extensions (0.4.4)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing pathspec (0.11.1)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing pexpect (4.8.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing pickleshare (0.7.5)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing platformdirs (3.8.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing prompt-toolkit (3.0.38)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing pycodestyle (2.7.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing pyflakes (2.3.1)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing pygments (2.15.1)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing pytest (6.2.5)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing requests (2.31.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Updating setuptools (67.8.0 -> 68.0.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing tomli (2.0.1)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing typed-ast (1.4.3)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing black (22.12.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing bump2version (1.0.1)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing cssselect (1.2.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing flake8 (3.9.2)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing invoke (1.7.3)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing ipython (7.34.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing lxml (4.9.2)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing mkdocs-click (0.8.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing mkdocs-material (8.5.4)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing mkdocstrings-python (0.8.3)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing mypy (0.900)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing openpyxl (3.1.2)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing pytest-cov (2.12.1)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing scrapelib (2.2.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing types-click (7.1.8)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   \u2022 Installing types-requests (0.1.13)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | Writing lock file\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | Installing the current project: spatula (0.9.0)\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u2705  Success - Main install dependencies\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build] \u2b50 Run Main lint with mypy\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | Success: no issues found in 7 source files\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u2705  Success - Main lint with mypy\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build] \u2b50 Run Main lint with flake8\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u2705  Success - Main lint with flake8\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build] \u2b50 Run Main pytest\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/7] user= workdir=\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | ============================= test session starts ==============================\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | platform linux -- Python 3.7.11, pytest-6.2.5, py-1.11.0, pluggy-1.2.0\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/jamesturk-spatula\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | plugins: cov-2.12.1\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | collected 65 items\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | tests/test_cli.py ....F............                                      [ 26%]\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | tests/test_page_base.py ..................                               [ 53%]\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | tests/test_pages.py .......                                              [ 64%]\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | tests/test_selectors.py .......                                          [ 75%]\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | tests/test_sources.py ..                                                 [ 78%]\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | tests/test_utils.py ..............                                       [100%]\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | =================================== FAILURES ===================================\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | _______________________ test_scrape_command_source_flag ________________________\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |     def test_scrape_command_source_flag():\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |         runner = CliRunner()\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |         today = datetime.date.today().strftime(\"%Y-%m-%d\")\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |     \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |         with runner.isolated_filesystem():\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |             # tests source override\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |             result = runner.invoke(\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |                 cli,\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |                 [\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |                     \"scrape\",\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |                     \"tests.examples.ExamplePage\",\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |                     \"--source\",\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |                     \"https://httpbin.org/get\",\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |                 ],\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |             )\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | >           assert result.exit_code == 0\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | E           assert 1 == 0\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | E            +  where 1 = <Result ReadTimeout(ReadTimeoutError(\"HTTPSConnectionPool(host='httpbin.org', port=443): Read timed out. (read timeout=5)\"))>.exit_code\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | tests/test_cli.py:77: AssertionError\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | =============================== warnings summary ===============================\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | tests/test_pages.py::test_csv_list_page\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/jamesturk-spatula/src/spatula/pages.py:456: UserWarning: process_item not overridden on CsvListPage\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |     warnings.warn(f\"process_item not overridden on {self.__class__.__name__}\")\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | tests/test_pages.py::test_html_list_page\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/jamesturk-spatula/src/spatula/pages.py:456: UserWarning: process_item not overridden on HtmlListPage\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |     warnings.warn(f\"process_item not overridden on {self.__class__.__name__}\")\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | tests/test_pages.py::test_xml_list_page\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/jamesturk-spatula/src/spatula/pages.py:456: UserWarning: process_item not overridden on XmlListPage\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |     warnings.warn(f\"process_item not overridden on {self.__class__.__name__}\")\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | tests/test_pages.py::test_json_list_page\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/jamesturk-spatula/src/spatula/pages.py:456: UserWarning: process_item not overridden on JsonListPage\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   |     warnings.warn(f\"process_item not overridden on {self.__class__.__name__}\")\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | \n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | -- Docs: https://docs.pytest.org/en/stable/warnings.html\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/jamesturk-spatula/report.xml -\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | =========================== short test summary info ============================\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | FAILED tests/test_cli.py::test_scrape_command_source_flag - assert 1 == 0\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   | ================== 1 failed, 64 passed, 4 warnings in 40.23s ===================\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u274c  Failure - Main pytest\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build] exitcode '1': failure\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build] \u2b50 Run Post install Poetry\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/a39451fd-63c3-4b43-b878-bf30c6dc2f1d/act/snok-install-poetry@v1.2.1/ dst=/var/run/act/actions/snok-install-poetry@v1.2.1/\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1.2.1/] user=0 workdir=\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build]   \u2705  Success - Post install Poetry\n[a3dd53e4-0ec3-4cca-8c49-2156f302cf55/build] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'build' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/jamesturk-spatula/.github/workflows/test-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "a3dd53e4-0ec3-4cca-8c49-2156f302cf55",
        "build_tool": "pytest",
        "elapsed_time": 298.08381700515747
    }
}