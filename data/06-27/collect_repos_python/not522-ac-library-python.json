{
    "repository": "not522/ac-library-python",
    "stars": 131,
    "language": "python",
    "size": 254,
    "clone_url": "https://github.com/not522/ac-library-python.git",
    "timestamp": "2023-07-01T15:30:16.624092Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_ceil_pow2[0-0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_ceil_pow2[1-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_ceil_pow2[2-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_ceil_pow2[3-2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_ceil_pow2[4-2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_ceil_pow2[5-3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_ceil_pow2[6-3]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_ceil_pow2[7-3]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_ceil_pow2[8-3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_ceil_pow2[9-4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_ceil_pow2[1073741823-30]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_ceil_pow2[1073741824-30]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_ceil_pow2[1073741825-31]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_ceil_pow2[1267650600228229401496703205375-100]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_ceil_pow2[1267650600228229401496703205376-100]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_ceil_pow2[1267650600228229401496703205377-101]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_bsf[1-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_bsf[2-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_bsf[3-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_bsf[4-2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_bsf[5-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_bsf[6-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_bsf[7-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_bsf[8-3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_bsf[9-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_bsf[1073741823-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_bsf[1073741824-30]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_bsf[1073741825-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_bsf[2147483647-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_bsf[2147483648-31]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_bsf[2147483649-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_bsf[1267650600228229401496703205375-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_bsf[1267650600228229401496703205376-100]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test__bit.TestInternalBit",
                "name": "test_bsf[1267650600228229401496703205377-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_dsu.TestDsu",
                "name": "test_initial_status",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_dsu.TestDsu",
                "name": "test_merge",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_dsu.TestDsu",
                "name": "test_merge_elements_of_same_group",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_dsu.TestDsu",
                "name": "test_size",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_dsu.TestDsu",
                "name": "test_leader",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_dsu.TestDsu",
                "name": "test_groups",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_initial_status",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_add",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_add_multiple_times",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_add_when_negative_value_is_given",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_add_when_zero_is_given",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_add_when_positive_floating_point_value_is_given",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_add_when_negative_floating_point_value_is_given",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_sum[0-5-15]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_sum[0-4-10]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_sum[1-4-9]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_sum[1-3-5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_sum[2-2-0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_sum_when_additional_element_is_given[0-5-17]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_sum_when_additional_element_is_given[0-4-12]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_sum_when_additional_element_is_given[0-3-8]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_sum_when_additional_element_is_given[0-2-3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_sum_when_additional_element_is_given[0-1-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_sum_when_additional_element_is_given[1-4-11]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_sum_when_additional_element_is_given[1-3-7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_sum_when_additional_element_is_given[2-2-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_add_failed_if_invalid_input_is_given[-2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_add_failed_if_invalid_input_is_given[-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_add_failed_if_invalid_input_is_given[5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_add_failed_if_invalid_input_is_given[6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_sum_failed_if_invalid_input_is_given[-2-5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_sum_failed_if_invalid_input_is_given[-1-5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_sum_failed_if_invalid_input_is_given[0-6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_sum_failed_if_invalid_input_is_given[0-7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_sum_failed_if_invalid_input_is_given[3-2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_sum_failed_if_invalid_input_is_given[-1-6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fenwicktree.TestFenwickTree",
                "name": "test_sum_failed_if_invalid_input_is_given[-1-7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_internal_math.TestInternalMath",
                "name": "test_is_prime",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_internal_math.TestInternalMath",
                "name": "test_inv_gcd[0-1-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_internal_math.TestInternalMath",
                "name": "test_inv_gcd[0-4-4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_internal_math.TestInternalMath",
                "name": "test_inv_gcd[0-7-7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_internal_math.TestInternalMath",
                "name": "test_inv_gcd[2-3-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_internal_math.TestInternalMath",
                "name": "test_inv_gcd[-2-3-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_internal_math.TestInternalMath",
                "name": "test_inv_gcd[4-6-2]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_internal_math.TestInternalMath",
                "name": "test_inv_gcd[-4-6-2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_internal_math.TestInternalMath",
                "name": "test_inv_gcd[13-23-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_internal_math.TestInternalMath",
                "name": "test_inv_gcd[57-81-3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_internal_math.TestInternalMath",
                "name": "test_inv_gcd[12345-67890-15]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_internal_math.TestInternalMath",
                "name": "test_inv_gcd[-20530303720-28208354568-3141592]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_internal_math.TestInternalMath",
                "name": "test_primitive_root",
                "time": 0.426,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_inv_mod",
                "time": 0.553,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_inv_mod_when_returns_zero",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_crt[r0-m0-expected0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_crt[r1-m1-expected1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_crt[r2-m2-expected2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_crt[r3-m3-expected3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_crt[r4-m4-expected4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_floor_sum",
                "time": 0.938,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_floor_sum_using_acl_practice_contest[4-10-6-3-3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_floor_sum_using_acl_practice_contest[6-5-4-3-13]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_floor_sum_using_acl_practice_contest[1-1-0-0-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_floor_sum_using_acl_practice_contest[31415-92653-58979-32384-314095480]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_floor_sum_using_acl_practice_contest[1000000000-1000000000-999999999-999999999-499999999500000000]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_inv_mod_failed_if_invalid_input_is_given[2--1]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_inv_mod_failed_if_invalid_input_is_given[2-0]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_inv_mod_failed_if_invalid_input_is_given[271828-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_inv_mod_failed_if_invalid_input_is_given[6-3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_inv_mod_failed_if_invalid_input_is_given[3-6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_inv_mod_failed_if_invalid_input_is_given[3141592-1000000008]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_crt_failed_if_invalid_input_is_given[r0-m0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_crt_failed_if_invalid_input_is_given[r1-m1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_crt_failed_if_invalid_input_is_given[r2-m2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_crt_failed_if_invalid_input_is_given[r3-m3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_crt_failed_if_invalid_input_is_given[r4-m4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_crt_failed_if_invalid_input_is_given[r5-m5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_crt_failed_if_invalid_input_is_given[r6-m6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_crt_failed_if_invalid_input_is_given[r7-m7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_crt_failed_if_invalid_input_is_given[r8-m8]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_floor_sum_failed_if_invalid_input_is_given[-1-1-0-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_floor_sum_failed_if_invalid_input_is_given[0-1-0-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_floor_sum_failed_if_invalid_input_is_given[1-0-0-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_math.TestMath",
                "name": "test_floor_sum_failed_if_invalid_input_is_given[1--1-0-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_examples[A-dsu_practice.py]",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_examples[B-fenwick_practice.py]",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_examples[C-floor_sum_practice.py]",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_examples[D-maxflow_practice.py]",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_examples[E-mincostflow_practice.py]",
                "time": 0.139,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_examples[F-convolution_practice.py]",
                "time": 0.139,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_examples[F-convolution_practice_int.py]",
                "time": 0.149,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_examples[G-scc_practice.py]",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_examples[H-twosat_practice.py]",
                "time": 0.155,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_examples[I-sa_practice.py]",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_examples[J-segtree_practice.py]",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_examples[J-segtree_practice_reversed.py]",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_examples[K-lazysegtree_practice_k.py]",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_examples[K-lazysegtree_practice_k_wo_modint.py]",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_examples[L-lazysegtree_practice_l.py]",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_combined_examples[A-dsu_practice.py]",
                "time": 0.206,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_combined_examples[B-fenwick_practice.py]",
                "time": 0.203,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_combined_examples[C-floor_sum_practice.py]",
                "time": 0.199,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_combined_examples[D-maxflow_practice.py]",
                "time": 0.212,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_combined_examples[E-mincostflow_practice.py]",
                "time": 0.223,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_combined_examples[F-convolution_practice.py]",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_combined_examples[F-convolution_practice_int.py]",
                "time": 0.329,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_combined_examples[G-scc_practice.py]",
                "time": 0.207,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_combined_examples[H-twosat_practice.py]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_combined_examples[I-sa_practice.py]",
                "time": 0.438,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_combined_examples[J-segtree_practice.py]",
                "time": 0.226,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_combined_examples[J-segtree_practice_reversed.py]",
                "time": 0.227,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_combined_examples[K-lazysegtree_practice_k.py]",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_combined_examples[K-lazysegtree_practice_k_wo_modint.py]",
                "time": 0.233,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.example_tests.test_examples.TestExamples",
                "name": "test_combined_examples[L-lazysegtree_practice_l.py]",
                "time": 0.229,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[acc29f42-fe1d-46b5-a0ee-57facd33576d/build] \ud83d\ude80  Start image=crawlergpt:latest\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/not522-ac-library-python] user=0 workdir=\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build] \ud83e\uddea  Matrix: map[python-version:3.6]\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build] \u2b50 Run Main actions/checkout@v2\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \u2705  Success - Main actions/checkout@v2\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build] \u2b50 Run Main Set up Python 3.6\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/b2933eb2-86a6-4813-aa64-af14b8c3c121/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.6 is 3.6\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udcac  ::debug::isExplicit: \n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udcac  ::debug::explicit? false\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udcac  ::debug::explicit? true\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udcac  ::debug::explicit? true\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udcac  ::debug::explicit? true\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udcac  ::debug::explicit? true\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udcac  ::debug::explicit? true\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udcac  ::debug::explicit? true\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udcac  ::debug::matched: 3.6.14\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.6.14/x64\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.6.14 x64\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Successfully setup CPython (3.6.14)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \u2705  Success - Main Set up Python 3.6\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.6.14/x64\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.6.14/x64/lib\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \u2699  ::set-output:: python-version=3.6.14\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64/bin\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build] \u2b50 Run Main Install dependencies\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (21.2.4)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Collecting pip\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Downloading pip-21.3.1-py3-none-any.whl (1.7 MB)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Installing collected packages: pip\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Attempting uninstall: pip\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |     Found existing installation: pip 21.2.4\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |     Uninstalling pip-21.2.4:\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |       Successfully uninstalled pip-21.2.4\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Successfully installed pip-21.3.1\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Processing /tmp/558156d8-17ed-11ee-8a50-bb14de238602/not522-ac-library-python\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Preparing metadata (setup.py): started\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Preparing metadata (setup.py): finished with status 'done'\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Collecting pytest\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Downloading pytest-7.0.1-py3-none-any.whl (296 kB)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Collecting flake8\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Downloading flake8-5.0.4-py2.py3-none-any.whl (61 kB)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Collecting pep8-naming\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Downloading pep8_naming-0.13.1-py3-none-any.whl (8.5 kB)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Collecting mypy\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Downloading mypy-0.971-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (14.9 MB)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Collecting mccabe<0.8.0,>=0.7.0\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Downloading mccabe-0.7.0-py2.py3-none-any.whl (7.3 kB)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Collecting pyflakes<2.6.0,>=2.5.0\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Downloading pyflakes-2.5.0-py2.py3-none-any.whl (66 kB)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Collecting pycodestyle<2.10.0,>=2.9.0\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Downloading pycodestyle-2.9.1-py2.py3-none-any.whl (41 kB)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Collecting importlib-metadata<4.3,>=1.1.0\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Downloading importlib_metadata-4.2.0-py3-none-any.whl (16 kB)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Collecting mypy-extensions>=0.4.3\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Collecting tomli>=1.1.0\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Downloading tomli-1.2.3-py3-none-any.whl (12 kB)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Collecting typed-ast<2,>=1.4.0\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Downloading typed_ast-1.5.4-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (831 kB)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Collecting typing-extensions>=3.10\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Downloading typing_extensions-4.1.1-py3-none-any.whl (26 kB)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Collecting packaging\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Downloading packaging-21.3-py3-none-any.whl (40 kB)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Collecting py>=1.8.2\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Collecting iniconfig\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Downloading iniconfig-1.1.1-py2.py3-none-any.whl (5.0 kB)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Collecting pluggy<2.0,>=0.12\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Collecting attrs>=19.2.0\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Downloading attrs-22.2.0-py3-none-any.whl (60 kB)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Collecting zipp>=0.5\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Downloading zipp-3.6.0-py3-none-any.whl (5.3 kB)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Collecting pyparsing!=3.0.5,>=2.0.2\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |   Downloading pyparsing-3.1.0-py3-none-any.whl (102 kB)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Using legacy 'setup.py install' for ac-library-python, since package 'wheel' is not installed.\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Installing collected packages: zipp, typing-extensions, pyparsing, pyflakes, pycodestyle, mccabe, importlib-metadata, typed-ast, tomli, py, pluggy, packaging, mypy-extensions, iniconfig, flake8, attrs, pytest, pep8-naming, mypy, ac-library-python\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |     Running setup.py install for ac-library-python: started\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   |     Running setup.py install for ac-library-python: finished with status 'done'\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Successfully installed ac-library-python-0.0.1 attrs-22.2.0 flake8-5.0.4 importlib-metadata-4.2.0 iniconfig-1.1.1 mccabe-0.7.0 mypy-0.971 mypy-extensions-1.0.0 packaging-21.3 pep8-naming-0.13.1 pluggy-1.0.0 py-1.11.0 pycodestyle-2.9.1 pyflakes-2.5.0 pyparsing-3.1.0 pytest-7.0.1 tomli-1.2.3 typed-ast-1.5.4 typing-extensions-4.1.1 zipp-3.6.0\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \u2705  Success - Main Install dependencies\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build] \u2b50 Run Main Lint with flake8\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | 0\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | atcoder/_math.py:68:1: C901 '_primitive_root' is too complex (14)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | atcoder/mincostflow.py:58:5: C901 'MCFGraph.slope' is too complex (16)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | atcoder/lazysegtree.py:84:5: C901 'LazySegTree.apply' is too complex (14)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | atcoder/string.py:32:1: C901 '_sa_is' is too complex (36)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | atcoder/maxflow.py:58:5: C901 'MFGraph.flow' is too complex (20)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | atcoder/__main__.py:21:1: C901 'iter_child_nodes' is too complex (11)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | atcoder/__main__.py:58:5: C901 'ModuleImporter.import_module' is too complex (19)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | tests/test_dsu.py:3:1: F401 'random' imported but unused\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | tests/test_dsu.py:4:1: F401 'typing.List' imported but unused\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | tests/test_dsu.py:4:1: F401 'typing.Tuple' imported but unused\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | 7     C901 'iter_child_nodes' is too complex (11)\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | 3     F401 'random' imported but unused\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | 10\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \u2705  Success - Main Lint with flake8\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build] \u2b50 Run Main Type check with mypy\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | Success: no issues found in 25 source files\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \u2705  Success - Main Type check with mypy\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build] \u2b50 Run Main Test with pytest\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | ============================= test session starts ==============================\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | platform linux -- Python 3.6.14, pytest-7.0.1, pluggy-1.0.0\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/not522-ac-library-python\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | collected 146 items\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | \n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | tests/test__bit.py ..................................                    [ 23%]\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | tests/test_dsu.py ......                                                 [ 27%]\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | tests/test_fenwicktree.py ...............................                [ 48%]\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | tests/test_internal_math.py .............                                [ 57%]\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | tests/test_math.py ................................                      [ 79%]\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | tests/example_tests/test_examples.py ..............................      [100%]\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | \n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/not522-ac-library-python/report.xml -\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   | ============================= 146 passed in 8.04s ==============================\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \u2705  Success - Main Test with pytest\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build] \u2b50 Run Post Set up Python 3.6\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build]   \u2705  Success - Post Set up Python 3.6\n[acc29f42-fe1d-46b5-a0ee-57facd33576d/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/not522-ac-library-python/.github/workflows/python-package-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "acc29f42-fe1d-46b5-a0ee-57facd33576d",
        "build_tool": "pytest",
        "elapsed_time": 415.32279109954834
    }
}