{
    "repository": "browniebroke/deezer-python",
    "stars": 106,
    "language": "python",
    "size": 2157,
    "clone_url": "https://github.com/browniebroke/deezer-python.git",
    "timestamp": "2023-06-28T10:24:23.678791Z",
    "clone_success": true,
    "number_of_actions": 7,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "unknown",
        "unknown",
        "unknown",
        "unknown",
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_access_token_set",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_request_404",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_request_unknown_resource",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_album",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_no_album_raise",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_artist",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_overall_chart",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_chart",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_overall_tracks_chart",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_tracks_chart",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_overall_albums_chart",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_albums_chart",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_overall_artists_chart",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_artists_chart",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_overall_playlists_chart",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_playlists_chart",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_overall_podcasts_chart",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_podcasts_chart",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_editorial",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_no_editorial_raise",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_list_editorials",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_episode",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_no_episode_raise",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_genre",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_no_genre_raise",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_list_genres",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_playlist",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_no_playlist_raise",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_podcast",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_no_podcast_raise",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_radio",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_no_radio_raise",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_list_radios",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_radios_top",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_track",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_no_track_raise",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_user",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_current_user",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_no_user_raise",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_user_recommended_tracks",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_user_recommended_albums",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_user_recommended_artists",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_user_recommended_playlists",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_user_flow",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_user_albums[args0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_user_albums[args1]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_add_user_album",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_remove_user_album",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_user_artists[args0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_user_artists[args1]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_add_user_artist",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_remove_user_artist",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_user_followers[args0]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_user_followers[args1]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_user_followings[args0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_user_followings[args1]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_add_user_following",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_remove_user_following",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_user_history",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_user_tracks[args0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_get_user_tracks[args1]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_add_user_track",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_remove_user_track",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_add_user_playlist",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_remove_user_playlist",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_create_playlist",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_delete_playlist",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_search_simple",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_search_strict",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_search_results_ordering[RANKING]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_search_results_ordering[TRACK_ASC]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_search_results_ordering[TRACK_DESC]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_search_results_ordering[ARTIST_ASC]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_search_results_ordering[ARTIST_DESC]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_search_results_ordering[ALBUM_ASC]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_search_results_ordering[ALBUM_DESC]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_search_results_ordering[RATING_ASC]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_search_results_ordering[RATING_DESC]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_search_results_ordering[DURATION_ASC]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_search_results_ordering[DURATION_DESC]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_search_advanced_simple",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_search_advanced_multiple",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_search_albums",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_search_artists",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_search_playlists",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_with_language_header[fr]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_with_language_header[ja]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_process_json_types[unknown]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_process_json_types[album]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_process_json_types[artist]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_process_json_types[editorial]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_process_json_types[episode]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_process_json_types[genre]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_process_json_types[playlist]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_process_json_types[podcast]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_process_json_types[radio]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_process_json_types[track]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client.TestClient",
                "name": "test_process_json_types[user]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_exceptions",
                "name": "test_deezer_http_error[403-DeezerForbiddenError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_exceptions",
                "name": "test_deezer_http_error[404-DeezerNotFoundError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_exceptions",
                "name": "test_deezer_http_error[418-DeezerHTTPError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_exceptions",
                "name": "test_deezer_http_error[502-DeezerRetryableHTTPError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pagination.TestPaginatedList",
                "name": "test_repr_many_results",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pagination.TestPaginatedList",
                "name": "test_repr_little_results",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pagination.TestPaginatedList",
                "name": "test_repr_empty",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pagination.TestPaginatedList",
                "name": "test_total",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pagination.TestPaginatedList",
                "name": "test_iterate",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pagination.TestPaginatedList",
                "name": "test_iterator",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pagination.TestPaginatedList",
                "name": "test_get_element[4-Alive 2007]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pagination.TestPaginatedList",
                "name": "test_get_element[30-One More Time]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pagination.TestPaginatedList",
                "name": "test_get_element_index_error",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pagination.TestPaginatedList",
                "name": "test_get_element_negative_value",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pagination.TestPaginatedList",
                "name": "test_slicing_simple",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pagination.TestPaginatedList",
                "name": "test_slicing_no_start",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pagination.TestPaginatedList",
                "name": "test_slicing_no_end",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pagination.TestPaginatedList",
                "name": "test_slicing_with_step",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pagination.TestPaginatedList",
                "name": "test_authenticated_requests",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_album.TestAlbum",
                "name": "test_basic",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_album.TestAlbum",
                "name": "test_get_tracks",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_album.TestAlbum",
                "name": "test_contributors",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_album.TestAlbum",
                "name": "test_as_dict",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_artist.TestArtist",
                "name": "test_attributes",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_artist.TestArtist",
                "name": "test_get_albums",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_artist.TestArtist",
                "name": "test_get_top",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_artist.TestArtist",
                "name": "test_get_radio",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_artist.TestArtist",
                "name": "test_get_related",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_artist.TestArtist",
                "name": "test_get_playlists",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_chart.TestChart",
                "name": "test_get_tracks",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_chart.TestChart",
                "name": "test_get_artists",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_chart.TestChart",
                "name": "test_get_albums",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_chart.TestChart",
                "name": "test_get_playlists",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_chart.TestChart",
                "name": "test_get_podcasts",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_editorial.TestEditorial",
                "name": "test_attributes",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_editorial.TestEditorial",
                "name": "test_get_selection",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_editorial.TestEditorial",
                "name": "test_get_chart",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_editorial.TestEditorial",
                "name": "test_get_releases",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_episode.TestEpisode",
                "name": "test_get_episode",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_episode.TestEpisode",
                "name": "test_as_dict",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_episode.TestEpisode",
                "name": "test_access_inferable_fields",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_episode.TestEpisode",
                "name": "test_access_non_inferable_field",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_episode.TestEpisode",
                "name": "test_add_bookmark",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_episode.TestEpisode",
                "name": "test_remove_bookmark",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_genre.TestGenre",
                "name": "test_attributes",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_genre.TestGenre",
                "name": "test_get_artists",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_genre.TestGenre",
                "name": "test_get_podcasts",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_genre.TestGenre",
                "name": "test_get_radios",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_playlist.TestPlaylist",
                "name": "test_attributes",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_playlist.TestPlaylist",
                "name": "test_get_tracks",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_playlist.TestPlaylist",
                "name": "test_get_fans",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_playlist.TestPlaylist",
                "name": "test_add_tracks",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_playlist.TestPlaylist",
                "name": "test_delete_tracks",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_playlist.TestPlaylist",
                "name": "test_reorder_tracks",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_playlist.TestPlaylist",
                "name": "test_mark_seen",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_podcast.TestPodcast",
                "name": "test_get_episodes",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_radio.TestRadio",
                "name": "test_attributes",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_radio.TestRadio",
                "name": "test_get_tracks",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_resource.TestResource",
                "name": "test_resource_relation",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_resource.TestResource",
                "name": "test_access_non_inferable_field_simplified_objet",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_resource.TestResource",
                "name": "test_access_no_infinite_fetch",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_resource.TestResource",
                "name": "test_field_not_found",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_track.TestTrack",
                "name": "test_track_attributes",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_track.TestTrack",
                "name": "test_contributors",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_get_albums",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_get_artists",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_get_followers",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_get_followings",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_get_playlists",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_get_tracks",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_add_album_by_id",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_add_album_obj",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_remove_album_by_id",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_remove_album_obj",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_add_track_id",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_add_track_obj",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_remove_track_id",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_remove_track_obj",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_add_artist_id",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_add_artist_obj",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_remove_artist_id",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_remove_artist_obj",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_follow_by_id_fail",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_follow_by_id_ok",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_follow_obj",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_unfollow_by_id",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_unfollow_obj",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_add_playlist_failed",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_add_playlist_by_id",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_add_playlist_obj",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_remove_playlist_by_id",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_remove_playlist_obj",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.resources.test_user.TestUser",
                "name": "test_create_playlist",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[479f3656-980c-445e-9f5e-41df1e07d3ed/commitlint] \ud83d\ude80  Start image=crawlergpt:latest\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ] \ud83d\ude80  Start image=crawlergpt:latest\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[479f3656-980c-445e-9f5e-41df1e07d3ed/commitlint]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/commitlint]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/commitlint]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/browniebroke-deezer-python] user=0 workdir=\n[479f3656-980c-445e-9f5e-41df1e07d3ed/commitlint]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/browniebroke-deezer-python] user=0 workdir=\n[479f3656-980c-445e-9f5e-41df1e07d3ed/commitlint]   \u2601  git clone 'https://github.com/wagoid/commitlint-github-action' # ref=v5.4.1\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[479f3656-980c-445e-9f5e-41df1e07d3ed/commitlint] \u2b50 Run Main actions/checkout@v3\n[479f3656-980c-445e-9f5e-41df1e07d3ed/commitlint]   \u2705  Success - Main actions/checkout@v3\n[479f3656-980c-445e-9f5e-41df1e07d3ed/commitlint] \u2b50 Run Main wagoid/commitlint-github-action@v5.4.1\n[479f3656-980c-445e-9f5e-41df1e07d3ed/commitlint]   \ud83d\udc33  docker pull image=wagoid/commitlint-github-action:5.4.1 platform= username= forcePull=false\n[479f3656-980c-445e-9f5e-41df1e07d3ed/commitlint]   \ud83d\udc33  docker create image=wagoid/commitlint-github-action:5.4.1 platform= entrypoint=[] cmd=[]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1.3.3\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ] \u2b50 Run Pre snok/install-poetry@v1.3.3\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2705  Success - Pre snok/install-poetry@v1.3.3\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3.1.4\n[479f3656-980c-445e-9f5e-41df1e07d3ed/commitlint]   \ud83d\udc33  docker run image=wagoid/commitlint-github-action:5.4.1 platform= entrypoint=[] cmd=[]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/commitlint]   | error: could not lock config file //.gitconfig: Permission denied\n[479f3656-980c-445e-9f5e-41df1e07d3ed/commitlint]   \u274c  Failure - Main wagoid/commitlint-github-action@v5.4.1\n[479f3656-980c-445e-9f5e-41df1e07d3ed/commitlint] exit with `FAILURE`: 255\n[479f3656-980c-445e-9f5e-41df1e07d3ed/commitlint] \ud83c\udfc1  Job failed\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:3.8]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ] \u2b50 Run Main actions/checkout@v3\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2705  Success - Main actions/checkout@v3\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ] \u2b50 Run Main Set up Python\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udc33  docker cp src=/tmp/act-cache/18ba8c39-dff1-4687-ad58-e9368fddc581/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2753  ::group::Installed versions\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udcac  ::debug::isExplicit: \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udcac  ::debug::explicit? false\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udcac  ::debug::explicit? true\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udcac  ::debug::explicit? true\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udcac  ::debug::explicit? true\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udcac  ::debug::explicit? true\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udcac  ::debug::explicit? true\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udcac  ::debug::explicit? true\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udcac  ::debug::matched: 3.8.11\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Successfully set up CPython (3.8.11)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2753  ::endgroup::\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2705  Success - Main Set up Python\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib/pkgconfig\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2699  ::set-output:: python-version=3.8.11\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.8.11/x64/bin/python\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ] \u2b50 Run Main snok/install-poetry@v1.3.3\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udc33  docker cp src=/tmp/act-cache/18ba8c39-dff1-4687-ad58-e9368fddc581/act/snok-install-poetry@v1.3.3/ dst=/var/run/act/actions/snok-install-poetry@v1.3.3/\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1.3.3/] user=0 workdir=\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ] \u2b50 Run Main Install and configure Poetry\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Retrieving Poetry metadata\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | # Welcome to Poetry!\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | This will download and install the latest version of Poetry,\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | a dependency and package manager for Python.\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | /home/runneradmin/.local/bin\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | You can uninstall at any time by executing this script with the --uninstall option,\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | and these changes will be reverted.\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Installing Poetry (1.5.1)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Installing Poetry (1.5.1): Creating environment\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Installing Poetry (1.5.1): Installing Poetry\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Installing Poetry (1.5.1): Creating script\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Installing Poetry (1.5.1): Done\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Poetry (1.5.1) is installed now. Great!\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | environment variable.\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | You can test that everything is set up by executing:\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | `poetry --version`\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \u001b[33mDone \u2705\u001b[0m\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2705  Success - Main Install and configure Poetry\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2705  Success - Main snok/install-poetry@v1.3.3\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ] \u2b50 Run Main Install Dependencies\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3.sh] user= workdir=\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Creating virtualenv deezer-python-B0_Yl1Zo-py3.8 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Using virtualenv: /home/runneradmin/.cache/pypoetry/virtualenvs/deezer-python-B0_Yl1Zo-py3.8\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Installing dependencies from lock file\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Finding the necessary packages for the current system\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Package operations: 33 installs, 0 updates, 0 removals\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing commonmark (0.9.1)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing idna (3.4)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing multidict (6.0.4)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing pygments (2.15.1)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing typing-extensions (4.6.3)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing certifi (2023.5.7)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing charset-normalizer (3.1.0)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing colorama (0.4.6)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing exceptiongroup (1.1.1)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing click (8.1.3)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing pluggy (1.0.0)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing pyyaml (6.0)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing packaging (23.1)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing iniconfig (2.0.0)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing six (1.16.0)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing rich (12.6.0)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing tomli (2.0.1)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing shellingham (1.5.0.post1)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing wrapt (1.15.0)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing yarl (1.9.2)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing urllib3 (1.26.16)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing coverage (7.2.7)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing marshmallow (3.19.0)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing pytest (7.4.0)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing python-dotenv (0.21.1)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing typer (0.9.0)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing vcrpy (5.0.0)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing requests (2.31.0)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing deezer-oauth-cli (1.0.0)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing environs (9.5.0)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing pytest-cov (4.1.0)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing pytest-mock (3.11.1)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |   \u2022 Installing pytest-vcr (1.0.2)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Installing the current project: deezer-python (6.0.0)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2705  Success - Main Install Dependencies\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ] \u2b50 Run Main Test with Pytest\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4.sh] user= workdir=\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | ============================= test session starts ==============================\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | platform linux -- Python 3.8.11, pytest-7.4.0, pluggy-1.0.0 -- /home/runneradmin/.cache/pypoetry/virtualenvs/deezer-python-B0_Yl1Zo-py3.8/bin/python\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | cachedir: .pytest_cache\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/browniebroke-deezer-python\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | configfile: pyproject.toml\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | plugins: mock-3.11.1, vcr-1.0.2, cov-4.1.0\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | collecting ... collected 191 items\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_access_token_set PASSED           [  0%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_request_404 PASSED                [  1%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_request_unknown_resource PASSED   [  1%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_album PASSED                  [  2%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_no_album_raise PASSED             [  2%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_artist PASSED                 [  3%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_overall_chart PASSED          [  3%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_chart PASSED                  [  4%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_overall_tracks_chart PASSED   [  4%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_tracks_chart PASSED           [  5%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_overall_albums_chart PASSED   [  5%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_albums_chart PASSED           [  6%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_overall_artists_chart PASSED  [  6%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_artists_chart PASSED          [  7%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_overall_playlists_chart PASSED [  7%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_playlists_chart PASSED        [  8%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_overall_podcasts_chart PASSED [  8%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_podcasts_chart PASSED         [  9%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_editorial PASSED              [  9%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_no_editorial_raise PASSED         [ 10%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_list_editorials PASSED            [ 10%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_episode PASSED                [ 11%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_no_episode_raise PASSED           [ 12%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_genre PASSED                  [ 12%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_no_genre_raise PASSED             [ 13%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_list_genres PASSED                [ 13%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_playlist PASSED               [ 14%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_no_playlist_raise PASSED          [ 14%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_podcast PASSED                [ 15%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_no_podcast_raise PASSED           [ 15%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_radio PASSED                  [ 16%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_no_radio_raise PASSED             [ 16%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_list_radios PASSED                [ 17%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_radios_top PASSED             [ 17%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_track PASSED                  [ 18%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_no_track_raise PASSED             [ 18%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_user PASSED                   [ 19%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_current_user PASSED           [ 19%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_no_user_raise PASSED              [ 20%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_user_recommended_tracks PASSED [ 20%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_user_recommended_albums PASSED [ 21%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_user_recommended_artists PASSED [ 21%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_user_recommended_playlists PASSED [ 22%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_user_flow PASSED              [ 23%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_user_albums[args0] PASSED     [ 23%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_user_albums[args1] PASSED     [ 24%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_add_user_album PASSED             [ 24%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_remove_user_album PASSED          [ 25%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_user_artists[args0] PASSED    [ 25%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_user_artists[args1] PASSED    [ 26%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_add_user_artist PASSED            [ 26%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_remove_user_artist PASSED         [ 27%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_user_followers[args0] PASSED  [ 27%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_user_followers[args1] PASSED  [ 28%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_user_followings[args0] PASSED [ 28%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_user_followings[args1] PASSED [ 29%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_add_user_following PASSED         [ 29%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_remove_user_following PASSED      [ 30%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_user_history PASSED           [ 30%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_user_tracks[args0] PASSED     [ 31%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_get_user_tracks[args1] PASSED     [ 31%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_add_user_track PASSED             [ 32%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_remove_user_track PASSED          [ 32%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_add_user_playlist PASSED          [ 33%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_remove_user_playlist PASSED       [ 34%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_create_playlist PASSED            [ 34%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_delete_playlist PASSED            [ 35%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_search_simple PASSED              [ 35%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_search_strict PASSED              [ 36%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_search_results_ordering[RANKING] PASSED [ 36%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_search_results_ordering[TRACK_ASC] PASSED [ 37%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_search_results_ordering[TRACK_DESC] PASSED [ 37%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_search_results_ordering[ARTIST_ASC] PASSED [ 38%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_search_results_ordering[ARTIST_DESC] PASSED [ 38%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_search_results_ordering[ALBUM_ASC] PASSED [ 39%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_search_results_ordering[ALBUM_DESC] PASSED [ 39%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_search_results_ordering[RATING_ASC] PASSED [ 40%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_search_results_ordering[RATING_DESC] PASSED [ 40%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_search_results_ordering[DURATION_ASC] PASSED [ 41%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_search_results_ordering[DURATION_DESC] PASSED [ 41%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_search_advanced_simple PASSED     [ 42%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_search_advanced_multiple PASSED   [ 42%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_search_albums PASSED              [ 43%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_search_artists PASSED             [ 43%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_search_playlists PASSED           [ 44%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_with_language_header[fr] PASSED   [ 45%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_with_language_header[ja] PASSED   [ 45%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_process_json_types[unknown] PASSED [ 46%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_process_json_types[album] PASSED  [ 46%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_process_json_types[artist] PASSED [ 47%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_process_json_types[editorial] PASSED [ 47%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_process_json_types[episode] PASSED [ 48%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_process_json_types[genre] PASSED  [ 48%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_process_json_types[playlist] PASSED [ 49%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_process_json_types[podcast] PASSED [ 49%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_process_json_types[radio] PASSED  [ 50%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_process_json_types[track] PASSED  [ 50%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_client.py::TestClient::test_process_json_types[user] PASSED   [ 51%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_exceptions.py::test_deezer_http_error[403-DeezerForbiddenError] PASSED [ 51%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_exceptions.py::test_deezer_http_error[404-DeezerNotFoundError] PASSED [ 52%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_exceptions.py::test_deezer_http_error[418-DeezerHTTPError] PASSED [ 52%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_exceptions.py::test_deezer_http_error[502-DeezerRetryableHTTPError] PASSED [ 53%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_pagination.py::TestPaginatedList::test_repr_many_results PASSED [ 53%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_pagination.py::TestPaginatedList::test_repr_little_results PASSED [ 54%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_pagination.py::TestPaginatedList::test_repr_empty PASSED      [ 54%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_pagination.py::TestPaginatedList::test_total PASSED           [ 55%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_pagination.py::TestPaginatedList::test_iterate PASSED         [ 56%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_pagination.py::TestPaginatedList::test_iterator PASSED        [ 56%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_pagination.py::TestPaginatedList::test_get_element[4-Alive 2007] PASSED [ 57%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_pagination.py::TestPaginatedList::test_get_element[30-One More Time] PASSED [ 57%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_pagination.py::TestPaginatedList::test_get_element_index_error PASSED [ 58%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_pagination.py::TestPaginatedList::test_get_element_negative_value PASSED [ 58%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_pagination.py::TestPaginatedList::test_slicing_simple PASSED  [ 59%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_pagination.py::TestPaginatedList::test_slicing_no_start PASSED [ 59%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_pagination.py::TestPaginatedList::test_slicing_no_end PASSED  [ 60%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_pagination.py::TestPaginatedList::test_slicing_with_step PASSED [ 60%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/test_pagination.py::TestPaginatedList::test_authenticated_requests PASSED [ 61%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_album.py::TestAlbum::test_basic PASSED              [ 61%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_album.py::TestAlbum::test_get_tracks PASSED         [ 62%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_album.py::TestAlbum::test_contributors PASSED       [ 62%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_album.py::TestAlbum::test_as_dict PASSED            [ 63%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_artist.py::TestArtist::test_attributes PASSED       [ 63%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_artist.py::TestArtist::test_get_albums PASSED       [ 64%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_artist.py::TestArtist::test_get_top PASSED          [ 64%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_artist.py::TestArtist::test_get_radio PASSED        [ 65%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_artist.py::TestArtist::test_get_related PASSED      [ 65%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_artist.py::TestArtist::test_get_playlists PASSED    [ 66%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_chart.py::TestChart::test_get_tracks PASSED         [ 67%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_chart.py::TestChart::test_get_artists PASSED        [ 67%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_chart.py::TestChart::test_get_albums PASSED         [ 68%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_chart.py::TestChart::test_get_playlists PASSED      [ 68%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_chart.py::TestChart::test_get_podcasts PASSED       [ 69%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_editorial.py::TestEditorial::test_attributes PASSED [ 69%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_editorial.py::TestEditorial::test_get_selection PASSED [ 70%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_editorial.py::TestEditorial::test_get_chart PASSED  [ 70%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_editorial.py::TestEditorial::test_get_releases PASSED [ 71%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_episode.py::TestEpisode::test_get_episode PASSED    [ 71%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_episode.py::TestEpisode::test_as_dict PASSED        [ 72%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_episode.py::TestEpisode::test_access_inferable_fields PASSED [ 72%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_episode.py::TestEpisode::test_access_non_inferable_field PASSED [ 73%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_episode.py::TestEpisode::test_add_bookmark PASSED   [ 73%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_episode.py::TestEpisode::test_remove_bookmark PASSED [ 74%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_genre.py::TestGenre::test_attributes PASSED         [ 74%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_genre.py::TestGenre::test_get_artists PASSED        [ 75%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_genre.py::TestGenre::test_get_podcasts PASSED       [ 75%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_genre.py::TestGenre::test_get_radios PASSED         [ 76%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_playlist.py::TestPlaylist::test_attributes PASSED   [ 76%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_playlist.py::TestPlaylist::test_get_tracks PASSED   [ 77%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_playlist.py::TestPlaylist::test_get_fans PASSED     [ 78%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_playlist.py::TestPlaylist::test_add_tracks PASSED   [ 78%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_playlist.py::TestPlaylist::test_delete_tracks PASSED [ 79%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_playlist.py::TestPlaylist::test_reorder_tracks PASSED [ 79%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_playlist.py::TestPlaylist::test_mark_seen PASSED    [ 80%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_podcast.py::TestPodcast::test_get_episodes PASSED   [ 80%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_radio.py::TestRadio::test_attributes PASSED         [ 81%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_radio.py::TestRadio::test_get_tracks PASSED         [ 81%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_resource.py::TestResource::test_resource_relation PASSED [ 82%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_resource.py::TestResource::test_access_non_inferable_field_simplified_objet PASSED [ 82%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_resource.py::TestResource::test_access_no_infinite_fetch PASSED [ 83%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_resource.py::TestResource::test_field_not_found PASSED [ 83%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_track.py::TestTrack::test_track_attributes PASSED   [ 84%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_track.py::TestTrack::test_contributors PASSED       [ 84%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_get_albums PASSED           [ 85%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_get_artists PASSED          [ 85%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_get_followers PASSED        [ 86%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_get_followings PASSED       [ 86%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_get_playlists PASSED        [ 87%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_get_tracks PASSED           [ 87%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_add_album_by_id PASSED      [ 88%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_add_album_obj PASSED        [ 89%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_remove_album_by_id PASSED   [ 89%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_remove_album_obj PASSED     [ 90%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_add_track_id PASSED         [ 90%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_add_track_obj PASSED        [ 91%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_remove_track_id PASSED      [ 91%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_remove_track_obj PASSED     [ 92%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_add_artist_id PASSED        [ 92%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_add_artist_obj PASSED       [ 93%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_remove_artist_id PASSED     [ 93%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_remove_artist_obj PASSED    [ 94%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_follow_by_id_fail PASSED    [ 94%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_follow_by_id_ok PASSED      [ 95%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_follow_obj PASSED           [ 95%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_unfollow_by_id PASSED       [ 96%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_unfollow_obj PASSED         [ 96%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_add_playlist_failed PASSED  [ 97%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_add_playlist_by_id PASSED   [ 97%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_add_playlist_obj PASSED     [ 98%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_remove_playlist_by_id PASSED [ 98%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_remove_playlist_obj PASSED  [ 99%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | tests/resources/test_user.py::TestUser::test_create_playlist PASSED      [100%]\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/browniebroke-deezer-python/report.xml -\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | ---------- coverage: platform linux, python 3.8.11-final-0 -----------\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Coverage XML written to file coverage.xml\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | \n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | ============================= 191 passed in 4.78s ==============================\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2705  Success - Main Test with Pytest\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ] \u2b50 Run Main Upload coverage report\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udc33  docker cp src=/tmp/act-cache/18ba8c39-dff1-4687-ad58-e9368fddc581/act/codecov-codecov-action@v3.1.4/ dst=/var/run/act/actions/codecov-codecov-action@v3.1.4/\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/codecov-codecov-action@v3.1.4/] user=0 workdir=\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v3.1.4/dist/index.js] user= workdir=\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Error: Cannot find module 'node:http'\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | Require stack:\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   | - /run/act/actions/codecov-codecov-action@v3.1.4/dist/index.js\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |     at Function.Module._resolveFilename (internal/modules/cjs/loader.js:889:15)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |     at Function.Module._load (internal/modules/cjs/loader.js:745:27)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |     at Module.require (internal/modules/cjs/loader.js:961:19)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |     at require (internal/modules/cjs/helpers.js:92:18)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |     at /run/act/actions/codecov-codecov-action@v3.1.4/webpack:/codecov-action/external node-commonjs \"node:http\":1:1\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |     at /run/act/actions/codecov-codecov-action@v3.1.4/dist/index.js:24630:3\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |     at Object.<anonymous> (/run/act/actions/codecov-codecov-action@v3.1.4/dist/index.js:24633:12)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |     at Module._compile (internal/modules/cjs/loader.js:1072:14)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |     at Object.Module._extensions..js (internal/modules/cjs/loader.js:1101:10)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   |     at Module.load (internal/modules/cjs/loader.js:937:32)\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u274c  Failure - Main Upload coverage report\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ] exitcode '1': failure\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ] \u2b50 Run Post snok/install-poetry@v1.3.3\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udc33  docker cp src=/tmp/act-cache/18ba8c39-dff1-4687-ad58-e9368fddc581/act/snok-install-poetry@v1.3.3/ dst=/var/run/act/actions/snok-install-poetry@v1.3.3/\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1.3.3/] user=0 workdir=\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ]   \u2705  Success - Post snok/install-poetry@v1.3.3\n[479f3656-980c-445e-9f5e-41df1e07d3ed/test      ] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'test' failed\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/browniebroke-deezer-python/.github/workflows/ci-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 251.41654324531555
    }
}