{
    "repository": "GClunies/noaa_coops",
    "stars": 57,
    "language": "python",
    "size": 251,
    "clone_url": "https://github.com/GClunies/noaa_coops.git",
    "timestamp": "2023-06-28T13:49:27.247746Z",
    "clone_success": true,
    "number_of_actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_station",
                "name": "test_station_metadata",
                "time": 3.985,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_station",
                "name": "test_station_inventory",
                "time": 3.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_station",
                "name": "test_station_data",
                "time": 3.533,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_station",
                "name": "test_invalid_datum",
                "time": 3.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_station",
                "name": "test_stations_from_bbox",
                "time": 0.69,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_station",
                "name": "test_stations_from_bbox_invalid_coorsds",
                "time": 1.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_station",
                "name": "test_stations_from_bbox_invalid_lon",
                "time": 0.627,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)] \ud83d\ude80  Start image=crawlergpt:latest\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/GClunies-noaa_coops] user=0 workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)] \u2b50 Run Pre Install Poetry\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \u2705  Success - Pre Install Poetry\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:3.10]\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)] \u2b50 Run Main Checkout Repo\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \u2705  Success - Main Checkout Repo\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)] \u2b50 Run Main Install Python\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udc33  docker cp src=/tmp/act-cache/3f648e75-ce6f-4719-ad90-4426e99bf8cd/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | [warning]Neither 'python-version' nor 'python-version-file' inputs were supplied. Attempting to find '.python-version' file.\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | [warning].python-version doesn't exist.\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udea7  ::warning::The `python-version` input is not set.  The version of Python currently in `PATH` will be used.\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \u2705  Success - Main Install Python\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)] \u2b50 Run Main Install Poetry\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udc33  docker cp src=/tmp/act-cache/3f648e75-ce6f-4719-ad90-4426e99bf8cd/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)] \u2b50 Run Main Install and configure Poetry\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Retrieving Poetry metadata\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | # Welcome to Poetry!\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | This will download and install the latest version of Poetry,\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | a dependency and package manager for Python.\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | /home/runneradmin/.local/bin\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | You can uninstall at any time by executing this script with the --uninstall option,\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | and these changes will be reverted.\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Installing Poetry (1.5.1)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Installing Poetry (1.5.1): Creating environment\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Installing Poetry (1.5.1): Installing Poetry\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Installing Poetry (1.5.1): Creating script\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Installing Poetry (1.5.1): Done\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Poetry (1.5.1) is installed now. Great!\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | environment variable.\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | You can test that everything is set up by executing:\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | `poetry --version`\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \u001b[33mDone \u2705\u001b[0m\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \u2705  Success - Main Install and configure Poetry\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \u2705  Success - Main Install Poetry\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)] \u2b50 Run Main Load cached venv (if available)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udc33  docker cp src=/tmp/act-cache/3f648e75-ce6f-4719-ad90-4426e99bf8cd/act/actions-cache@v3/ dst=/var/run/act/actions/actions-cache@v3/\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v3/] user=0 workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/restore/index.js] user= workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::Resolved Keys:\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::[\"venv-Linux--46f1ea2a5eb7cbb72a626049a8dd2db83eac94c246a9bc5ef0a6fdb677784973\"]\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::1.5.0\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:33441/_apis/artifactcache/cache?keys=venv-Linux--46f1ea2a5eb7cbb72a626049a8dd2db83eac94c246a9bc5ef0a6fdb677784973&version=25e65b70d167147605b4332eb57b6d34df8e0303b88c4de252efb18cf3ed148a\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Cache not found for input keys: venv-Linux--46f1ea2a5eb7cbb72a626049a8dd2db83eac94c246a9bc5ef0a6fdb677784973\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \u2705  Success - Main Load cached venv (if available)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)] \u2b50 Run Main Install dependencies (cache not available)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Creating virtualenv noaa-coops in /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/GClunies-noaa_coops/.venv\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Installing dependencies from lock file\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Package operations: 57 installs, 1 update, 0 removals\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing six (1.16.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing certifi (2023.5.7)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing charset-normalizer (3.1.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing idna (3.4)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing markupsafe (2.1.2)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing python-dateutil (2.8.2)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing urllib3 (2.0.2)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing arrow (1.2.3)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing boolean-py (4.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing distlib (0.3.6)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing filelock (3.12.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing mccabe (0.7.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing packaging (23.1)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing chardet (5.1.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing jinja2 (3.1.2)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing platformdirs (3.5.1)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing pyflakes (3.0.1)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing requests (2.30.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing snowballstemmer (2.2.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing tomli (2.0.1)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing pycodestyle (2.10.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing attrs (23.1.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing binaryornot (0.4.4)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing click (8.1.3)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing colorama (0.4.6)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing cachetools (5.3.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing iniconfig (2.0.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing isodate (0.6.1)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing flake8 (6.0.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing lxml (4.9.2)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing mypy-extensions (1.0.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing jinja2-time (0.2.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing pluggy (1.0.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing license-expression (30.1.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing exceptiongroup (1.1.1)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing pathspec (0.11.1)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing pydocstyle (6.3.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing numpy (1.24.3)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing pyproject-api (1.5.1)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing pytz (2023.3)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing python-debian (0.1.49)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing requests-file (1.5.1)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing requests-toolbelt (1.0.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Updating setuptools (67.8.0 -> 67.7.2)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing virtualenv (20.23.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing typing-extensions (4.5.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing autoflake (2.1.1)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing black (23.3.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing darglint (1.8.1)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing flake8-docstrings (1.7.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing isort (5.12.0)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing make (0.1.6.post2)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing pytest (7.3.1)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing reuse (1.1.2)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing toml (0.10.2)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing pandas (1.5.3)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing tox (4.5.1)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   |   \u2022 Installing zeep (4.2.1)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \u2705  Success - Main Install dependencies (cache not available)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)] \u2b50 Run Main Lint\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \u2705  Success - Main Lint\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)] \u2b50 Run Post Load cached venv (if available)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/save/index.js] user= workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::1.5.0\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::Search path '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/GClunies-noaa_coops/.venv'\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::Matched: .venv\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::Cache Paths:\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::[\".venv\"]\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::Archive Path: /tmp/fe6c565d-b318-47a7-a1f4-b0914895cc76/cache.tzst\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | [command]/usr/bin/tar --posix -cf cache.tzst --exclude cache.tzst -P -C /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/GClunies-noaa_coops --files-from manifest.txt --use-compress-program zstdmt\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::File Size: 43891332\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::Reserving Cache\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:33441/_apis/artifactcache/caches\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::Saving Cache (ID: 1)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::Upload cache\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:33441/_apis/artifactcache/caches/1\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::Upload concurrency: 4\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::Upload chunk size: 33554432\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::Awaiting all uploads\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 0 with content range: bytes 0-33554431/*\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::Uploading chunk of size 10336900 bytes at offset 33554432 with content range: bytes 33554432-43891331/*\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::Commiting cache\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Cache Size: ~42 MB (43891332 B)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:33441/_apis/artifactcache/caches/1\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Cache saved successfully\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   | Cache saved with key: venv-Linux--46f1ea2a5eb7cbb72a626049a8dd2db83eac94c246a9bc5ef0a6fdb677784973\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \u2705  Success - Post Load cached venv (if available)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)] \u2b50 Run Post Install Poetry\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udc33  docker cp src=/tmp/act-cache/3f648e75-ce6f-4719-ad90-4426e99bf8cd/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \u2705  Success - Post Install Poetry\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)] \u2b50 Run Post Install Python\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)]   \u2705  Success - Post Install Python\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Lint (3.10, ubuntu-latest)] \ud83c\udfc1  Job succeeded\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ] \ud83d\ude80  Start image=crawlergpt:latest\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/GClunies-noaa_coops] user=0 workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ] \u2b50 Run Pre Install Poetry\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \u2705  Success - Pre Install Poetry\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:3.8]\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ] \u2b50 Run Main Checkout Repo\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \u2705  Success - Main Checkout Repo\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ] \u2b50 Run Main Install Python 3.8\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udc33  docker cp src=/tmp/act-cache/3f648e75-ce6f-4719-ad90-4426e99bf8cd/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | [warning]Neither 'python-version' nor 'python-version-file' inputs were supplied. Attempting to find '.python-version' file.\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | [warning].python-version doesn't exist.\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udea7  ::warning::The `python-version` input is not set.  The version of Python currently in `PATH` will be used.\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \u2705  Success - Main Install Python 3.8\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ] \u2b50 Run Main Install Poetry\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udc33  docker cp src=/tmp/act-cache/3f648e75-ce6f-4719-ad90-4426e99bf8cd/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ] \u2b50 Run Main Install and configure Poetry\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | Retrieving Poetry metadata\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | # Welcome to Poetry!\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | This will download and install the latest version of Poetry,\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | a dependency and package manager for Python.\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | /home/runneradmin/.local/bin\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | You can uninstall at any time by executing this script with the --uninstall option,\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | and these changes will be reverted.\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | Installing Poetry (1.5.1)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | Installing Poetry (1.5.1): Creating environment\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | Installing Poetry (1.5.1): Installing Poetry\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | Installing Poetry (1.5.1): Creating script\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | Installing Poetry (1.5.1): Done\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | Poetry (1.5.1) is installed now. Great!\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | environment variable.\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | You can test that everything is set up by executing:\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | `poetry --version`\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \u001b[33mDone \u2705\u001b[0m\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \u2705  Success - Main Install and configure Poetry\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \u2705  Success - Main Install Poetry\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ] \u2b50 Run Main Load cached venv (if available)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udc33  docker cp src=/tmp/act-cache/3f648e75-ce6f-4719-ad90-4426e99bf8cd/act/actions-cache@v3/ dst=/var/run/act/actions/actions-cache@v3/\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v3/] user=0 workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/restore/index.js] user= workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udcac  ::debug::Resolved Keys:\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udcac  ::debug::[\"venv-Linux--46f1ea2a5eb7cbb72a626049a8dd2db83eac94c246a9bc5ef0a6fdb677784973\"]\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udcac  ::debug::1.5.0\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:33441/_apis/artifactcache/cache?keys=venv-Linux--46f1ea2a5eb7cbb72a626049a8dd2db83eac94c246a9bc5ef0a6fdb677784973&version=25e65b70d167147605b4332eb57b6d34df8e0303b88c4de252efb18cf3ed148a\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \u2699  ***\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udcac  ::debug::Cache Result:\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udcac  ::debug::{\"archiveLocation\":\"***\",\"cacheKey\":\"venv-linux--46f1ea2a5eb7cbb72a626049a8dd2db83eac94c246a9bc5ef0a6fdb677784973\",\"result\":\"hit\"}\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udcac  ::debug::Archive Path: /tmp/514c5061-bea1-46e3-9550-bb6360c5c968/cache.tzst\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udcac  ::debug::Use Azure SDK: true\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udcac  ::debug::Download concurrency: 8\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udcac  ::debug::Request timeout (ms): 30000\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udcac  ::debug::Cache segment download timeout mins env var: undefined\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udcac  ::debug::Segment download timeout (ms): 600000\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udcac  ::debug::Lookup only: false\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | Cache Size: ~42 MB (43891332 B)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | [command]/usr/bin/tar -xf /tmp/514c5061-bea1-46e3-9550-bb6360c5c968/cache.tzst -P -C /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/GClunies-noaa_coops --use-compress-program unzstd\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | Cache restored successfully\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | Cache restored from key: venv-linux--46f1ea2a5eb7cbb72a626049a8dd2db83eac94c246a9bc5ef0a6fdb677784973\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \u2705  Success - Main Load cached venv (if available)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \u2699  ::set-output:: cache-hit=true\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ] \u2b50 Run Main Test\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | ============================= test session starts ==============================\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | platform linux -- Python 3.8.10, pytest-7.3.1, pluggy-1.0.0 -- /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/GClunies-noaa_coops/.venv/bin/python\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | cachedir: .pytest_cache\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/GClunies-noaa_coops\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | configfile: pytest.ini\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | collecting ... collected 7 items\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | tests/test_station.py::test_station_metadata PASSED                      [ 14%]\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | tests/test_station.py::test_station_inventory PASSED                     [ 28%]\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | tests/test_station.py::test_station_data PASSED                          [ 42%]\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | tests/test_station.py::test_invalid_datum PASSED                         [ 57%]\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | tests/test_station.py::test_stations_from_bbox PASSED                    [ 71%]\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | tests/test_station.py::test_stations_from_bbox_invalid_coorsds PASSED    [ 85%]\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | tests/test_station.py::test_stations_from_bbox_invalid_lon PASSED        [100%]\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | \n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/GClunies-noaa_coops/report.xml -\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | ============================== 7 passed in 20.10s ==============================\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \u2705  Success - Main Test\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ] \u2b50 Run Post Load cached venv (if available)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/save/index.js] user= workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udcac  ::debug::Cache state/key: venv-linux--46f1ea2a5eb7cbb72a626049a8dd2db83eac94c246a9bc5ef0a6fdb677784973\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   | Cache hit occurred on the primary key venv-Linux--46f1ea2a5eb7cbb72a626049a8dd2db83eac94c246a9bc5ef0a6fdb677784973, not saving cache.\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \u2705  Success - Post Load cached venv (if available)\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ] \u2b50 Run Post Install Poetry\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udc33  docker cp src=/tmp/act-cache/3f648e75-ce6f-4719-ad90-4426e99bf8cd/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \u2705  Success - Post Install Poetry\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ] \u2b50 Run Post Install Python 3.8\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ]   \u2705  Success - Post Install Python 3.8\n[7f166f31-9998-42e1-89a0-5e7ee85932d7/Test (3.8, ubuntu-latest) ] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/GClunies-noaa_coops/.github/workflows/pull_request-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 412.89861941337585
    }
}